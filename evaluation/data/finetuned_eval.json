{
    "1": {
        "compiled": true,
        "executed": true,
        "stdout": "Indices: 1, 2\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "9": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:21:26:\n\n   21 |     function isPalindrome(x) result(res)\n      |                          1\nError: Procedure \u2018ispalindrome\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:22:21:\n\n   22 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:23:32:\n\n   23 |         integer, intent(in) :: x\n      |                                1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:24:22:\n\n   24 |         logical :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:25:20:\n\n   25 |         integer :: y\n      |                    1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:27:13:\n\n   27 |         y = x\n      |             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:28:24:\n\n   28 |         do while (y > 0)\n      |                        1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:29:46:\n\n   29 |             if (mod(x, 10) /= mod(y, 10)) then\n      |                                              1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:30:29:\n\n   30 |                 res = .false.\n      |                             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:31:22:\n\n   31 |                 return\n      |                      1\nError: Unexpected RETURN statement in CONTAINS section at (1)\ntemp.f95:32:15:\n\n   32 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:33:22:\n\n   33 |             x = x / 10\n      |                      1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:34:22:\n\n   34 |             y = y / 10\n      |                      1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:35:11:\n\n   35 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:36:20:\n\n   36 |         res = .true.\n      |                    1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:37:7:\n\n   37 |     end function isPalindrome\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "13": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:25:\n\n    6 |     character(len=*) :: s\n      |                         1\nError: Entity with assumed character length at (1) must be a dummy argument or a PARAMETER\ntemp.f95:47:54:\n\n   47 |                 allocate(character(len=len(roman)+len(decode(n))) :: roman)\n      |                                                      1\nError: Function \u2018decode\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:43:39:\n\n   43 |             allocate(character(len=len(decode(n / 1000))+1) :: roman)\n      |                                       1\nError: Function \u2018decode\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:44:20:\n\n   44 |             roman = decode(n / 1000) // M\n      |                    1\nError: Function \u2018decode\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:45:12:\n\n   45 |             n = mod(n, 1000)\n      |            1\nError: Dummy argument \u2018n\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:48:32:\n\n   48 |                 roman = roman // decode(n)\n      |                                1\nError: Function \u2018decode\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "14": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:19:17:\n\n   19 |     function lcp(strs) result(lcp_str)\n      |                 1\nError: Procedure \u2018lcp\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:20:21:\n\n   20 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:21:48:\n\n   21 |         character(len=:), allocatable :: strs(:)\n      |                                                1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:22:48:\n\n   22 |         character(len=:), allocatable :: lcp_str\n      |                                                1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:23:26:\n\n   23 |         integer :: i, j, k\n      |                          1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:24:24:\n\n   24 |         logical :: found\n      |                        1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:26:32:\n\n   26 |         do i = 1, size(strs) - 1\n      |                                1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:27:36:\n\n   27 |             do j = i + 1, size(strs)\n      |                                    1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:28:54:\n\n   28 |                 if (strs(i)(1:1) == strs(j)(1:1)) then\n      |                                                      1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:29:34:\n\n   29 |                     found = .true.\n      |                                  1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:30:63:\n\n   30 |                     do k = 2, min(size(strs(i)), size(strs(j)))\n      |                                                               1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:31:62:\n\n   31 |                         if (strs(i)(k:k) /= strs(j)(k:k)) then\n      |                                                              1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:32:43:\n\n   32 |                             found = .false.\n      |                                           1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:33:32:\n\n   33 |                             exit\n      |                                1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:34:27:\n\n   34 |                         end if\n      |                           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:35:23:\n\n   35 |                     end do\n      |                       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:36:35:\n\n   36 |                     if (found) then\n      |                                   1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:37:48:\n\n   37 |                         lcp_str = strs(i)(1:k-1)\n      |                                                1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:38:30:\n\n   38 |                         return\n      |                              1\nError: Unexpected RETURN statement in CONTAINS section at (1)\ntemp.f95:39:23:\n\n   39 |                     end if\n      |                       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:40:19:\n\n   40 |                 end if\n      |                   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:41:15:\n\n   41 |             end do\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:42:11:\n\n   42 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:43:20:\n\n   43 |         lcp_str = ''\n      |                    1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:44:7:\n\n   44 |     end function lcp\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:7:22:\n\n    7 |     strs = [\"flower \", \"flow \", \"flight \"]\n      |                      1\nError: Different CHARACTER lengths (7/5) in array constructor at (1)\ntemp.f95:10:26:\n\n   10 |     write(*,*) 'Output: ', lcp(strs)\n      |                          1\nError: The allocatable object \u2018lcp\u2019 at (1) must have an explicit function interface or be declared as array\ntemp.f95:12:19:\n\n   12 |     strs = [\"dog \", \"racecar \", \"car \"]\n      |                   1\nError: Different CHARACTER lengths (4/8) in array constructor at (1)\ntemp.f95:15:26:\n\n   15 |     write(*,*) 'Output: ', lcp(strs)\n      |                          1\nError: The allocatable object \u2018lcp\u2019 at (1) must have an explicit function interface or be declared as array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "20": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\n Input: ()\n Output:  T\n \n Example 2:\n Input: ()[]{}\n Output:  T\n \n Example 3:\n Input: (\\]\n Output:  T\n \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "21": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "f951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "26": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:66:8:\n\n   66 |     do i = 2, size(nums)\n      |        1\nError: Symbol \u2018i\u2019 at (1) has no IMPLICIT type\ntemp.f95:13:25:\n\n   13 |     k = remove_duplicates(nums)\n      |                         1\nError: Return type mismatch of function \u2018remove_duplicates\u2019 at (1) (UNKNOWN/INTEGER(4))\ntemp.f95:13:8:\n\n   13 |     k = remove_duplicates(nums)\n      |        1\nError: Function \u2018remove_duplicates\u2019 at (1) has no IMPLICIT type\ntemp.f95:19:9:\n\n   19 |     nums(4) = 1\n      |         1\nWarning: Array reference at (1) is out of bounds (4 > 3) in dimension 1\ntemp.f95:20:9:\n\n   20 |     nums(5) = 1\n      |         1\nWarning: Array reference at (1) is out of bounds (5 > 3) in dimension 1\ntemp.f95:21:9:\n\n   21 |     nums(6) = 2\n      |         1\nWarning: Array reference at (1) is out of bounds (6 > 3) in dimension 1\ntemp.f95:22:9:\n\n   22 |     nums(7) = 2\n      |         1\nWarning: Array reference at (1) is out of bounds (7 > 3) in dimension 1\ntemp.f95:23:9:\n\n   23 |     nums(8) = 3\n      |         1\nWarning: Array reference at (1) is out of bounds (8 > 3) in dimension 1\ntemp.f95:24:9:\n\n   24 |     nums(9) = 3\n      |         1\nWarning: Array reference at (1) is out of bounds (9 > 3) in dimension 1\ntemp.f95:25:9:\n\n   25 |     nums(10) = 4\n      |         1\nWarning: Array reference at (1) is out of bounds (10 > 3) in dimension 1\ntemp.f95:13:25:\n\n   13 |     k = remove_duplicates(nums)\n      |                         1\nError: Return type mismatch of function \u2018remove_duplicates\u2019 at (1) (UNKNOWN/INTEGER(4))\ntemp.f95:27:8:\n\n   27 |     k = remove_duplicates(nums)\n      |        1\nError: Function \u2018remove_duplicates\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "27": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:75:20:\n\n   75 |     backspace(unit=*)\n      |                    1\nError: Invalid value for UNIT specification at (1)\ntemp.f95:85:36:\n\n   85 | subroutine remove_element(nums, val)\n      |                                    1\nError: Symbol \u2018remove_element\u2019 at (1) already has an explicit interface\ntemp.f95:86:17:\n\n   86 |     implicit none\n      |                 1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:87:37:\n\n   87 |     integer, intent(inout) :: nums(*)\n      |                                     1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:88:25:\n\n   88 |     integer, value :: val\n      |                         1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:89:19:\n\n   89 |     integer :: i, j\n      |                   1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:92:9:\n\n   92 |     k = 0\n      |         1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:93:24:\n\n   93 |     do i = 1, size(nums)\n      |                        1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:94:32:\n\n   94 |         if (nums(i) /= val) then\n      |                                1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:95:21:\n\n   95 |             k = k + 1\n      |                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:97:11:\n\n   97 |         end if\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:98:7:\n\n   98 |     end do\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:101:10:\n\n  101 |     return\n      |          1\nError: Unexpected RETURN statement in CONTAINS section at (1)\ntemp.f95:102:3:\n\n  102 | end subroutine\n      |   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:76:23:\n\n   76 |     allocate(nums(size(line)))\n      |                       1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "28": {
        "compiled": true,
        "executed": false,
        "stdout": " Example 1:\n",
        "stderr": "At line 12 of file temp.f95 (unit = 6, file = 'stdout')\nFortran runtime error: Expected INTEGER for item 2 in formatted transfer, got CHARACTER\n(A,I0)\n   ^\n\nError termination. Backtrace:\n#0  0x7ed828979960 in ???\n#1  0x7ed82897a4d9 in ???\n#2  0x7ed828bbfec3 in ???\n#3  0x7ed828bcd0e2 in ???\n#4  0x7ed828bd06d1 in ???\n#5  0x7ed828bd0e05 in ???\n#6  0x57866eac33d7 in MAIN__\n#7  0x57866eac366c in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "35": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:10:37:\n\n   10 |     call binary_search_example(nums, target)\n      |                                     1\nError: Rank mismatch in argument \u2018target\u2019 at (1) (scalar and rank-1)\ntemp.f95:14:37:\n\n   14 |     call binary_search_example(nums, target)\n      |                                     1\nError: Rank mismatch in argument \u2018target\u2019 at (1) (scalar and rank-1)\ntemp.f95:18:37:\n\n   18 |     call binary_search_example(nums, target)\n      |                                     1\nError: Rank mismatch in argument \u2018target\u2019 at (1) (scalar and rank-1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "58": {
        "compiled": true,
        "executed": true,
        "stdout": " n =            0\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "66": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:8:4:\n\n    8 |     digits = [1, 2, 3]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 3)\ntemp.f95:9:48:\n\n    9 |     call increment_large_integer(digits, result)\n      |                                                1\nError: Type mismatch in argument \u2018digits\u2019 at (1); passed INTEGER(8) to INTEGER(4)\ntemp.f95:13:4:\n\n   13 |     digits = [4, 3, 2, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 4)\ntemp.f95:14:48:\n\n   14 |     call increment_large_integer(digits, result)\n      |                                                1\nError: Type mismatch in argument \u2018digits\u2019 at (1); passed INTEGER(8) to INTEGER(4)\ntemp.f95:18:4:\n\n   18 |     digits = [9]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 1)\ntemp.f95:19:48:\n\n   19 |     call increment_large_integer(digits, result)\n      |                                                1\nError: Type mismatch in argument \u2018digits\u2019 at (1); passed INTEGER(8) to INTEGER(4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "67": {
        "compiled": true,
        "executed": true,
        "stdout": " \n \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "69": {
        "compiled": true,
        "executed": true,
        "stdout": "1\n2\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "70": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:32:57:\n\n   32 |             num_ways = climb_stairs(n - 1) + climb_stairs(n - 2)\n      |                                                         1\nError: Function \u2018climb_stairs\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "83": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:93:16:\n\n   93 |         curr => head\n      |                1\nError: Pointer assignment target is neither TARGET nor POINTER at (1)\ntemp.f95:71:16:\n\n   71 |         curr => head\n      |                1\nError: Pointer assignment target is neither TARGET nor POINTER at (1)\ntemp.f95:55:20:\n\n   55 |             curr => head\n      |                    1\nError: Pointer assignment target is neither TARGET nor POINTER at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "88": {
        "compiled": true,
        "executed": true,
        "stdout": "nums1 = \n\u0001\u0000\u0000\u0000\n\u0002\u0000\u0000\u0000\n\u0002\u0000\u0000\u0000\n\u0002\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\n\u0006\u0000\u0000\u0000\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "94": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:20:\n\n    5 |     type(tree_node), allocatable :: roots(:)[:]\n      |                    1\nError: Derived type \u2018tree_node\u2019 at (1) is being used before it is defined\ntemp.f95:8:13:\n\n    8 |     allocate(roots(n)[*])\n      |             1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:11:13:\n\n   11 |     allocate(roots(1)[1])\n      |             1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:12:13:\n\n   12 |     allocate(roots(1)[1]%left, source=tree_node(-1))\n      |             1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:13:13:\n\n   13 |     allocate(roots(1)[1]%right, source=tree_node(2))\n      |             1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:14:32:\n\n   14 |     call print_inorder(roots(1)[1])\n      |                                1\nError: Coarray designator at (1) but \u2018roots\u2019 is not a coarray\ntemp.f95:15:21:\n\n   15 |     deallocate(roots(1)[1])\n      |                     1\nError: Allocate-object at (1) is not a nonprocedure pointer nor an allocatable variable\ntemp.f95:18:13:\n\n   18 |     allocate(roots(1)[1])\n      |             1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:19:13:\n\n   19 |     allocate(roots(1)[1]%left, source=tree_node(-1))\n      |             1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:20:13:\n\n   20 |     allocate(roots(1)[1]%right, source=tree_node(-1))\n      |             1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:21:32:\n\n   21 |     call print_inorder(roots(1)[1])\n      |                                1\nError: Coarray designator at (1) but \u2018roots\u2019 is not a coarray\ntemp.f95:22:21:\n\n   22 |     deallocate(roots(1)[1])\n      |                     1\nError: Allocate-object at (1) is not a nonprocedure pointer nor an allocatable variable\ntemp.f95:25:13:\n\n   25 |     allocate(roots(1)[1])\n      |             1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:26:13:\n\n   26 |     allocate(roots(1)[1]%left, source=tree_node(1))\n      |             1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:27:13:\n\n   27 |     allocate(roots(1)[1]%right, source=tree_node(2))\n      |             1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:28:32:\n\n   28 |     call print_inorder(roots(1)[1])\n      |                                1\nError: Coarray designator at (1) but \u2018roots\u2019 is not a coarray\ntemp.f95:29:21:\n\n   29 |     deallocate(roots(1)[1])\n      |                     1\nError: Allocate-object at (1) is not a nonprocedure pointer nor an allocatable variable\ntemp.f95:34:24:\n\n   34 |         type(tree_node), intent(in) :: root\n      |                        1\nError: Derived type \u2018tree_node\u2019 at (1) is being used before it is defined\ntemp.f95:35:29:\n\n   35 |         if (associated(root%left)) then\n      |                             1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:36:37:\n\n   36 |             call print_inorder(root%left)\n      |                                     1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:37:11:\n\n   37 |         end if\n      |           1\nError: Expecting END SUBROUTINE statement at (1)\ntemp.f95:38:56:\n\n   38 |         write (unit=error_unit, fmt='(*(g0,1x))') root%value\n      |                                                        1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:39:29:\n\n   39 |         if (associated(root%right)) then\n      |                             1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:40:37:\n\n   40 |             call print_inorder(root%right)\n      |                                     1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:41:11:\n\n   41 |         end if\n      |           1\nError: Expecting END SUBROUTINE statement at (1)\ntemp.f95:1:12:\n\n    1 | program main\n      |            1\n......\n   46 | type :: tree_node\n      |                 2\nError: Two main PROGRAMs at (1) and (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "100": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:15:\n\n    5 |     type(node), target :: p(n)\n      |               1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:6:15:\n\n    6 |     type(node), target :: q(n)\n      |               1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:17:19:\n\n   17 |         type(node), intent(inout) :: nodes(:)\n      |                   1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:21:21:\n\n   21 |             allocate(nodes(i)%left)\n      |                     1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:22:21:\n\n   22 |             allocate(nodes(i)%right)\n      |                     1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:29:19:\n\n   29 |         type(node), intent(in) :: p(:)\n      |                   1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:30:19:\n\n   30 |         type(node), intent(in) :: q(:)\n      |                   1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:36:33:\n\n   36 |             if (associated(p(i)%left)) then\n      |                                 1\nError: Symbol \u2018p\u2019 at (1) has no IMPLICIT type\ntemp.f95:37:43:\n\n   37 |                 if (.not. associated(q(i)%left)) return\n      |                                           1\nError: Symbol \u2018q\u2019 at (1) has no IMPLICIT type\ntemp.f95:38:50:\n\n   38 |                 same = same .and. same_tree(p(i)%left, q(i)%left)\n      |                                                  1\nError: Symbol \u2018p\u2019 at (1) has no IMPLICIT type\ntemp.f95:39:16:\n\n   39 |             else\n      |                1\nError: Unexpected ELSE statement at (1)\ntemp.f95:40:37:\n\n   40 |                 if (associated(q(i)%left)) return\n      |                                     1\nError: Symbol \u2018q\u2019 at (1) has no IMPLICIT type\ntemp.f95:41:15:\n\n   41 |             end if\n      |               1\nError: Expecting END DO statement at (1)\ntemp.f95:43:33:\n\n   43 |             if (associated(p(i)%right)) then\n      |                                 1\nError: Symbol \u2018p\u2019 at (1) has no IMPLICIT type\ntemp.f95:44:43:\n\n   44 |                 if (.not. associated(q(i)%right)) return\n      |                                           1\nError: Symbol \u2018q\u2019 at (1) has no IMPLICIT type\ntemp.f95:45:50:\n\n   45 |                 same = same .and. same_tree(p(i)%right, q(i)%right)\n      |                                                  1\nError: Symbol \u2018p\u2019 at (1) has no IMPLICIT type\ntemp.f95:46:16:\n\n   46 |             else\n      |                1\nError: Unexpected ELSE statement at (1)\ntemp.f95:47:37:\n\n   47 |                 if (associated(q(i)%right)) return\n      |                                     1\nError: Symbol \u2018q\u2019 at (1) has no IMPLICIT type\ntemp.f95:48:15:\n\n   48 |             end if\n      |               1\nError: Expecting END DO statement at (1)\ntemp.f95:50:22:\n\n   50 |             if (p(i)%val /= q(i)%val) return\n      |                      1\nError: Symbol \u2018p\u2019 at (1) has no IMPLICIT type\ntemp.f95:1:12:\n\n    1 | program main\n      |            1\n......\n   56 | type node\n      |         2   \nError: Two main PROGRAMs at (1) and (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "101": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:4:46:\n\n    4 |     integer, parameter :: unit_in = input_unit, unit_out = output_unit\n      |                                              1\nError: Symbol \u2018input_unit\u2019 at (1) has no IMPLICIT type; did you mean \u2018output_unit\u2019?\ntemp.f95:5:20:\n\n    5 |     type(tree_node), pointer :: root\n      |                    1\nError: Derived type \u2018tree_node\u2019 at (1) is being used before it is defined\ntemp.f95:15:25:\n\n   15 |         class(tree_node), pointer, intent(in) :: root\n      |                         1\nError: Derived type \u2018tree_node\u2019 at (1) is being used before it is defined\ntemp.f95:17:25:\n\n   17 |         class(tree_node), pointer :: left, right\n      |                         1\nError: Derived type \u2018tree_node\u2019 at (1) is being used before it is defined\ntemp.f95:24:22:\n\n   24 |         left => root%left\n      |                      1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:25:23:\n\n   25 |         right => root%right\n      |                       1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:52:24:\n\n   52 |         type(tree_node), pointer, intent(out) :: root\n      |                        1\nError: Derived type \u2018tree_node\u2019 at (1) is being used before it is defined\ntemp.f95:59:21:\n\n   59 |             allocate(root)\n      |                     1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:60:18:\n\n   60 |             root%val = value\n      |                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:61:39:\n\n   61 |             call read_tree(unit, root%left)\n      |                                       1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:62:39:\n\n   62 |             call read_tree(unit, root%right)\n      |                                       1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:1:12:\n\n    1 | program main\n      |            1\n......\n   69 | type :: tree_node\n      |                 2\nError: Two main PROGRAMs at (1) and (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "104": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:17:\n\n    5 |     type, public :: node_t\n      |                 1\nError: Derived type at (1) can only be PUBLIC in the specification part of a module\ntemp.f95:7:22:\n\n    7 |         class(node_t), pointer :: left => null()\n      |                      1\nError: Derived type \u2018node_t\u2019 at (1) is being used before it is defined\ntemp.f95:8:22:\n\n    8 |         class(node_t), pointer :: right => null()\n      |                      1\nError: Derived type \u2018node_t\u2019 at (1) is being used before it is defined\ntemp.f95:9:7:\n\n    9 |     end type\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:13:28:\n\n   13 |             import :: node_t\n      |                            1\nError: Cannot IMPORT \u2018node_t\u2019 from host scoping unit at (1) - does not exist.\ntemp.f95:14:26:\n\n   14 |             class(node_t), intent(in) :: root\n      |                          1\nError: Derived type \u2018node_t\u2019 at (1) is being used before it is defined\ntemp.f95:19:28:\n\n   19 |             import :: node_t\n      |                            1\nError: Cannot IMPORT \u2018node_t\u2019 from host scoping unit at (1) - does not exist.\ntemp.f95:20:26:\n\n   20 |             class(node_t), intent(in) :: root\n      |                          1\nError: Derived type \u2018node_t\u2019 at (1) is being used before it is defined\ntemp.f95:25:17:\n\n   25 |     type(node_t), target :: root\n      |                 1\nError: Derived type \u2018node_t\u2019 at (1) is being used before it is defined\ntemp.f95:33:21:\n\n   33 |         type(node_t), intent(inout) :: root\n      |                     1\nError: Derived type \u2018node_t\u2019 at (1) is being used before it is defined\ntemp.f95:54:38:\n\n   54 |     function max_depth_recursive(root) result(res)\n      |                                      1\nError: Symbol \u2018max_depth_recursive\u2019 at (1) already has an explicit interface\ntemp.f95:55:22:\n\n   55 |         class(node_t), intent(in) :: root\n      |                      1\nError: Derived type \u2018node_t\u2019 at (1) is being used before it is defined\ntemp.f95:56:22:\n\n   56 |         integer :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:58:40:\n\n   58 |         if (.not. associated(root)) then\n      |                                        1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:59:19:\n\n   59 |             res = 0\n      |                   1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:60:12:\n\n   60 |         else\n      |            1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:61:52:\n\n   61 |             res = 1 + max(max_depth_recursive(root%left), max_depth_recursive(root%right))\n      |                                                    1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:62:11:\n\n   62 |         end if\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:63:7:\n\n   63 |     end function\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:65:38:\n\n   65 |     function max_depth_iterative(root) result(res)\n      |                                      1\nError: Symbol \u2018max_depth_iterative\u2019 at (1) already has an explicit interface\ntemp.f95:66:22:\n\n   66 |         class(node_t), intent(in) :: root\n      |                      1\nError: Derived type \u2018node_t\u2019 at (1) is being used before it is defined\ntemp.f95:67:22:\n\n   67 |         integer :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:69:21:\n\n   69 |         type(node_t), pointer :: current => root\n      |                     1\nError: Derived type \u2018node_t\u2019 at (1) is being used before it is defined\ntemp.f95:70:35:\n\n   70 |         integer :: level, max_level\n      |                                   1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:72:38:\n\n   72 |         do while (associated(current))\n      |                                      1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:73:21:\n\n   73 |             level = 0\n      |                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:74:42:\n\n   74 |             do while (associated(current))\n      |                                          1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:75:33:\n\n   75 |                 level = level + 1\n      |                                 1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:76:36:\n\n   76 |                 current => current%left\n      |                                    1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:77:15:\n\n   77 |             end do\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:78:45:\n\n   78 |             max_level = max(max_level, level)\n      |                                             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:79:27:\n\n   79 |             current => root\n      |                           1\nError: Unexpected pointer assignment statement in CONTAINS section at (1)\ntemp.f95:80:21:\n\n   80 |             level = 0\n      |                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:81:42:\n\n   81 |             do while (associated(current))\n      |                                          1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:82:33:\n\n   82 |                 level = level + 1\n      |                                 1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:83:36:\n\n   83 |                 current => current%right\n      |                                    1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:84:15:\n\n   84 |             end do\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:85:45:\n\n   85 |             max_level = max(max_level, level)\n      |                                             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:86:11:\n\n   86 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:88:23:\n\n   88 |         res = max_level\n      |                       1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:89:7:\n\n   89 |     end function\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:32:34:\n\n   32 |     subroutine test_max_depth(root)\n      |                                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:28:28:\n\n   28 |     call test_max_depth(root)\n      |                            1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "108": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:7:15:\n\n    7 |     type(Node), pointer :: root\n      |               1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:27:19:\n\n   27 |         type(Node), pointer, intent(out) :: root\n      |                   1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:31:17:\n\n   31 |         allocate(root)\n      |                 1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:32:14:\n\n   32 |         root%val = nums(1)\n      |              1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:33:14:\n\n   33 |         root%left => null()\n      |              1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:34:14:\n\n   34 |         root%right => null()\n      |              1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:44:20:\n\n   44 |         class(Node), pointer, intent(inout) :: node\n      |                    1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:47:24:\n\n   47 |         if (val < node%val) then\n      |                        1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:48:39:\n\n   48 |             if (.not. associated(node%left)) then\n      |                                       1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:49:31:\n\n   49 |                 allocate(node%left)\n      |                               1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:50:22:\n\n   50 |                 node%left%val = val\n      |                      1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:51:22:\n\n   51 |                 node%left%left => null()\n      |                      1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:52:22:\n\n   52 |                 node%left%right => null()\n      |                      1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:53:16:\n\n   53 |             else\n      |                1\nError: Unexpected ELSE statement at (1)\ntemp.f95:54:34:\n\n   54 |                 call insert(node%left, val)\n      |                                  1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:55:15:\n\n   55 |             end if\n      |               1\nError: Expecting END SUBROUTINE statement at (1)\ntemp.f95:56:12:\n\n   56 |         else\n      |            1\nError: Unexpected ELSE statement at (1)\ntemp.f95:57:39:\n\n   57 |             if (.not. associated(node%right)) then\n      |                                       1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:58:31:\n\n   58 |                 allocate(node%right)\n      |                               1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:59:22:\n\n   59 |                 node%right%val = val\n      |                      1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:60:22:\n\n   60 |                 node%right%left => null()\n      |                      1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:61:22:\n\n   61 |                 node%right%right => null()\n      |                      1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:62:16:\n\n   62 |             else\n      |                1\nError: Unexpected ELSE statement at (1)\ntemp.f95:63:34:\n\n   63 |                 call insert(node%right, val)\n      |                                  1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:64:15:\n\n   64 |             end if\n      |               1\nError: Expecting END SUBROUTINE statement at (1)\ntemp.f95:65:11:\n\n   65 |         end if\n      |           1\nError: Expecting END SUBROUTINE statement at (1)\ntemp.f95:71:20:\n\n   71 |         class(Node), pointer, intent(in) :: node\n      |                    1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:74:50:\n\n   74 |             write (*, '(I0)', advance='no') node%val\n      |                                                  1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:75:34:\n\n   75 |             call print_tree(node%left)\n      |                                  1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:76:34:\n\n   76 |             call print_tree(node%right)\n      |                                  1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:1:12:\n\n    1 | program main\n      |            1\n......\n   82 | type Node\n      |         2   \nError: Two main PROGRAMs at (1) and (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "110": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:53:29:\n\n   53 |         if (.not. associated(root)) then\n      |                             1\nError: \u2018pointer\u2019 argument of \u2018associated\u2019 intrinsic at (1) must be a POINTER\ntemp.f95:56:24:\n\n   56 |             depth = max(get_depth(root%left), get_depth(root%right)) + 1\n      |                        1\nError: Function \u2018get_depth\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:36:63:\n\n   36 |             call check_depth(root%left, depth + 1, is_balanced)\n      |                                                               1\nError: SUBROUTINE \u2018check_depth\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:36:40:\n\n   36 |             call check_depth(root%left, depth + 1, is_balanced)\n      |                                        1\nError: Non-variable expression in variable definition context (actual argument to INTENT = OUT/INOUT) at (1)\ntemp.f95:39:64:\n\n   39 |             call check_depth(root%right, depth + 1, is_balanced)\n      |                                                                1\nError: SUBROUTINE \u2018check_depth\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:39:41:\n\n   39 |             call check_depth(root%right, depth + 1, is_balanced)\n      |                                         1\nError: Non-variable expression in variable definition context (actual argument to INTENT = OUT/INOUT) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "111": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:52:12:\n\n   52 |     contains\n      |            1\nError: CONTAINS statement at (1) is already in a contained program unit\ntemp.f95:55:54:\n\n   55 |             type(node), intent(in), pointer :: current\n      |                                                      1\nError: Unexpected data declaration statement at (1)\ntemp.f95:56:32:\n\n   56 |             integer :: min_depth\n      |                                1\nError: Symbol \u2018min_depth\u2019 at (1) already has basic type of INTEGER\ntemp.f95:64:11:\n\n   64 |         end function\n      |           1\nError: Expecting END SUBROUTINE statement at (1)\ntemp.f95:49:20:\n\n   49 |         min_depth = min_depth_recursive(root)\n      |                    1\nError: Function \u2018min_depth_recursive\u2019 at (1) has no IMPLICIT type\ntemp.f95:61:37:\n\n   61 |                 min_depth = 1 + min([min_depth_recursive(current%left), &\n      |                                     1\nError: Function \u2018min_depth_recursive\u2019 at (1) has no IMPLICIT type\ntemp.f95:61:71:\n\n   61 |                 min_depth = 1 + min([min_depth_recursive(current%left), &\n      |                                                                       1\nError: Function \u2018min_depth_recursive\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "112": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:47:22:\n\n   47 |             hasPath = solve(node%left, targetSum - node%val)\n      |                      1\nError: Function \u2018solve\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:54:22:\n\n   54 |             hasPath = solve(node%right, targetSum - node%val)\n      |                      1\nError: Function \u2018solve\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:23:18:\n\n   23 |     open (newunit=unit_in, file=filename, status='old', action='read', &\n      |                  1\nError: Named constant \u2018unit_in\u2019 in variable definition context (NEWUNIT tag) at (1)\ntemp.f95:29:50:\n\n   29 |     read (unit=unit_in, fmt=*, iostat=status) root, targetSum\n      |                                                  1\nError: Data transfer element at (1) cannot have POINTER components unless it is processed by a defined input/output procedure\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "118": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:27:\n\n    6 |     integer :: row(numRows)\n      |                           1\nError: Explicit shaped array with nonconstant bounds at (1)\ntemp.f95:17:36:\n\n   17 |         print '(*(I1, :, \",\"))', row\n      |                                    1\nError: Function \u2018row\u2019 requires an argument list at (1)\ntemp.f95:10:12:\n\n   10 |             row(i) = 1\n      |            1\nError: Function \u2018row\u2019 at (1) has no IMPLICIT type\ntemp.f95:12:12:\n\n   12 |             row(i) = 1\n      |            1\nError: Function \u2018row\u2019 at (1) has no IMPLICIT type\ntemp.f95:14:16:\n\n   14 |                 row(j) = row(j - 1) + row(j)\n      |                1\nError: Function \u2018row\u2019 at (1) has no IMPLICIT type\ntemp.f95:14:41:\n\n   14 |                 row(j) = row(j - 1) + row(j)\n      |                                         1\nError: Function \u2018row\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "119": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:30:\n\n    6 |     integer :: row(rowIndex+1)\n      |                              1\nError: Explicit shaped array with nonconstant bounds at (1)\ntemp.f95:10:32:\n\n   10 |         call solve(rowIndex, row)\n      |                                1\nError: Symbol \u2018row\u2019 at (1) has no IMPLICIT type\ntemp.f95:45:36:\n\n   44 |         do i = 2, rowIndex+1\n      |                            2        \n   45 |             row(i) = row(i-1) + row(i-2)\n      |                                    1\nWarning: Array reference at (1) out of bounds (0 < 1) in loop beginning at (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "121": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:10:4:\n\n   10 |     prices = (/ 7, 1, 5, 3, 6, 4 /)\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (7 and 6)\ntemp.f95:16:4:\n\n   16 |     prices = (/ 7, 6, 4, 3, 1 /)\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (7 and 5)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "125": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\n Input: A man, a plan, a canal: Panama \n Output:  F\n \n Example 2:\n Input: race a car \n Output:  F\n \n Example 3:\n Input:   \n Output:  T\n \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "136": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:4:\n\n    9 |     nums = [2, 2, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 3)\ntemp.f95:19:4:\n\n   19 |     nums = [1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "141": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:36:45:\n\n   36 |     function hasCycle(head) result(has_cycle)\n      |                                             1\nError: Function result \u2018has_cycle\u2019 at (1) has no IMPLICIT type\ntemp.f95:18:16:\n\n   18 |     has_cycle = hasCycle(head)\n      |                1\nError: Cannot convert UNKNOWN to LOGICAL(4) at (1)\ntemp.f95:25:16:\n\n   25 |     has_cycle = hasCycle(head)\n      |                1\nError: Cannot convert UNKNOWN to LOGICAL(4) at (1)\ntemp.f95:31:16:\n\n   31 |     has_cycle = hasCycle(head)\n      |                1\nError: Cannot convert UNKNOWN to LOGICAL(4) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "144": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:89:51:\n\n   89 |             call read_tree(unit, root%left, exists)\n      |                                                   1\nError: SUBROUTINE \u2018read_tree\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:89:33:\n\n   89 |             call read_tree(unit, root%left, exists)\n      |                                 1\nError: Actual argument to \u2018root\u2019 at (1) must be polymorphic\ntemp.f95:90:52:\n\n   90 |             call read_tree(unit, root%right, exists)\n      |                                                    1\nError: SUBROUTINE \u2018read_tree\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:90:33:\n\n   90 |             call read_tree(unit, root%right, exists)\n      |                                 1\nError: Actual argument to \u2018root\u2019 at (1) must be polymorphic\ntemp.f95:69:29:\n\n   69 |         if (.not. associated(root)) then\n      |                             1\nError: \u2018pointer\u2019 argument of \u2018associated\u2019 intrinsic at (1) must be a POINTER\ntemp.f95:73:54:\n\n   73 |         call write_preorder_traversal(unit, root%left)\n      |                                                      1\nError: SUBROUTINE \u2018write_preorder_traversal\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:74:55:\n\n   74 |         call write_preorder_traversal(unit, root%right)\n      |                                                       1\nError: SUBROUTINE \u2018write_preorder_traversal\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:55:29:\n\n   55 |         if (.not. associated(root)) then\n      |                             1\nError: \u2018pointer\u2019 argument of \u2018associated\u2019 intrinsic at (1) must be a POINTER\ntemp.f95:59:29:\n\n   59 |         allocate(values(size(root)+1))\n      |                             1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:47:29:\n\n   47 |         allocate(values(size(root)))\n      |                             1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:16:17:\n\n   16 |     open(newunit=unit_in, file=filename_in, status=\"old\", action=\"read\", &\n      |                 1\nError: Named constant \u2018unit_in\u2019 in variable definition context (NEWUNIT tag) at (1)\ntemp.f95:24:28:\n\n   24 |     call read_tree(unit_in, root, exists)\n      |                            1\nError: Actual argument to \u2018root\u2019 at (1) must be polymorphic\ntemp.f95:31:17:\n\n   31 |     open(newunit=unit_out, file=filename_out, status=\"replace\", action=\"write\", &\n      |                 1\nError: Named constant \u2018unit_out\u2019 in variable definition context (NEWUNIT tag) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "145": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:15:\n\n    5 |     type(node), allocatable :: roots(:)\n      |               1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:8:13:\n\n    8 |     allocate(roots(n))\n      |             1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:18:21:\n\n   18 |     deallocate(roots)\n      |                     1\nError: \u2018roots\u2019 at (1) is not a variable\ntemp.f95:21:19:\n\n   21 |     allocate(roots(1))\n      |                   1\nError: \u2018roots\u2019 at (1) is not a variable\ntemp.f95:25:21:\n\n   25 |     deallocate(roots)\n      |                     1\nError: \u2018roots\u2019 at (1) is not a variable\ntemp.f95:28:19:\n\n   28 |     allocate(roots(1))\n      |                   1\nError: \u2018roots\u2019 at (1) is not a variable\ntemp.f95:32:21:\n\n   32 |     deallocate(roots)\n      |                     1\nError: \u2018roots\u2019 at (1) is not a variable\ntemp.f95:37:20:\n\n   37 |         class(node), intent(out) :: this\n      |                    1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:39:20:\n\n   39 |         class(node), intent(in), optional :: left, right\n      |                    1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:41:14:\n\n   41 |         this%val = val\n      |              1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:43:18:\n\n   43 |             this%left => left\n      |                  1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:45:18:\n\n   45 |             this%left => null()\n      |                  1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:48:18:\n\n   48 |             this%right => right\n      |                  1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:50:18:\n\n   50 |             this%right => null()\n      |                  1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:55:20:\n\n   55 |         class(node), intent(in) :: root\n      |                    1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:57:35:\n\n   57 |         if (.not. associated(root%left)) then\n      |                                   1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:58:39:\n\n   58 |             if (.not. associated(root%right)) then\n      |                                       1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:59:50:\n\n   59 |                 write (output_unit, '(i0)') root%val\n      |                                                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:60:16:\n\n   60 |             else\n      |                1\nError: Unexpected ELSE statement at (1)\ntemp.f95:61:43:\n\n   61 |                 call print_postorder(root%right)\n      |                                           1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:62:50:\n\n   62 |                 write (output_unit, '(i0)') root%val\n      |                                                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:63:15:\n\n   63 |             end if\n      |               1\nError: Expecting END SUBROUTINE statement at (1)\ntemp.f95:64:12:\n\n   64 |         else\n      |            1\nError: Unexpected ELSE statement at (1)\ntemp.f95:65:39:\n\n   65 |             call print_postorder(root%left)\n      |                                       1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:66:39:\n\n   66 |             if (.not. associated(root%right)) then\n      |                                       1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:67:50:\n\n   67 |                 write (output_unit, '(i0)') root%val\n      |                                                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:68:16:\n\n   68 |             else\n      |                1\nError: Unexpected ELSE statement at (1)\ntemp.f95:69:43:\n\n   69 |                 call print_postorder(root%right)\n      |                                           1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:70:50:\n\n   70 |                 write (output_unit, '(i0)') root%val\n      |                                                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:71:15:\n\n   71 |             end if\n      |               1\nError: Expecting END SUBROUTINE statement at (1)\ntemp.f95:72:11:\n\n   72 |         end if\n      |           1\nError: Expecting END SUBROUTINE statement at (1)\ntemp.f95:1:12:\n\n    1 | program main\n      |            1\n......\n   77 | type node\n      |         2   \nError: Two main PROGRAMs at (1) and (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "157": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:29:54:\n\n   29 |     function read(file, n, buf) result(num_chars_read)\n      |                                                      1\nError: FUNCTION attribute conflicts with SUBROUTINE attribute in \u2018read\u2019 at (1)\ntemp.f95:30:21:\n\n   30 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:31:44:\n\n   31 |         character(len=*), intent(in) :: file\n      |                                            1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:32:32:\n\n   32 |         integer, intent(in) :: n\n      |                                1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:33:44:\n\n   33 |         character(len=*), intent(out) :: buf\n      |                                            1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:34:33:\n\n   34 |         integer :: num_chars_read\n      |                                 1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:37:26:\n\n   37 |         num_chars_read = 0\n      |                          1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:38:7:\n\n   38 |     end function read\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "160": {
        "compiled": true,
        "executed": true,
        "stdout": "Intersected at '0\n'\nIntersected at '8'\nIntersected at '0\n'\nIntersected at '2'\nIntersected at '0\n'\nIntersected at '2'\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "163": {
        "compiled": true,
        "executed": true,
        "stdout": "0\n1\n3\n50\n75\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "168": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:24:12:\n\n   24 |             columnNumber = (columnNumber - 1) / 26\n      |            1\nError: Dummy argument \u2018columnnumber\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "169": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:21:16:\n\n   21 |             do j = 1, size(nums)\n      |                1\nError: Symbol \u2018j\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "170": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:2:11:\n\n    2 |     use :: two_sum_mod\n      |           1\nFatal Error: Cannot open module file \u2018two_sum_mod.mod\u2019 for reading at (1): No such file or directory\ncompilation terminated.\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "171": {
        "compiled": true,
        "executed": true,
        "stdout": "1\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "190": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:42:\n\n    6 |     integer(kind=4), parameter :: result = reverseBits(n)\n      |                                          1\nError: Function \u2018reversebits\u2019 at (1) has no IMPLICIT type\ntemp.f95:13:73:\n\n   13 |     integer(kind=4), parameter :: n2 = 11111111111111111111111111111101_4\n      |                                                                         1\nError: Integer too big for its kind at (1). This check can be disabled with the option \u2018-fno-range-check\u2019\ntemp.f95:14:58:\n\n   14 |     integer(kind=4), parameter :: expected2 = 3221225471_4\n      |                                                          1\nError: Integer too big for its kind at (1). This check can be disabled with the option \u2018-fno-range-check\u2019\ntemp.f95:15:58:\n\n   15 |     integer(kind=4), parameter :: result2 = reverseBits(n2)\n      |                                                          1\nError: Symbol \u2018n2\u2019 at (1) has no IMPLICIT type; did you mean \u2018n\u2019?\ntemp.f95:60:36:\n\n   60 |             + iand(n, -2147483648_4) * 1_4\n      |                                    1\nError: Integer too big for its kind at (1). This check can be disabled with the option \u2018-fno-range-check\u2019\nf951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "191": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:17:33:\n\n   17 |         num_ones = hamming_weight(bin_str)\n      |                                 1\nError: Return type mismatch of function \u2018hamming_weight\u2019 at (1) (UNKNOWN/INTEGER(4))\ntemp.f95:17:19:\n\n   17 |         num_ones = hamming_weight(bin_str)\n      |                   1\nError: Function \u2018hamming_weight\u2019 at (1) has no IMPLICIT type\ntemp.f95:17:33:\n\n   17 |         num_ones = hamming_weight(bin_str)\n      |                                 1\nError: Return type mismatch of function \u2018hamming_weight\u2019 at (1) (UNKNOWN/INTEGER(4))\ntemp.f95:24:19:\n\n   24 |         num_ones = hamming_weight(bin_str)\n      |                   1\nError: Function \u2018hamming_weight\u2019 at (1) has no IMPLICIT type\ntemp.f95:17:33:\n\n   17 |         num_ones = hamming_weight(bin_str)\n      |                                 1\nError: Return type mismatch of function \u2018hamming_weight\u2019 at (1) (UNKNOWN/INTEGER(4))\ntemp.f95:31:19:\n\n   31 |         num_ones = hamming_weight(bin_str)\n      |                   1\nError: Function \u2018hamming_weight\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "202": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:17:22:\n\n   17 |     function is_happy(n) result(res)\n      |                      1\nError: Procedure \u2018is_happy\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:18:21:\n\n   18 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:19:32:\n\n   19 |         integer, intent(in) :: n\n      |                                1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:20:22:\n\n   20 |         logical :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:21:29:\n\n   21 |         integer :: digit, sum\n      |                             1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:23:21:\n\n   23 |         res = .false.\n      |                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:24:28:\n\n   24 |         do while (.not. res)\n      |                            1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:25:19:\n\n   25 |             sum = 0\n      |                   1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:26:28:\n\n   26 |             do while (n > 0)\n      |                            1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:27:34:\n\n   27 |                 digit = mod(n, 10)\n      |                                  1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:28:41:\n\n   28 |                 sum = sum + digit * digit\n      |                                         1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:29:26:\n\n   29 |                 n = n / 10\n      |                          1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:30:15:\n\n   30 |             end do\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:31:30:\n\n   31 |             if (sum == 1) then\n      |                              1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:32:28:\n\n   32 |                 res = .true.\n      |                            1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:34:90:\n\n   34 |                                     16777216, 67108864, 268435456, 1073741824, 4294967296, 17179869184, 68719476736, &\n      |                                                                                          1\nError: Integer too big for its kind at (1). This check can be disabled with the option \u2018-fno-range-check\u2019\ntemp.f95:38:28:\n\n   38 |                 res = .true.\n      |                            1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:39:16:\n\n   39 |             else\n      |                1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:40:23:\n\n   40 |                 n = sum\n      |                       1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:41:15:\n\n   41 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:42:11:\n\n   42 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:43:7:\n\n   43 |     end function is_happy\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "203": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:2:11:\n\n    2 |     use :: linked_list_mod\n      |           1\nFatal Error: Cannot open module file \u2018linked_list_mod.mod\u2019 for reading at (1): No such file or directory\ncompilation terminated.\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "205": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\n s = egg\n t = add\n Is isomorphic?  T\n \n Example 2:\n s = foo\n t = bar\n Is isomorphic?  T\n \n Example 3:\n s = paper\n t = title\n Is isomorphic?  T\n \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "206": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 52 of file temp.f95\nFortran runtime error: Expected INTEGER for item 1 in formatted transfer, got CHARACTER\n(*(I0, 1X))\n   ^\n\nError termination. Backtrace:\n#0  0x7c7f1dc0d960 in ???\n#1  0x7c7f1dc0e4d9 in ???\n#2  0x7c7f1de53ec3 in ???\n#3  0x7c7f1de610e2 in ???\n#4  0x7c7f1de646d1 in ???\n#5  0x7c7f1de64e05 in ???\n#6  0x5655a389c7c1 in print_list.1\n#7  0x5655a389c3cf in MAIN__\n#8  0x5655a389c918 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "217": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:4:\n\n    9 |     nums = [1, 2, 3, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 4)\ntemp.f95:14:4:\n\n   14 |     nums = [1, 2, 3, 4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "219": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:22:4:\n\n   22 |     nums = [1, 2, 3, 1, 2, 3]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 6)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "225": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:15:\n\n    6 |         private\n      |               1\nError: PRIVATE statement at (1) is only allowed in the specification part of a module\ntemp.f95:22:4:\n\n   22 |     function constructor() result(stack)\n      |    1\nError: INTERNAL-PROC procedure at (1) is already declared as MODULE-PROC procedure\ntemp.f95:13:17:\n\n   13 |         procedure :: empty => empty_impl\n      |                 1\nError: \u2018empty_impl\u2019 must be a module procedure or an external procedure with an explicit interface at (1)\ntemp.f95:11:17:\n\n   11 |         procedure :: pop => pop_impl\n      |                 1\nError: \u2018pop_impl\u2019 must be a module procedure or an external procedure with an explicit interface at (1)\ntemp.f95:10:17:\n\n   10 |         procedure :: push => push_impl\n      |                 1\nError: \u2018push_impl\u2019 must be a module procedure or an external procedure with an explicit interface at (1)\ntemp.f95:12:17:\n\n   12 |         procedure :: top => top_impl\n      |                 1\nError: \u2018top_impl\u2019 must be a module procedure or an external procedure with an explicit interface at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "226": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:18:32:\n\n   18 |         print \"(I0)\", root%left(i)%val\n      |                                1\nError: Syntax error in PRINT statement at (1)\ntemp.f95:22:33:\n\n   22 |         print \"(I0)\", root%right(i)%val\n      |                                 1\nError: Syntax error in PRINT statement at (1)\ntemp.f95:29:32:\n\n   29 |         print \"(I0)\", root%left(i)%val\n      |                                1\nError: Syntax error in PRINT statement at (1)\ntemp.f95:33:33:\n\n   33 |         print \"(I0)\", root%right(i)%val\n      |                                 1\nError: Syntax error in PRINT statement at (1)\ntemp.f95:40:32:\n\n   40 |         print \"(I0)\", root%left(i)%val\n      |                                1\nError: Syntax error in PRINT statement at (1)\ntemp.f95:44:33:\n\n   44 |         print \"(I0)\", root%right(i)%val\n      |                                 1\nError: Syntax error in PRINT statement at (1)\ntemp.f95:57:23:\n\n   57 |         if (associated(root)) then\n      |                       1\nError: \u2018pointer\u2019 argument of \u2018associated\u2019 intrinsic at (1) must be a POINTER\ntemp.f95:58:23:\n\n   58 |             current => root\n      |                       1\nError: Pointer assignment target is neither TARGET nor POINTER at (1)\ntemp.f95:66:45:\n\n   66 |                 call invertTree(current%left)\n      |                                             1\nError: SUBROUTINE \u2018inverttree\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:67:46:\n\n   67 |                 call invertTree(current%right)\n      |                                              1\nError: SUBROUTINE \u2018inverttree\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:17:19:\n\n   17 |     do i = 1, size(root%left)\n      |                   1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:21:19:\n\n   21 |     do i = 1, size(root%right)\n      |                   1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:28:19:\n\n   28 |     do i = 1, size(root%left)\n      |                   1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:32:19:\n\n   32 |     do i = 1, size(root%right)\n      |                   1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:39:19:\n\n   39 |     do i = 1, size(root%left)\n      |                   1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:43:19:\n\n   43 |     do i = 1, size(root%right)\n      |                   1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "228": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:33:\n\n    5 |     integer, dimension(n) :: nums = (/ 0, 1, 2, 4, 5, 7 /)\n      |                                 1\nError: Different shape for array assignment at (1) on dimension 1 (7 and 6)\ntemp.f95:6:18:\n\n    6 |     type(range_t), allocatable :: ranges(:)\n      |                  1\nError: Derived type \u2018range_t\u2019 at (1) is being used before it is defined\ntemp.f95:11:36:\n\n   11 |         write (*, '(A)') ranges(i)%to_string()\n      |                                    1\nError: Symbol \u2018ranges\u2019 at (1) has no IMPLICIT type\ntemp.f95:19:22:\n\n   19 |         type(range_t), allocatable, intent(out) :: ranges(:)\n      |                      1\nError: Derived type \u2018range_t\u2019 at (1) is being used before it is defined\ntemp.f95:22:17:\n\n   22 |         allocate(ranges(size(nums)))\n      |                 1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:37:16:\n\n   37 |     type range_t\n      |                1\nError: Unexpected derived type declaration statement in CONTAINS section at (1)\ntemp.f95:38:24:\n\n   38 |         integer :: start\n      |                        1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:39:22:\n\n   39 |         integer :: end\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:40:12:\n\n   40 |     contains\n      |            1\nError: Unexpected CONTAINS statement in CONTAINS section at (1)\ntemp.f95:42:7:\n\n   42 |     end type range_t\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:46:23:\n\n   46 |         class(range_t), intent(in) :: self\n      |                       1\nError: Derived type \u2018range_t\u2019 at (1) is being used before it is defined\ntemp.f95:48:18:\n\n   48 |         if (self%start /= self%end) then\n      |                  1\nError: Symbol \u2018self\u2019 at (1) has no IMPLICIT type\ntemp.f95:49:57:\n\n   49 |             str = trim(adjustl(str)) // trim(adjustl(str(self%start))) // \"->\" // &\n      |                                                         1\nError: Syntax error in argument list at (1)\ntemp.f95:51:12:\n\n   51 |         else\n      |            1\nError: Unexpected ELSE statement at (1)\ntemp.f95:52:57:\n\n   52 |             str = trim(adjustl(str)) // trim(adjustl(str(self%start))) // \" \"\n      |                                                         1\nError: Syntax error in argument list at (1)\ntemp.f95:53:11:\n\n   53 |         end if\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:16:33:\n\n   16 |     subroutine solve(nums, ranges)\n      |                                 1\nError: Symbol \u2018ranges\u2019 at (1) has no IMPLICIT type\ntemp.f95:44:52:\n\n   44 |     character(len=100) function to_string_range(self) result(str)\n      |                                                    1\nError: Symbol \u2018self\u2019 at (1) has no IMPLICIT type\ntemp.f95:10:8:\n\n   10 |     do i = 1, size(ranges)\n      |        1\nError: Symbol \u2018i\u2019 at (1) has no IMPLICIT type\ntemp.f95:8:19:\n\n    8 |     call solve(nums, ranges)\n      |                   1\nError: Symbol \u2018nums\u2019 at (1) has no IMPLICIT type\ntemp.f95:8:27:\n\n    8 |     call solve(nums, ranges)\n      |                           1\nError: Symbol \u2018ranges\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "231": {
        "compiled": true,
        "executed": true,
        "stdout": "F\nT\nF\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "232": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:15:\n\n    5 |         private\n      |               1\nError: PRIVATE statement at (1) is only allowed in the specification part of a module\ntemp.f95:21:4:\n\n   21 |     function constructor() result(queue)\n      |    1\nError: INTERNAL-PROC procedure at (1) is already declared as MODULE-PROC procedure\ntemp.f95:12:17:\n\n   12 |         procedure :: empty => empty_impl\n      |                 1\nError: \u2018empty_impl\u2019 must be a module procedure or an external procedure with an explicit interface at (1)\ntemp.f95:11:17:\n\n   11 |         procedure :: peek => peek_impl\n      |                 1\nError: \u2018peek_impl\u2019 must be a module procedure or an external procedure with an explicit interface at (1)\ntemp.f95:10:17:\n\n   10 |         procedure :: pop => pop_impl\n      |                 1\nError: \u2018pop_impl\u2019 must be a module procedure or an external procedure with an explicit interface at (1)\ntemp.f95:9:17:\n\n    9 |         procedure :: push => push_impl\n      |                 1\nError: \u2018push_impl\u2019 must be a module procedure or an external procedure with an explicit interface at (1)\ntemp.f95:53:12:\n\n   53 |         if (queue%empty()) then\n      |            1\nError: \u2018empty\u2019 at (1) should be a FUNCTION\ntemp.f95:40:12:\n\n   40 |         if (queue%empty()) then\n      |            1\nError: \u2018empty\u2019 at (1) should be a FUNCTION\ntemp.f95:45:19:\n\n   45 |         deallocate(queue%stack(queue%size))\n      |                   1\nError: Allocate-object at (1) must be ALLOCATABLE or a POINTER\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "234": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "\nProgram received signal SIGSEGV: Segmentation fault - invalid memory reference.\n\nBacktrace for this error:\n#0  0x7dbf9f648960 in ???\n#1  0x7dbf9f647ac5 in ???\n#2  0x7dbf9f43e51f in ???\n#3  0x56473cb901d6 in is_palindrome.0\n#4  0x56473cb9066f in test_example1.2\n#5  0x56473cb90263 in MAIN__\n#6  0x56473cb9075a in main\n",
        "exit_code": -11,
        "exec_success": "partial"
    },
    "242": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:2:9:\n\n    2 |     use anagram_solution\n      |         1\nFatal Error: Cannot open module file \u2018anagram_solution.mod\u2019 for reading at (1): No such file or directory\ncompilation terminated.\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "243": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:64:\n\n    5 |     character(len=10), dimension(n) :: wordsDict = [\"practice \", \"makes \", \"perfect \", \"coding \", \"makes \"]\n      |                                                                1\nError: Different CHARACTER lengths (9/6) in array constructor at (1)\ntemp.f95:6:42:\n\n    6 |     character(len=10), intent(in) :: word1, word2\n      |                                          1\nError: Symbol at (1) is not a DUMMY variable\ntemp.f95:6:49:\n\n    6 |     character(len=10), intent(in) :: word1, word2\n      |                                                 1\nError: Symbol at (1) is not a DUMMY variable\ntemp.f95:9:24:\n\n    9 |     call solve(wordsDict, word1, word2, dist)\n      |                        1\nError: Symbol \u2018wordsdict\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "246": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:21:29:\n\n   21 |     function strobogrammatic(num) result(res)\n      |                             1\nError: Procedure \u2018strobogrammatic\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:22:21:\n\n   22 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:23:43:\n\n   23 |         character(len=*), intent(in) :: num\n      |                                           1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:24:22:\n\n   24 |         logical :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:26:27:\n\n   26 |         if (num == \"\") then\n      |                           1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:27:25:\n\n   27 |             res = .false.\n      |                         1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:28:18:\n\n   28 |             return\n      |                  1\nError: Unexpected RETURN statement in CONTAINS section at (1)\ntemp.f95:29:11:\n\n   29 |         end if\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:31:57:\n\n   31 |         if (num(1:1) /= num(len(num):len_trim(num))) then\n      |                                                         1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:32:25:\n\n   32 |             res = .false.\n      |                         1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:33:18:\n\n   33 |             return\n      |                  1\nError: Unexpected RETURN statement in CONTAINS section at (1)\ntemp.f95:34:11:\n\n   34 |         end if\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:36:48:\n\n   36 |         res = strobogrammatic(num(2:len(num)-1))\n      |                                                1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:38:7:\n\n   38 |     end function strobogrammatic\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "252": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:21:20:\n\n   21 |                     intervals(j, :) = intervals(j, :) + intervals(i, :) - intervals(j, :)\n      |                    1\nError: Dummy argument \u2018intervals\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:22:20:\n\n   22 |                     intervals(i, :) = intervals(j, :) - intervals(i, :)\n      |                    1\nError: Dummy argument \u2018intervals\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:7:40:\n\n    7 |     write (*, '(L1)') canAttendMeetings(intervals)\n      |                                        1\nError: Rank mismatch in argument \u2018intervals\u2019 at (1) (rank-2 and rank-1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "257": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:24:33:\n\n   24 |             call solve(root%left)\n      |                                 1\nError: SUBROUTINE \u2018solve\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:27:34:\n\n   27 |             call solve(root%right)\n      |                                  1\nError: SUBROUTINE \u2018solve\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "258": {
        "compiled": true,
        "executed": true,
        "stdout": "Example 1:\nInput: 38\nOutput:2\nExample 2:\nInput: 0\nOutput:0\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "263": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:37:16:\n\n   37 |                 n = n / i\n      |                1\nError: Dummy argument \u2018n\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "266": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:21:27:\n\n   21 |     function is_palindrome(str) result(res)\n      |                           1\nError: Procedure \u2018is_palindrome\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:22:21:\n\n   22 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:23:43:\n\n   23 |         character(len=*), intent(in) :: str\n      |                                           1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:24:23:\n\n   24 |         integer :: i, j\n      |                       1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:25:22:\n\n   25 |         logical :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:27:21:\n\n   27 |         res = .false.\n      |                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:29:28:\n\n   29 |         do i = 1, len(str)/2\n      |                            1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:30:22:\n\n   30 |             if (str(i:i) /= str(len(str)-i+1:len(str)-i)) then\n      |                      1\nError: Syntax error in argument list at (1)\ntemp.f95:31:20:\n\n   31 |                 exit\n      |                    1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:32:15:\n\n   32 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:33:11:\n\n   33 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:35:37:\n\n   35 |         if (i == len(str)/2 + 1) then\n      |                                     1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:36:24:\n\n   36 |             res = .true.\n      |                        1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:37:11:\n\n   37 |         end if\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:38:7:\n\n   38 |     end function is_palindrome\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "268": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:19:4:\n\n   19 |     nums = (/ 0, 1 /)\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (9 and 2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "270": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:105:27:\n\n  105 |             if (diff < min_\n      |                           1\nError: Missing \u2018)\u2019 in statement at or before (1)\nf951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "278": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 9 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7e0f7c3c7960 in ???\n#1  0x7e0f7c3c84d9 in ???\n#2  0x7e0f7c61c17b in ???\n#3  0x7e0f7c615684 in ???\n#4  0x7e0f7c6162aa in ???\n#5  0x5819373092a3 in MAIN__\n#6  0x5819373093df in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "283": {
        "compiled": true,
        "executed": true,
        "stdout": "Expected:\n[1, 3, 12, 0, 0]\nActual:\n\u0001\u0000\u0000\u0000\n\u0003\u0000\u0000\u0000\n\f\u0000\u0000\u0000\n\u0003\u0000\u0000\u0000\n\f\u0000\u0000\u0000\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "290": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:42:28:\n\n   42 |                 if (trim(s)(j:j) == trim(pattern)(i:i)) then\n      |                            1\nError: Syntax error in IF-expression at (1)\ntemp.f95:43:32:\n\n   43 |                     if (trim(s)(k+1:) /= '') then\n      |                                1\nError: Syntax error in IF-expression at (1)\ntemp.f95:46:23:\n\n   46 |                     end if\n      |                       1\nError: Expecting END DO statement at (1)\ntemp.f95:47:19:\n\n   47 |                 end if\n      |                   1\nError: Expecting END DO statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "292": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:17:21:\n\n   17 |     function can_win(n) result(can_win_)\n      |                     1\nError: Procedure \u2018can_win\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:18:21:\n\n   18 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:19:32:\n\n   19 |         integer, intent(in) :: n\n      |                                1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:20:27:\n\n   20 |         logical :: can_win_\n      |                           1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:22:24:\n\n   22 |         if (n == 1) then\n      |                        1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:23:29:\n\n   23 |             can_win_ = .true.\n      |                             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:24:29:\n\n   24 |         else if (n == 2) then\n      |                             1\nError: Unexpected ELSE IF statement in CONTAINS section at (1)\ntemp.f95:25:29:\n\n   25 |             can_win_ = .true.\n      |                             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:26:37:\n\n   26 |         else if (mod(n, 4) == 0) then\n      |                                     1\nError: Unexpected ELSE IF statement in CONTAINS section at (1)\ntemp.f95:27:30:\n\n   27 |             can_win_ = .false.\n      |                              1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:28:12:\n\n   28 |         else\n      |            1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:29:25:\n\n   29 |             do i = 1, n-1\n      |                         1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:30:39:\n\n   30 |                 do j = 1, min(i+1, n-i)\n      |                                       1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:31:43:\n\n   31 |                     do k = 1, min(j+1, n-j)\n      |                                           1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:32:52:\n\n   32 |                         if (.not. can_win(n-k)) then\n      |                                                    1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:33:45:\n\n   33 |                             can_win_ = .true.\n      |                                             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:34:34:\n\n   34 |                             return\n      |                                  1\nError: Unexpected RETURN statement in CONTAINS section at (1)\ntemp.f95:35:27:\n\n   35 |                         end if\n      |                           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:36:23:\n\n   36 |                     end do\n      |                       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:37:19:\n\n   37 |                 end do\n      |                   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:38:15:\n\n   38 |             end do\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:39:30:\n\n   39 |             can_win_ = .false.\n      |                              1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:40:11:\n\n   40 |         end if\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:41:7:\n\n   41 |     end function can_win\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "293": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:38:39:\n\n   38 |                 allocate(possibleStates(size(possibleStates)+1))\n      |                                       1\nError: \u2018possiblestates\u2019 must not appear in the array specification at (1) in the same ALLOCATE statement where it is itself allocated\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "303": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:7:50:\n\n    7 |     integer, dimension(m, 2) :: queries = reshape([0, 2, &\n      |                                                  1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\ntemp.f95:10:19:\n\n   10 |     type(NumArray) :: na\n      |                   1\nError: Derived type \u2018numarray\u2019 at (1) is being used before it is defined\ntemp.f95:20:16:\n\n   20 |             na%sumRange(queries(i, 1), queries(i, 2))\n      |                1\nError: Symbol \u2018na\u2019 at (1) has no IMPLICIT type\ntemp.f95:25:17:\n\n   25 |     type NumArray\n      |                 1\nError: Unexpected derived type declaration statement in CONTAINS section at (1)\ntemp.f95:26:15:\n\n   26 |         private\n      |               1\nError: PRIVATE statement at (1) is only allowed in the specification part of a module\ntemp.f95:27:39:\n\n   27 |         integer, allocatable :: nums(:)\n      |                                       1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:29:16:\n\n   29 |         contains\n      |                1\nError: Unexpected CONTAINS statement in CONTAINS section at (1)\ntemp.f95:32:7:\n\n   32 |     end type NumArray\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:34:22:\n\n   34 |     interface NumArray\n      |                      1\nError: Unexpected INTERFACE statement in CONTAINS section at (1)\ntemp.f95:35:25:\n\n   35 |         module procedure :: constructor\n      |                         1\nError: MODULE PROCEDURE at (1) must be in a generic module interface\ntemp.f95:36:7:\n\n   36 |     end interface NumArray\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:41:23:\n\n   14 |     na = NumArray(nums)\n      |                 2      \n......\n   41 |         type(NumArray) :: this\n      |                       1\nError: Type name \u2018numarray\u2019 at (1) conflicts with previously declared entity at (2), which has the same name\ntemp.f95:43:23:\n\n   43 |         allocate(this%nums(size(nums)))\n      |                       1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:44:14:\n\n   44 |         this%nums = nums\n      |              1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:49:24:\n\n   14 |     na = NumArray(nums)\n      |                 2       \n......\n   49 |         class(NumArray), intent(in) :: this\n      |                        1\nError: Type name \u2018numarray\u2019 at (1) conflicts with previously declared entity at (2), which has the same name\ntemp.f95:47:26:\n\n   47 |     function sumRange(this, left, right) result(sum)\n      |                          1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:38:43:\n\n   38 |     function constructor(nums) result(this)\n      |                                           1\nError: Result \u2018this\u2019 of contained function \u2018constructor\u2019 at (1) has no IMPLICIT type\ntemp.f95:14:6:\n\n   14 |     na = NumArray(nums)\n      |      1\nError: Symbol \u2018na\u2019 at (1) has no IMPLICIT type; did you mean \u2018n\u2019?\ntemp.f95:17:26:\n\n   17 |     do i = 1, size(queries, 1)\n      |                          1\nError: Symbol \u2018queries\u2019 at (1) has no IMPLICIT type\ntemp.f95:14:9:\n\n   14 |     na = NumArray(nums)\n      |         1\nError: Function \u2018numarray\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "326": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:13:60:\n\n   13 |     function solve_power_of_three(n, result) result (result)\n      |                                                            1\nError: DUMMY attribute conflicts with RESULT attribute in \u2018result\u2019 at (1)\ntemp.f95:14:21:\n\n   14 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:15:32:\n\n   15 |         integer, intent(in) :: n\n      |                                1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:16:38:\n\n   16 |         logical, intent(out) :: result\n      |                                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:17:20:\n\n   17 |         integer :: x\n      |                    1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:19:24:\n\n   19 |         result = .false.\n      |                        1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:20:24:\n\n   20 |         do while (n > 0)\n      |                        1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:21:21:\n\n   21 |             x = n / 3\n      |                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:22:32:\n\n   22 |             if (x * 3 == n) then\n      |                                1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:23:31:\n\n   23 |                 result = .true.\n      |                               1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:24:20:\n\n   24 |                 exit\n      |                    1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:25:15:\n\n   25 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:26:17:\n\n   26 |             n = x\n      |                 1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:27:11:\n\n   27 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:28:7:\n\n   28 |     end function solve_power_of_three\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:7:17:\n\n    7 |     print '(L1)', solve_power_of_three(27, result)\n      |                 1\nError: Function \u2018solve_power_of_three\u2019 at (1) has no IMPLICIT type\ntemp.f95:8:17:\n\n    8 |     print '(L1)', solve_power_of_three(0, result)\n      |                 1\nError: Function \u2018solve_power_of_three\u2019 at (1) has no IMPLICIT type\ntemp.f95:9:17:\n\n    9 |     print '(L1)', solve_power_of_three(-1, result)\n      |                 1\nError: Function \u2018solve_power_of_three\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "338": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:4:26:\n\n    4 |     integer :: n, ans(n+1)\n      |                          1\nError: Explicit shaped array with nonconstant bounds at (1)\ntemp.f95:8:21:\n\n    8 |     call solve(n, ans)\n      |                     1\nError: Symbol \u2018ans\u2019 at (1) has no IMPLICIT type\ntemp.f95:7:5:\n\n    7 |     n = 2\n      |     1\nError: Symbol \u2018n\u2019 at (1) has no IMPLICIT type\ntemp.f95:30:33:\n\n   30 |             ans(i+1) = count_ones(i)\n      |                                 1\nError: Return type mismatch of function \u2018count_ones\u2019 at (1) (UNKNOWN/INTEGER(4))\ntemp.f95:30:23:\n\n   30 |             ans(i+1) = count_ones(i)\n      |                       1\nError: Function \u2018count_ones\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "342": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:37:12:\n\n   37 |             n = x\n      |            1\nError: Dummy argument \u2018n\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "344": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:15:24:\n\n   15 |         result = reverse(example1)\n      |                        1\nError: Return type mismatch of function \u2018reverse\u2019 at (1) (UNKNOWN/CHARACTER(0))\ntemp.f95:15:17:\n\n   15 |         result = reverse(example1)\n      |                 1\nError: Function \u2018reverse\u2019 at (1) has no IMPLICIT type\ntemp.f95:15:24:\n\n   15 |         result = reverse(example1)\n      |                        1\nError: Return type mismatch of function \u2018reverse\u2019 at (1) (UNKNOWN/CHARACTER(0))\ntemp.f95:21:17:\n\n   21 |         result = reverse(example2)\n      |                 1\nError: Function \u2018reverse\u2019 at (1) has no IMPLICIT type\ntemp.f95:41:24:\n\n   41 |         call swap(s(i), r(j))\n      |                        1\nError: Non-variable expression in variable definition context (actual argument to INTENT = OUT/INOUT) at (1)\ntemp.f95:15:25:\n\n   15 |         result = reverse(example1)\n      |                         1\nError: Rank mismatch in argument \u2018s\u2019 at (1) (rank-1 and scalar)\ntemp.f95:21:25:\n\n   21 |         result = reverse(example2)\n      |                         1\nError: Rank mismatch in argument \u2018s\u2019 at (1) (rank-1 and scalar)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "345": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:32:12:\n\n   32 |     contains\n      |            1\nError: CONTAINS statement at (1) is already in a contained program unit\ntemp.f95:35:25:\n\n   35 |             implicit none\n      |                         1\nError: Duplicate IMPLICIT NONE statement at (1)\ntemp.f95:36:38:\n\n   36 |             character, intent(in) :: c\n      |                                      1\nError: Unexpected data declaration statement at (1)\ntemp.f95:40:25:\n\n   40 |                 is_vowel = .true.\n      |                         1\nError: \u2018is_vowel\u2019 at (1) is not a variable\ntemp.f95:42:25:\n\n   42 |                 is_vowel = .false.\n      |                         1\nError: \u2018is_vowel\u2019 at (1) is not a variable\ntemp.f95:44:29:\n\n   44 |         end function is_vowel\n      |                             1\nError: Expected label \u2018reverse_vowels\u2019 for END FUNCTION statement at (1)\ntemp.f95:47:25:\n\n   47 |             implicit none\n      |                         1\nError: Duplicate IMPLICIT NONE statement at (1)\ntemp.f95:48:50:\n\n   48 |             character(len=*), intent(inout) :: str\n      |                                                  1\nError: Symbol \u2018str\u2019 at (1) already has basic type of CHARACTER\ntemp.f95:49:40:\n\n   49 |             integer, value :: start, end\n      |                                        1\nError: Unexpected data declaration statement at (1)\ntemp.f95:50:24:\n\n   50 |             integer :: i\n      |                        1\nError: Unexpected data declaration statement at (1)\ntemp.f95:55:11:\n\n   55 |         end subroutine reverse_substring\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:58:25:\n\n   58 |             implicit none\n      |                         1\nError: Duplicate IMPLICIT NONE statement at (1)\ntemp.f95:59:50:\n\n   59 |             character(len=*), intent(inout) :: str\n      |                                                  1\nError: Symbol \u2018str\u2019 at (1) already has basic type of CHARACTER\ntemp.f95:60:34:\n\n   60 |             integer, value :: i, j\n      |                                  1\nError: Unexpected data declaration statement at (1)\ntemp.f95:61:28:\n\n   61 |             character :: tmp\n      |                            1\nError: Unexpected data declaration statement at (1)\ntemp.f95:66:11:\n\n   66 |         end subroutine swap_chars\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:38:26:\n\n   38 |             select case (c)\n      |                          1\nError: Symbol \u2018c\u2019 at (1) has no IMPLICIT type\ntemp.f95:52:38:\n\n   52 |             do i = start, (start + end)/2\n      |                                      1\nError: Symbol \u2018end\u2019 at (1) has no IMPLICIT type\ntemp.f95:64:28:\n\n   64 |             str(i:i) = str(j:j)\n      |                            1\nError: Symbol \u2018j\u2019 at (1) has no IMPLICIT type\ntemp.f95:52:24:\n\n   52 |             do i = start, (start + end)/2\n      |                        1\nError: Symbol \u2018start\u2019 at (1) has no IMPLICIT type; did you mean \u2018str\u2019?\ntemp.f95:63:15:\n\n   63 |             tmp = str(i:i)\n      |               1\nError: Symbol \u2018tmp\u2019 at (1) has no IMPLICIT type\ntemp.f95:38:25:\n\n   38 |             select case (c)\n      |                         1\nError: Argument of SELECT statement at (1) cannot be UNKNOWN\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "346": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:2:11:\n\n    2 |     use :: moving_average_mod\n      |           1\nFatal Error: Cannot open module file \u2018moving_average_mod.mod\u2019 for reading at (1): No such file or directory\ncompilation terminated.\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "349": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:34:\n\n    6 |     integer, dimension(n) :: nums2 = [2, 2]\n      |                                  1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 2)\ntemp.f95:21:25:\n\n   21 |         intersection = []\n      |                         1\nError: Empty array constructor at (1) is not allowed\ntemp.f95:9:48:\n\n    9 |     intersection = get_intersection(nums1, nums2)\n      |                                                1\nError: Symbol \u2018nums2\u2019 at (1) has no IMPLICIT type; did you mean \u2018nums1\u2019?\ntemp.f95:36:23:\n\n   36 |         intersection = unique(intersection)\n      |                       1\nError: Function \u2018unique\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "350": {
        "compiled": true,
        "executed": true,
        "stdout": "",
        "stderr": "Intersection:2.0000000000000000\n",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "359": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:2:9:\n\n    2 |     use Logger_mod\n      |         1\nFatal Error: Cannot open module file \u2018logger_mod.mod\u2019 for reading at (1): No such file or directory\ncompilation terminated.\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "367": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:21:31:\n\n   21 |     function is_perfect_square(num) result(res)\n      |                               1\nError: Procedure \u2018is_perfect_square\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:22:21:\n\n   22 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:23:34:\n\n   23 |         integer, intent(in) :: num\n      |                                  1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:24:22:\n\n   24 |         logical :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:25:20:\n\n   25 |         integer :: i\n      |                    1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:27:38:\n\n   27 |         do i = 1, int(sqrt(real(num)))\n      |                                      1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:28:34:\n\n   28 |             if (i * i == num) then\n      |                                  1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:29:28:\n\n   29 |                 res = .true.\n      |                            1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:30:20:\n\n   30 |                 exit\n      |                    1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:31:15:\n\n   31 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:32:11:\n\n   32 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:33:7:\n\n   33 |     end function is_perfect_square\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "374": {
        "compiled": true,
        "executed": true,
        "stdout": "Example 1: 0\nExample 2: 0\nExample 3: 0\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "383": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:48:20:\n\n   48 |                     magazine(j:j) = ' '\n      |                    1\nError: Dummy argument \u2018magazine\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "387": {
        "compiled": true,
        "executed": true,
        "stdout": "           1\n           3\n          -1\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "389": {
        "compiled": true,
        "executed": true,
        "stdout": "  \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "392": {
        "compiled": true,
        "executed": true,
        "stdout": "F\nF\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "401": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "invalid start byte",
        "exit_code": 0,
        "exec_success": ""
    },
    "404": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:67:50:\n\n   67 |                     sum = sum + sum_of_left_leaves(root%left)\n      |                                                  1\nError: Function \u2018sum_of_left_leaves\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:70:42:\n\n   70 |             sum = sum + sum_of_left_leaves(root%right)\n      |                                          1\nError: Function \u2018sum_of_left_leaves\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:49:50:\n\n   49 |                 call read_tree(unit_in, root%left)\n      |                                                  1\nError: SUBROUTINE \u2018read_tree\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:51:51:\n\n   51 |                 call read_tree(unit_in, root%right)\n      |                                                   1\nError: SUBROUTINE \u2018read_tree\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:15:17:\n\n   15 |     open(newunit=unit_in, file='input.txt', status='old', action='read')\n      |                 1\nError: Named constant \u2018unit_in\u2019 in variable definition context (NEWUNIT tag) at (1)\ntemp.f95:20:17:\n\n   20 |     open(newunit=unit_in, file=filename, status='old', action='read')\n      |                 1\nError: Named constant \u2018unit_in\u2019 in variable definition context (NEWUNIT tag) at (1)\ntemp.f95:23:28:\n\n   23 |     call read_tree(unit_in, root)\n      |                            1\nError: Actual argument to \u2018root\u2019 at (1) must be polymorphic\ntemp.f95:27:29:\n\n   27 |     sum = sum_of_left_leaves(root)\n      |                             1\nError: Actual argument to \u2018root\u2019 at (1) must be polymorphic\ntemp.f95:30:17:\n\n   30 |     open(newunit=unit_out, file='output.txt', status='replace', action='write')\n      |                 1\nError: Named constant \u2018unit_out\u2019 in variable definition context (NEWUNIT tag) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "405": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:46:16:\n\n   46 |                 num = num / 16\n      |                1\nError: Dummy argument \u2018num\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "408": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:14:21:\n\n   14 |     function matches(str, abbr) result(res)\n      |                     1\nError: Procedure \u2018matches\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:15:21:\n\n   15 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:16:49:\n\n   16 |         character(len=*), intent(in) :: str, abbr\n      |                                                 1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:17:22:\n\n   17 |         logical :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:18:29:\n\n   18 |         integer :: i, j, k, l\n      |                             1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:20:21:\n\n   20 |         res = .false.\n      |                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:21:13:\n\n   21 |         i = 1\n      |             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:22:37:\n\n   22 |         do while (i <= len_trim(str))\n      |                                     1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:23:28:\n\n   23 |             j = index(str(i:), ' ')\n      |                            1\nError: Syntax error in argument list at (1)\ntemp.f95:24:28:\n\n   24 |             if (j == 0) then\n      |                            1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:25:20:\n\n   25 |                 exit\n      |                    1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:26:15:\n\n   26 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:27:32:\n\n   27 |             k = index(abbr, ' ')\n      |                                1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:28:28:\n\n   28 |             if (k /= 0) then\n      |                            1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:30:31:\n\n   30 |                 if (j > k) then\n      |                               1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:32:24:\n\n   32 |                     exit\n      |                        1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:33:20:\n\n   33 |                 else\n      |                    1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:35:33:\n\n   35 |                     i = i + j - 1\n      |                                 1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:36:25:\n\n   36 |                     cycle\n      |                         1\nError: CYCLE statement at (1) is not within a construct\ntemp.f95:37:19:\n\n   37 |                 end if\n      |                   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:38:16:\n\n   38 |             else\n      |                1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:40:44:\n\n   40 |                 if (j > len_trim(abbr)) then\n      |                                            1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:42:24:\n\n   42 |                     exit\n      |                        1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:43:20:\n\n   43 |                 else\n      |                    1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:45:33:\n\n   45 |                     i = i + j - 1\n      |                                 1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:46:25:\n\n   46 |                     cycle\n      |                         1\nError: CYCLE statement at (1) is not within a construct\ntemp.f95:47:19:\n\n   47 |                 end if\n      |                   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:48:15:\n\n   48 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:49:31:\n\n   49 |             l = len_trim(str(i:i+j-1))\n      |                               1\nError: Syntax error in argument list at (1)\ntemp.f95:50:27:\n\n   50 |             if (l > 0) then\n      |                           1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:52:45:\n\n   52 |                 if (index(abbr, l) == 0) then\n      |                                             1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:54:24:\n\n   54 |                     exit\n      |                        1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:55:20:\n\n   55 |                 else\n      |                    1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:57:29:\n\n   57 |                     i = i + j\n      |                             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:58:25:\n\n   58 |                     cycle\n      |                         1\nError: CYCLE statement at (1) is not within a construct\ntemp.f95:59:19:\n\n   59 |                 end if\n      |                   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:60:16:\n\n   60 |             else\n      |                1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:62:20:\n\n   62 |                 exit\n      |                    1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:63:15:\n\n   63 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:64:11:\n\n   64 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:65:38:\n\n   65 |         if (i == len_trim(str)+1) then\n      |                                      1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:67:24:\n\n   67 |             res = .true.\n      |                        1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:68:11:\n\n   68 |         end if\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:69:7:\n\n   69 |     end function matches\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "409": {
        "compiled": true,
        "executed": true,
        "stdout": "32766\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "412": {
        "compiled": true,
        "executed": true,
        "stdout": "          1         2Fizz               4Buzz      Fizz               7         8Fizz      Buzz              11Fizz              13        14FizzBuzz  \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "414": {
        "compiled": true,
        "executed": true,
        "stdout": "Maximum value: 3\nSecond maximum value: 3\nThird maximum value: 3\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "415": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:41:33:\n\n   41 |             result = char(carry%10 + ichar('0')) // result\n      |                                 1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018carry\u2019 at (1)\ntemp.f95:47:33:\n\n   47 |             result = char(carry%10 + ichar('0')) // result\n      |                                 1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018carry\u2019 at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "422": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:41:31:\n\n   41 |     function valid_word_square(words) result(valid)\n      |                               1\nError: Procedure \u2018valid_word_square\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:42:21:\n\n   42 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:43:48:\n\n   43 |         character(len=*), intent(in) :: words(:)\n      |                                                1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:44:43:\n\n   44 |         integer :: num_rows, num_cols, i, j\n      |                                           1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:45:24:\n\n   45 |         logical :: valid\n      |                        1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:47:30:\n\n   47 |         num_rows = size(words)\n      |                              1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:48:37:\n\n   48 |         num_cols = size(words, dim=2)\n      |                                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:50:45:\n\n   50 |         do i = 0, min(num_rows, num_cols) - 1\n      |                                             1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:51:49:\n\n   51 |             do j = 0, min(num_rows, num_cols) - 1\n      |                                                 1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:52:68:\n\n   52 |                 if (words(i+1)(j+1:j+1) /= words(j+1)(i+1:i+1)) then\n      |                                                                    1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:53:35:\n\n   53 |                     valid = .false.\n      |                                   1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:54:24:\n\n   54 |                     exit\n      |                        1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:55:19:\n\n   55 |                 end if\n      |                   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:56:15:\n\n   56 |             end do\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:57:33:\n\n   57 |             if (.not. valid) exit\n      |                                 1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:58:11:\n\n   58 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:59:7:\n\n   59 |     end function valid_word_square\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "434": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:34:32:\n\n   34 |     '\"Hello, my name is John \"', &\n      |                                1\nError: Different CHARACTER lengths (25/8) in array constructor at (1)\ntemp.f95:8:14:\n\n    8 |         read (examples(i), *) s\n      |              1\nError: Function \u2018examples\u2019 at (1) has no IMPLICIT type\ntemp.f95:7:27:\n\n    7 |     do i = 1, size(examples)\n      |                           1\nError: Symbol \u2018examples\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "441": {
        "compiled": true,
        "executed": true,
        "stdout": "Complete rows: 1\nComplete rows: 2\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "448": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:10:4:\n\n   10 |     nums = [4, 3, 2, 7, 8, 2, 3, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (9 and 8)\ntemp.f95:15:4:\n\n   15 |     nums = [1, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (9 and 2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "455": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 11 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7a1d1a54f960 in ???\n#1  0x7a1d1a5504d9 in ???\n#2  0x7a1d1a7a417b in ???\n#3  0x7a1d1a79d684 in ???\n#4  0x7a1d1a79e2aa in ???\n#5  0x5cf4337572af in MAIN__\n#6  0x5cf43375788c in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "459": {
        "compiled": true,
        "executed": true,
        "stdout": "F\nF\nF\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "461": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:4:36:\n\n    4 |     integer :: x, y, hammingDistance\n      |                                    1\nError: Symbol \u2018hammingdistance\u2019 at (1) cannot have a type\ntemp.f95:9:87:\n\n    9 |     print '(A, I0)', 'Hamming distance between ', x, 'and ', y, 'is ', hammingDistance(x, y)\n      |                                                                                       1\nError: Symbol at (1) is not appropriate for an expression\ntemp.f95:14:87:\n\n   14 |     print '(A, I0)', 'Hamming distance between ', x, 'and ', y, 'is ', hammingDistance(x, y)\n      |                                                                                       1\nError: Symbol at (1) is not appropriate for an expression\ntemp.f95:18:54:\n\n   18 |     function hammingDistance(x, y) result(hammingDist)\n      |                                                      1\nError: PROGRAM attribute of \u2018hammingdistance\u2019 conflicts with PROCEDURE attribute at (1)\ntemp.f95:19:21:\n\n   19 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:20:35:\n\n   20 |         integer, intent(in) :: x, y\n      |                                   1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:21:30:\n\n   21 |         integer :: hammingDist\n      |                              1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:23:47:\n\n   23 |         hammingDist = count(bit_xor(x, y) /= 0)\n      |                                               1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:24:7:\n\n   24 |     end function hammingDistance\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:7:5:\n\n    7 |     x = 1\n      |     1\nError: Symbol \u2018x\u2019 at (1) has no IMPLICIT type\ntemp.f95:8:5:\n\n    8 |     y = 4\n      |     1\nError: Symbol \u2018y\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "463": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:15:25:\n\n   15 |     grid(:, :) = reshape([1], shape(grid))\n      |                         1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\ntemp.f95:19:25:\n\n   19 |     grid(:, :) = reshape([1, 0], shape(grid))\n      |                         1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "476": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:16:24:\n\n   16 |     function complement(num) result(res)\n      |                        1\nError: Procedure \u2018complement\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:17:21:\n\n   17 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:18:34:\n\n   18 |         integer, intent(in) :: num\n      |                                  1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:19:22:\n\n   19 |         integer :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:21:29:\n\n   21 |         res = btest(num, 0_8)\n      |                             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:22:7:\n\n   22 |     end function complement\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "482": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 8 of file temp.f95\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7ab3bb504960 in ???\n#1  0x7ab3bb5054d9 in ???\n#2  0x7ab3bb75917b in ???\n#3  0x7ab3bb752684 in ???\n#4  0x7ab3bb7532aa in ???\n#5  0x5ce92ffd7597 in MAIN__\n#6  0x5ce92ffd777e in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "485": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:17:34:\n\n   17 |     function max_consecutive_ones(nums) result(max_consecutive_ones_)\n      |                                  1\nError: Procedure \u2018max_consecutive_ones\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:19:21:\n\n   19 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:20:49:\n\n   20 |         integer, dimension(:), intent(in) :: nums\n      |                                                 1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:21:66:\n\n   21 |         integer :: max_consecutive_ones_, current_consecutive_ones\n      |                                                                  1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:23:36:\n\n   23 |         current_consecutive_ones = 0\n      |                                    1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:24:33:\n\n   24 |         max_consecutive_ones_ = 0\n      |                                 1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:26:28:\n\n   26 |         do i = 1, size(nums)\n      |                            1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:27:34:\n\n   27 |             if (nums(i) == 1) then\n      |                                  1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:28:71:\n\n   28 |                 current_consecutive_ones = current_consecutive_ones + 1\n      |                                                                       1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:29:16:\n\n   29 |             else\n      |                1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:30:92:\n\n   30 |                 max_consecutive_ones_ = max(max_consecutive_ones_, current_consecutive_ones)\n      |                                                                                            1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:31:44:\n\n   31 |                 current_consecutive_ones = 0\n      |                                            1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:32:15:\n\n   32 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:33:11:\n\n   33 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:35:84:\n\n   35 |         max_consecutive_ones_ = max(max_consecutive_ones_, current_consecutive_ones)\n      |                                                                                    1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:36:7:\n\n   36 |     end function max_consecutive_ones\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "492": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:37:35:\n\n   37 |             else if (diff < minval(diff, l-1, w-1)) then\n      |                                   1\nError: \u2018array\u2019 argument of \u2018minval\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "495": {
        "compiled": true,
        "executed": true,
        "stdout": "Total seconds Ashe is poisoned:\n2\n5\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "496": {
        "compiled": true,
        "executed": true,
        "stdout": "ans = \n\u0002\u0000\u0000\u0000\n\u0003\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "500": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:36:28:\n\n   36 |         allocate(words(size(word)))\n      |                            1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:66:31:\n\n   66 |                     deallocate(words(size(words)))\n      |                               1\nError: Allocate-object at (1) must be ALLOCATABLE or a POINTER\ntemp.f95:12:13:\n\n   12 |     examples(4) = \"Peace \"\n      |             1\nWarning: Array reference at (1) is out of bounds (4 > 3) in dimension 1\ntemp.f95:13:13:\n\n   13 |     examples(5) = \"omk \"\n      |             1\nWarning: Array reference at (1) is out of bounds (5 > 3) in dimension 1\ntemp.f95:14:13:\n\n   14 |     examples(6) = \"adsdf \"\n      |             1\nWarning: Array reference at (1) is out of bounds (6 > 3) in dimension 1\ntemp.f95:15:13:\n\n   15 |     examples(7) = \"sfd \"\n      |             1\nWarning: Array reference at (1) is out of bounds (7 > 3) in dimension 1\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "501": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:2:9:\n\n    2 |     use modes_mod\n      |         1\nFatal Error: Cannot open module file \u2018modes_mod.mod\u2019 for reading at (1): No such file or directory\ncompilation terminated.\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "504": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:34:34:\n\n   34 |             res = digits(mod(i, 7)+1) // res\n      |                                  1\nError: Invalid character in name at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "506": {
        "compiled": true,
        "executed": true,
        "stdout": "Gold Medal\nSilver Med\nBronze Med\n4         \n5         \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "507": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:36:30:\n\n   36 |                 res = res .or. is_perfect(i)\n      |                              1\nError: Function \u2018is_perfect\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:39:21:\n\n   39 |         if (n == sum(1, n)) then\n      |                     1\nError: \u2018array\u2019 argument of \u2018sum\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "509": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 8 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x799c773bf960 in ???\n#1  0x799c773c04d9 in ???\n#2  0x799c7761417b in ???\n#3  0x799c7760d684 in ???\n#4  0x799c7760e2aa in ???\n#5  0x55a708272282 in MAIN__\n#6  0x55a70827257c in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "520": {
        "compiled": true,
        "executed": true,
        "stdout": "T\nT\nF\nT\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "521": {
        "compiled": true,
        "executed": true,
        "stdout": "1\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "530": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:7:19:\n\n    7 |     type(TreeNode), pointer :: root\n      |                   1\nError: Derived type \u2018treenode\u2019 at (1) is being used before it is defined\ntemp.f95:25:23:\n\n   25 |         type(TreeNode), pointer :: root\n      |                       1\nError: Derived type \u2018treenode\u2019 at (1) is being used before it is defined\ntemp.f95:27:17:\n\n   27 |         allocate(root)\n      |                 1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:31:24:\n\n   31 |         deallocate(root)\n      |                        1\nError: Allocate-object at (1) is not a nonprocedure pointer nor an allocatable variable\ntemp.f95:36:24:\n\n   36 |         class(TreeNode), pointer, intent(in) :: node\n      |                        1\nError: Derived type \u2018treenode\u2019 at (1) is being used before it is defined\ntemp.f95:41:39:\n\n   41 |         elseif (.not. associated(node%left) .and. .not. associated(node%right)) then\n      |                                       1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:44:41:\n\n   44 |             res = min(min_abs_diff(node%left), min_abs_diff(node%right))\n      |                                         1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:47:29:\n\n   47 |         if (associated(node%left) .and. associated(node%right)) then\n      |                             1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:48:37:\n\n   48 |             res = min(res, abs(node%val - node%right%val))\n      |                                     1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:49:37:\n\n   49 |             res = min(res, abs(node%val - node%left%val))\n      |                                     1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\ntemp.f95:50:11:\n\n   50 |         end if\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:55:23:\n\n   55 |         type(TreeNode), pointer, intent(inout) :: root\n      |                       1\nError: Derived type \u2018treenode\u2019 at (1) is being used before it is defined\ntemp.f95:60:27:\n\n   60 |             allocate(root%left)\n      |                           1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:61:18:\n\n   61 |             root%left%val = x(i)\n      |                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:64:26:\n\n   64 |                     root%left%left => null()\n      |                          1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:65:26:\n\n   65 |                     root%left%right => null()\n      |                          1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:69:34:\n\n   69 |             call build_tree(root%left, x, y)\n      |                                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:71:27:\n\n   71 |             allocate(root%right)\n      |                           1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:72:18:\n\n   72 |             root%right%val = x(i)\n      |                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:75:26:\n\n   75 |                     root%right%left => null()\n      |                          1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:76:26:\n\n   76 |                     root%right%right => null()\n      |                          1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:80:34:\n\n   80 |             call build_tree(root%right, x, y)\n      |                                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:1:12:\n\n    1 | program main\n      |            1\n......\n   86 | type :: TreeNode\n      |                2\nError: Two main PROGRAMs at (1) and (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "541": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "f951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "543": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:14:17:\n\n   14 |     open(newunit=unit_in, file='input.txt', status='old', action='read', iostat=status)\n      |                 1\nError: Named constant \u2018unit_in\u2019 in variable definition context (NEWUNIT tag) at (1)\ntemp.f95:31:17:\n\n   31 |     open(newunit=unit_out, file='output.txt', status='replace', action='write', iostat=status)\n      |                 1\nError: Named constant \u2018unit_out\u2019 in variable definition context (NEWUNIT tag) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "551": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:17:36:\n\n   17 |     function solve(s) result(result)\n      |                                    1\nError: Function result \u2018result\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "557": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\n''''s kkke ddddddde sssssst -> \n Example 2:\nood nnng -> \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "559": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:53:16:\n\n   53 |         curr => root\n      |                1\nError: Pointer assignment target is neither TARGET nor POINTER at (1)\ntemp.f95:56:44:\n\n   56 |                 depth = max(depth, maxDepth(curr%left))\n      |                                            1\nError: Rank mismatch in argument \u2018root\u2019 at (1) (scalar and rank-1)\ntemp.f95:56:35:\n\n   56 |                 depth = max(depth, maxDepth(curr%left))\n      |                                   1\nError: Function \u2018maxdepth\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:59:44:\n\n   59 |                 depth = max(depth, maxDepth(curr%right))\n      |                                            1\nError: Rank mismatch in argument \u2018root\u2019 at (1) (scalar and rank-1)\ntemp.f95:59:35:\n\n   59 |                 depth = max(depth, maxDepth(curr%right))\n      |                                   1\nError: Function \u2018maxdepth\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:61:12:\n\n   61 |             curr => curr%left\n      |            1\nError: Different ranks in pointer assignment at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "561": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:35:\n\n    5 |     integer, parameter :: nums(2*n) = [1, 4, 3, 2, 6, 2, 6, 5, 1, 2]\n      |                                   1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 10)\ntemp.f95:16:26:\n\n   16 |             min_val = min(nums(i), nums(j))\n      |                          1\nError: Function \u2018nums\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "563": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:34:29:\n\n   34 |         if (.not. associated(this)) return\n      |                             1\nError: \u2018pointer\u2019 argument of \u2018associated\u2019 intrinsic at (1) must be a POINTER\ntemp.f95:37:44:\n\n   37 |         tilt = abs(sum(this%left%val) - sum(this%right%val))\n      |                                            1\nError: \u2018array\u2019 argument of \u2018sum\u2019 intrinsic at (1) must be an array\ntemp.f95:16:17:\n\n   16 |     open(newunit=unit_in, file=filename_in, status='old', action='read')\n      |                 1\nError: Named constant \u2018unit_in\u2019 in variable definition context (NEWUNIT tag) at (1)\ntemp.f95:26:17:\n\n   26 |     open(newunit=unit_out, file=filename_out, status='replace', action='write')\n      |                 1\nError: Named constant \u2018unit_out\u2019 in variable definition context (NEWUNIT tag) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "566": {
        "compiled": true,
        "executed": true,
        "stdout": " Original matrix:\n  1   3\n  2   4\n Reshaped matrix:\n  1   2   3   4\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "572": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:7:42:\n\n    7 |     real(kind=DP), dimension(n) :: subRoot = [4._DP, 1._DP, 2._DP]\n      |                                          1\nError: Different shape for array assignment at (1) on dimension 1 (7 and 3)\ntemp.f95:10:42:\n\n   10 |     print '(L1)', hasSubtree(root, subRoot)\n      |                                          1\nError: Symbol \u2018subroot\u2019 at (1) has no IMPLICIT type; did you mean \u2018root\u2019?\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "575": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 9 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7cc6862ab960 in ???\n#1  0x7cc6862ac4d9 in ???\n#2  0x7cc68650017b in ???\n#3  0x7cc6864f9684 in ???\n#4  0x7cc6864fa2aa in ???\n#5  0x5ba7b52b737f in MAIN__\n#6  0x5ba7b52b7646 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "589": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:52:52:\n\n   52 |             call print_preorder_traversal(root%left)\n      |                                                    1\nError: SUBROUTINE \u2018print_preorder_traversal\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:52:52:\n\n   52 |             call print_preorder_traversal(root%left)\n      |                                                    1\nError: Type mismatch in argument \u2018root\u2019 at (1); passed CLASS(*) to CLASS(node)\ntemp.f95:53:53:\n\n   53 |             call print_preorder_traversal(root%right)\n      |                                                     1\nError: SUBROUTINE \u2018print_preorder_traversal\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:53:53:\n\n   53 |             call print_preorder_traversal(root%right)\n      |                                                     1\nError: Type mismatch in argument \u2018root\u2019 at (1); passed CLASS(*) to CLASS(node)\ntemp.f95:19:15:\n\n   19 |          iomsg=i, iostat=j)\n      |               1\nError: IOMSG tag at (1) must be of type CHARACTER\ntemp.f95:24:53:\n\n   24 |     read(unit=unit_in, fmt=*, iomsg=k, iostat=l) root\n      |                                                     1\nError: Data transfer element at (1) cannot have POINTER components unless it is processed by a defined input/output procedure\ntemp.f95:24:36:\n\n   24 |     read(unit=unit_in, fmt=*, iomsg=k, iostat=l) root\n      |                                    1\nError: IOMSG tag at (1) must be of type CHARACTER\ntemp.f95:26:8:\n\n   26 |     if (k /= '') then\n      |        1\nError: Operands of comparison operator \u2018/=\u2019 at (1) are INTEGER(4)/CHARACTER(0)\ntemp.f95:27:78:\n\n   27 |         write(unit=error_unit, fmt='(A,A)') 'Error: Reading from file ', trim(k), ' failed.'\n      |                                                                              1\nError: \u2018string\u2019 argument of \u2018trim\u2019 intrinsic at (1) must be CHARACTER\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "590": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:60:54:\n\n   60 |                         if (allocated(root%val(i)%val)) then\n      |                                                      1\nError: \u2018val\u2019 at (1) is not an inquiry reference to an intrinsic type component \u2018val\u2019\ntemp.f95:62:27:\n\n   62 |                         end if\n      |                           1\nError: Expecting END DO statement at (1)\ntemp.f95:65:54:\n\n   65 |                         if (allocated(root%val(i)%val)) then\n      |                                                      1\nError: \u2018val\u2019 at (1) is not an inquiry reference to an intrinsic type component \u2018val\u2019\ntemp.f95:67:27:\n\n   67 |                         end if\n      |                           1\nError: Expecting END DO statement at (1)\ntemp.f95:61:65:\n\n   61 |                             call postorder_traversal(root%val(i))\n      |                                                                 1\nError: SUBROUTINE \u2018postorder_traversal\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:61:65:\n\n   61 |                             call postorder_traversal(root%val(i))\n      |                                                                 1\nError: Type mismatch in argument \u2018root\u2019 at (1); passed REAL(8) to CLASS(node)\ntemp.f95:66:65:\n\n   66 |                             call postorder_traversal(root%val(i))\n      |                                                                 1\nError: SUBROUTINE \u2018postorder_traversal\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:66:65:\n\n   66 |                             call postorder_traversal(root%val(i))\n      |                                                                 1\nError: Type mismatch in argument \u2018root\u2019 at (1); passed REAL(8) to CLASS(node)\ntemp.f95:15:18:\n\n   15 |     open (newunit=unit_in, file=filename_in, status='old', action='read', &\n      |                  1\nError: Named constant \u2018unit_in\u2019 in variable definition context (NEWUNIT tag) at (1)\ntemp.f95:34:18:\n\n   34 |     open (newunit=unit_out, file=filename_out, status='replace', action='write', &\n      |                  1\nError: Named constant \u2018unit_out\u2019 in variable definition context (NEWUNIT tag) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "594": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:20:44:\n\n   20 |     function longest_harmonious_subsequence(nums) result(max_len)\n      |                                            1\nError: Procedure \u2018longest_harmonious_subsequence\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:21:21:\n\n   21 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:22:38:\n\n   22 |         integer, intent(in) :: nums(:)\n      |                                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:23:37:\n\n   23 |         integer :: max_len, len, i, j\n      |                                     1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:25:32:\n\n   25 |         do i = 1, size(nums) - 1\n      |                                1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:26:36:\n\n   26 |             do j = i + 1, size(nums)\n      |                                    1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:27:53:\n\n   27 |                 if (abs(nums(j) - nums(i)) == 1) then\n      |                                                     1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:28:33:\n\n   28 |                     len = len + 1\n      |                                 1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:29:19:\n\n   29 |                 end if\n      |                   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:30:15:\n\n   30 |             end do\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:31:35:\n\n   31 |             if (len > max_len) then\n      |                                   1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:32:29:\n\n   32 |                 max_len = len\n      |                             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:33:15:\n\n   33 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:34:19:\n\n   34 |             len = 0\n      |                   1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:35:11:\n\n   35 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:36:7:\n\n   36 |     end function longest_harmonious_subsequence\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:13:4:\n\n   13 |     nums = [1, 2, 3, 4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (8 and 4)\ntemp.f95:15:4:\n\n   15 |     nums = [1, 1, 1, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (8 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "598": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:29:\n\n    5 |     integer, allocatable :: M(:, :)\n      |                             1\nError: Symbol \u2018m\u2019 at (1) already has basic type of INTEGER\ntemp.f95:9:13:\n\n    9 |     allocate(M(m,n))\n      |             1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:23:18:\n\n   23 |             if (M(i,j) > max_val) then\n      |                  1\nError: Syntax error in IF-expression at (1)\ntemp.f95:26:15:\n\n   26 |             end if\n      |               1\nError: Expecting END DO statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "599": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:21:\n\n    6 |     type(string_set) :: common_strings\n      |                     1\nError: Derived type \u2018string_set\u2019 at (1) is being used before it is defined\ntemp.f95:9:13:\n\n    9 |     allocate(list1(n))\n      |             1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:15:13:\n\n   15 |     allocate(list2(m))\n      |             1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:22:59:\n\n   22 |     write (output_unit, '(*(g0,:,\" \",a))') common_strings%strings\n      |                                                           1\nError: Symbol \u2018common_strings\u2019 at (1) has no IMPLICIT type\ntemp.f95:29:25:\n\n   29 |         type(string_set) :: common_strings\n      |                         1\nError: Derived type \u2018string_set\u2019 at (1) is being used before it is defined\ntemp.f95:26:68:\n\n   26 |     function get_common_strings(list1, list2) result(common_strings)\n      |                                                                    1\nError: Function result \u2018common_strings\u2019 at (1) has no IMPLICIT type\ntemp.f95:37:39:\n\n   37 |                     call common_strings%add(list1(i))\n      |                                       1\nError: VARIABLE attribute of \u2018common_strings\u2019 conflicts with PROCEDURE attribute at (1)\ntemp.f95:44:22:\n\n   44 |     type :: string_set\n      |                      1\nError: Unexpected derived type declaration statement in CONTAINS section at (1)\ntemp.f95:45:49:\n\n   45 |         class(*), pointer :: strings(:) => null()\n      |                                                 1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:46:12:\n\n   46 |     contains\n      |            1\nError: Unexpected CONTAINS statement in CONTAINS section at (1)\ntemp.f95:49:7:\n\n   49 |     end type string_set\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:53:26:\n\n   53 |         class(string_set), intent(inout) :: self\n      |                          1\nError: Derived type \u2018string_set\u2019 at (1) is being used before it is defined\ntemp.f95:57:35:\n\n   57 |         if (.not. associated(self%strings)) then\n      |                                   1\nError: Symbol \u2018self\u2019 at (1) has no IMPLICIT type\ntemp.f95:58:27:\n\n   58 |             allocate(self%strings(1))\n      |                           1\nError: Symbol \u2018self\u2019 at (1) has no IMPLICIT type\ntemp.f95:59:18:\n\n   59 |             self%strings(1) = string\n      |                  1\nError: Symbol \u2018self\u2019 at (1) has no IMPLICIT type\ntemp.f95:60:12:\n\n   60 |         else\n      |            1\nError: Unexpected ELSE statement at (1)\ntemp.f95:61:33:\n\n   61 |             do i = 1, size(self%strings)\n      |                                 1\nError: Symbol \u2018self\u2019 at (1) has no IMPLICIT type\ntemp.f95:62:26:\n\n   62 |                 if (self%strings(i) == string) return\n      |                          1\nError: Symbol \u2018self\u2019 at (1) has no IMPLICIT type\ntemp.f95:63:15:\n\n   63 |             end do\n      |               1\nError: Expecting END SUBROUTINE statement at (1)\ntemp.f95:64:27:\n\n   64 |             allocate(self%strings(size(self%strings)+1))\n      |                           1\nError: Symbol \u2018self\u2019 at (1) has no IMPLICIT type\ntemp.f95:65:18:\n\n   65 |             self%strings(size(self%strings)) = string\n      |                  1\nError: Symbol \u2018self\u2019 at (1) has no IMPLICIT type\ntemp.f95:66:11:\n\n   66 |         end if\n      |           1\nError: Expecting END SUBROUTINE statement at (1)\ntemp.f95:51:30:\n\n   51 |     subroutine add_string(self, string)\n      |                              1\nError: Symbol \u2018self\u2019 at (1) has no IMPLICIT type\ntemp.f95:20:18:\n\n   20 |     common_strings = get_common_strings(list1, list2)\n      |                  1\nError: Symbol \u2018common_strings\u2019 at (1) has no IMPLICIT type\ntemp.f95:32:25:\n\n   32 |         common_strings = string_set()\n      |                         1\nError: Function \u2018string_set\u2019 at (1) has no IMPLICIT type\ntemp.f95:8:33:\n\n    8 |     call get_command_argument(1, n)\n      |                                 1\nError: In call to \u2018get_command_argument\u2019 at (1), type mismatch in argument \u2018value\u2019; pass \u2018INTEGER(4)\u2019 to \u2018CHARACTER(*)\u2019\ntemp.f95:14:33:\n\n   14 |     call get_command_argument(2, m)\n      |                                 1\nError: In call to \u2018get_command_argument\u2019 at (1), type mismatch in argument \u2018value\u2019; pass \u2018INTEGER(4)\u2019 to \u2018CHARACTER(*)\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "604": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:2:9:\n\n    2 |     use StringIterator_mod\n      |         1\nFatal Error: Cannot open module file \u2018stringiterator_mod.mod\u2019 for reading at (1): No such file or directory\ncompilation terminated.\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "605": {
        "compiled": true,
        "executed": true,
        "stdout": "F\nF\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "606": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:34:38:\n\n   34 |             call solve(root%left, str)\n      |                                      1\nError: SUBROUTINE \u2018solve\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:35:39:\n\n   35 |             call solve(root%right, str)\n      |                                       1\nError: SUBROUTINE \u2018solve\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "617": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:72:61:\n\n   72 |             write(unit=unit, fmt=\"('(', F8.2)\") root%left%val\n      |                                                             1\nError: \u2018val\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:77:62:\n\n   77 |             write(unit=unit, fmt=\"('(', F8.2)\") root%right%val\n      |                                                              1\nError: \u2018val\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:73:49:\n\n   73 |             call print_tree(root%left, unit=unit)\n      |                                                 1\nError: SUBROUTINE \u2018print_tree\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:73:49:\n\n   73 |             call print_tree(root%left, unit=unit)\n      |                                                 1\nError: Type mismatch in argument \u2018root\u2019 at (1); passed CLASS(*) to CLASS(node)\ntemp.f95:78:50:\n\n   78 |             call print_tree(root%right, unit=unit)\n      |                                                  1\nError: SUBROUTINE \u2018print_tree\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:78:50:\n\n   78 |             call print_tree(root%right, unit=unit)\n      |                                                  1\nError: Type mismatch in argument \u2018root\u2019 at (1); passed CLASS(*) to CLASS(node)\ntemp.f95:43:32:\n\n   43 |                 current%left => merge_trees(root1%left, root2%left)\n      |                                1\nError: Type mismatch in argument \u2018root1\u2019 at (1); passed CLASS(*) to CLASS(node)\ntemp.f95:43:32:\n\n   43 |                 current%left => merge_trees(root1%left, root2%left)\n      |                                1\nError: Function \u2018merge_trees\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:52:33:\n\n   52 |                 current%right => merge_trees(root1%right, root2%right)\n      |                                 1\nError: Type mismatch in argument \u2018root1\u2019 at (1); passed CLASS(*) to CLASS(node)\ntemp.f95:52:33:\n\n   52 |                 current%right => merge_trees(root1%right, root2%right)\n      |                                 1\nError: Function \u2018merge_trees\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:14:17:\n\n   14 |     open(newunit=unit_in, file=\"input.txt\", status=\"old\", action=\"read\", &\n      |                 1\nError: Named constant \u2018unit_in\u2019 in variable definition context (NEWUNIT tag) at (1)\ntemp.f95:20:35:\n\n   20 |     read(unit=unit_in, fmt=*) root1\n      |                                   1\nError: Data transfer element at (1) cannot have POINTER components unless it is processed by a defined input/output procedure\ntemp.f95:21:35:\n\n   21 |     read(unit=unit_in, fmt=*) root2\n      |                                   1\nError: Data transfer element at (1) cannot have POINTER components unless it is processed by a defined input/output procedure\ntemp.f95:25:28:\n\n   25 |     new_root => merge_trees(root1, root2)\n      |                            1\nError: Actual argument to \u2018root1\u2019 at (1) must be polymorphic\ntemp.f95:28:17:\n\n   28 |     open(newunit=unit_out, file=\"output.txt\", status=\"replace\", action=\"write\", &\n      |                 1\nError: Named constant \u2018unit_out\u2019 in variable definition context (NEWUNIT tag) at (1)\ntemp.f95:30:20:\n\n   30 |     call print_tree(new_root, unit=unit_out)\n      |                    1\nError: Actual argument to \u2018root\u2019 at (1) must be polymorphic\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "628": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:14:4:\n\n   14 |     nums = (/ 1, 2, 3, 4 /)\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (3 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "637": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "f951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "643": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 55 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7a2991d6b960 in ???\n#1  0x7a2991d6c4d9 in ???\n#2  0x7a2991fc017b in ???\n#3  0x7a2991fc0752 in ???\n#4  0x7a2991fbcf1b in ???\n#5  0x7a2991fc1e3c in ???\n#6  0x7a2991fc2e55 in ???\n#7  0x595e47e4b297 in get_args.0\n#8  0x595e47e4b48f in MAIN__\n#9  0x595e47e4b8aa in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "645": {
        "compiled": true,
        "executed": true,
        "stdout": " Repeated:            2\n Missing:            3\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "653": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:13:\n\n    2 |     use, intrinsic :: iso_fortran_env, only : error_unit, DP => REAL64\n      |                     2\n......\n    5 |     type(DP), dimension(n) :: x, y\n      |             1\nError: Type name \u2018dp\u2019 at (1) conflicts with previously declared entity at (2), which has the same name\ntemp.f95:24:17:\n\n    2 |     use, intrinsic :: iso_fortran_env, only : error_unit, DP => REAL64\n      |                     2\n......\n   24 |         type(DP), dimension(:), intent(in) :: root\n      |                 1\nError: Type name \u2018dp\u2019 at (1) conflicts with previously declared entity at (2), which has the same name\ntemp.f95:22:25:\n\n   22 |     subroutine solve(root, k, res)\n      |                         1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:9:5:\n\n    9 |     x = (/ 5._DP, 3._DP, 6._DP, 2._DP, 4._DP, -1._DP, 7._DP /)\n      |     1\nError: Symbol \u2018x\u2019 at (1) has no IMPLICIT type\ntemp.f95:10:5:\n\n   10 |     y = (/ 5._DP, 3._DP, 6._DP, 2._DP, 4._DP, -1._DP, 7._DP /)\n      |     1\nError: Symbol \u2018y\u2019 at (1) has no IMPLICIT type\ntemp.f95:32:32:\n\n   32 |                 if (root(i)+root(j) == k) then\n      |                                1\nError: Function \u2018root\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "657": {
        "compiled": true,
        "executed": true,
        "stdout": "",
        "stderr": "STOP Invalid input.\n",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "661": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:15:39:\n\n   15 |             smoothed_img(i, j) = floor(avg(img(i-1:i+1, j-1:j+1)))\n      |                                       1\nError: \u2018a\u2019 argument of \u2018floor\u2019 intrinsic at (1) must be REAL\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "671": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:48:21:\n\n   48 |             allocate(node)\n      |                     1\nError: Unlimited polymorphic allocate-object at (1) requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:49:43:\n\n   49 |             read(unit=unit, fmt=*) node%val\n      |                                           1\nError: \u2018val\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:52:35:\n\n   52 |                 allocate(node%left)\n      |                                   1\nError: \u2018left\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:53:47:\n\n   53 |                 call read_node(unit, node%left)\n      |                                               1\nError: \u2018left\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:57:36:\n\n   57 |                 allocate(node%right)\n      |                                    1\nError: \u2018right\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:58:48:\n\n   58 |                 call read_node(unit, node%right)\n      |                                                1\nError: \u2018right\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:70:37:\n\n   70 |             write(unit=unit, fmt=\"(-1)\")\n      |                                     1\nError: Expected P edit descriptor in format string at (1)\ntemp.f95:72:37:\n\n   72 |             if (associated(node%left) .and. associated(node%right)) then\n      |                                     1\nError: \u2018left\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:73:48:\n\n   73 |                 call print_second_min(node%left, unit=unit)\n      |                                                1\nError: \u2018left\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:74:49:\n\n   74 |                 call print_second_min(node%right, unit=unit)\n      |                                                 1\nError: \u2018right\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:75:42:\n\n   75 |             else if (associated(node%left)) then\n      |                                          1\nError: \u2018left\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:76:48:\n\n   76 |                 call print_second_min(node%left, unit=unit)\n      |                                                1\nError: \u2018left\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:77:43:\n\n   77 |             else if (associated(node%right)) then\n      |                                           1\nError: \u2018right\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:78:49:\n\n   78 |                 call print_second_min(node%right, unit=unit)\n      |                                                 1\nError: \u2018right\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:71:12:\n\n   71 |         else\n      |            1\n......\n   79 |             else\n      |                2\nError: Duplicate ELSE statements at (1) and (2)\ntemp.f95:80:48:\n\n   80 |                 write(unit=unit, fmt=*) node%val\n      |                                                1\nError: \u2018val\u2019 at (1) is not a member of the \u2018__class__STAR_p\u2019 structure\ntemp.f95:82:11:\n\n   82 |         end if\n      |           1\nError: Expecting END SUBROUTINE statement at (1)\ntemp.f95:18:21:\n\n   18 |         open(newunit=unit_in, file=filename_in, status=\"old\", action=\"read\")\n      |                     1\nError: Named constant \u2018unit_in\u2019 in variable definition context (NEWUNIT tag) at (1)\ntemp.f95:22:36:\n\n   22 |             call read_node(unit_in, root)\n      |                                    1\nError: Actual argument to \u2018node\u2019 at (1) must be polymorphic\ntemp.f95:31:17:\n\n   31 |     open(newunit=unit_out, file=filename_out, status=\"replace\", action=\"write\")\n      |                 1\nError: Named constant \u2018unit_out\u2019 in variable definition context (NEWUNIT tag) at (1)\ntemp.f95:32:26:\n\n   32 |     call print_second_min(root, unit=unit_out)\n      |                          1\nError: Actual argument to \u2018node\u2019 at (1) must be unlimited polymorphic since the formal argument is a pointer or allocatable unlimited polymorphic entity [F2008: 12.5.2.5]\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "674": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:18:32:\n\n   18 |     function len_longest_subseq(nums) result(len)\n      |                                1\nError: Procedure \u2018len_longest_subseq\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:19:21:\n\n   19 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:20:38:\n\n   20 |         integer, intent(in) :: nums(:)\n      |                                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:21:31:\n\n   21 |         integer :: len, i, j, n\n      |                               1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:23:22:\n\n   23 |         n = size(nums)\n      |                      1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:24:24:\n\n   24 |         if (n == 0) then\n      |                        1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:25:19:\n\n   25 |             len = 0\n      |                   1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:26:18:\n\n   26 |             return\n      |                  1\nError: Unexpected RETURN statement in CONTAINS section at (1)\ntemp.f95:27:11:\n\n   27 |         end if\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:29:15:\n\n   29 |         len = 1\n      |               1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:30:19:\n\n   30 |         do i = 2, n\n      |                   1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:31:41:\n\n   31 |             if (nums(i-1) < nums(i)) then\n      |                                         1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:32:29:\n\n   32 |                 len = len + 1\n      |                             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:33:16:\n\n   33 |             else\n      |                1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:34:25:\n\n   34 |                 j = i - 1\n      |                         1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:35:59:\n\n   35 |                 do while (j > 1 .and. nums(j-1) >= nums(j))\n      |                                                           1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:36:29:\n\n   36 |                     j = j - 1\n      |                             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:37:19:\n\n   37 |                 end do\n      |                   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:38:37:\n\n   38 |                 len = max(len, i - j)\n      |                                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:39:15:\n\n   39 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:40:11:\n\n   40 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:41:7:\n\n   41 |     end function len_longest_subseq\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:10:4:\n\n   10 |     nums = [1, 3, 5, 4, 7]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 5)\ntemp.f95:13:4:\n\n   13 |     nums = [2, 2, 2, 2, 2]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 5)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "680": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:12:8:\n\n   12 |     do i = 1, size(tests)\n      |        1\nError: Symbol \u2018i\u2019 at (1) has no IMPLICIT type\ntemp.f95:6:25:\n\n    6 |     logical :: results(:)\n      |                         1\nError: Array \u2018results\u2019 at (1) cannot have a deferred shape\ntemp.f95:8:19:\n\n    8 |     tests = [\"aba\", \"abca\", \"abc\"]\n      |                   1\nError: Different CHARACTER lengths (3/4) in array constructor at (1)\ntemp.f95:9:13:\n\n    9 |     allocate(results(size(tests)))\n      |             1\nError: Allocate-object at (1) must be ALLOCATABLE or a POINTER\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "682": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "\nProgram received signal SIGSEGV: Segmentation fault - invalid memory reference.\n\nBacktrace for this error:\n#0  0x7fb748025960 in ???\n#1  0x7fb748024ac5 in ???\n#2  0x7fb747e1b51f in ???\n#3  0x7fb747f80c4d in ???\n#4  0x5a3ceb0384e7 in get_args.0\n#5  0x5a3ceb038585 in MAIN__\n",
        "exit_code": -11,
        "exec_success": ""
    },
    "693": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:35:28:\n\n   35 |             if (bit(n, i) /= bit(n, j)) then\n      |                            1\nError: Function \u2018bit\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "696": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 8 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7ded1c4d6960 in ???\n#1  0x7ded1c4d74d9 in ???\n#2  0x7ded1c72b17b in ???\n#3  0x7ded1c724684 in ???\n#4  0x7ded1c7252aa in ???\n#5  0x575526224231 in MAIN__\n#6  0x575526224467 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "697": {
        "compiled": true,
        "executed": true,
        "stdout": "Example 1: 1\nExample 2: 1\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "700": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:4:15:\n\n    4 |     type(node), pointer :: root\n      |               1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:11:63:\n\n   11 |         write (unit=error_unit, fmt='(*(g0))') 'Root: ', root%value\n      |                                                               1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:21:20:\n\n   21 |         class(node), pointer, intent(in) :: root\n      |                    1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:23:20:\n\n   23 |         class(node), pointer :: result\n      |                    1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:20:48:\n\n   20 |     function find_node(root, val) result(result)\n      |                                                1\nError: Function result \u2018result\u2019 at (1) has no IMPLICIT type\ntemp.f95:30:18:\n\n   30 |         if (root%value == val) then\n      |                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:32:29:\n\n   32 |         else if (val < root%value) then\n      |                             1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:33:38:\n\n   33 |             result => find_node(root%left, val)\n      |                                      1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:34:12:\n\n   34 |         else\n      |            1\nError: Unexpected ELSE statement at (1)\ntemp.f95:35:38:\n\n   35 |             result => find_node(root%right, val)\n      |                                      1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:36:11:\n\n   36 |         end if\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:40:19:\n\n   40 |         type(node), pointer :: root\n      |                   1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:63:17:\n\n   63 |     type, public :: node\n      |                 1\nError: Derived type at (1) can only be PUBLIC in the specification part of a module\ntemp.f95:64:24:\n\n   64 |         integer :: value\n      |                        1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:65:20:\n\n   65 |         class(node), pointer :: left => null(), right => null()\n      |                    1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:66:7:\n\n   66 |     end type node\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:20:27:\n\n   20 |     function find_node(root, val) result(result)\n      |                           1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:39:33:\n\n   39 |     subroutine get_arguments(root, val)\n      |                                 1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:8:27:\n\n    8 |     call get_arguments(root, val)\n      |                           1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:45:29:\n\n   45 |         read (unit=input_unit, fmt='(A)', iostat=ios) line\n      |                             1\nError: Symbol \u2018input_unit\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "703": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:2:11:\n\n    2 |     use :: kth_largest_mod\n      |           1\nFatal Error: Cannot open module file \u2018kth_largest_mod.mod\u2019 for reading at (1): No such file or directory\ncompilation terminated.\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "704": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:30:77:\n\n   30 |     recursive function binary_search(nums, target, left, right) result(index)\n      |                                                                             1\nError: Function result \u2018index\u2019 at (1) has no IMPLICIT type\ntemp.f95:27:16:\n\n   27 |         index = binary_search(nums, target, 1, size(nums))\n      |                1\nError: Cannot convert UNKNOWN to INTEGER(4) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "705": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:2:9:\n\n    2 |     use hashset_mod\n      |         1\nFatal Error: Cannot open module file \u2018hashset_mod.mod\u2019 for reading at (1): No such file or directory\ncompilation terminated.\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "706": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:9:\n\n    9 |   private\n      |         1\nError: PRIVATE statement at (1) is only allowed in the specification part of a module\ntemp.f95:68:32:\n\n   68 | subroutine put(this, key, value)\n      |                                1\nError: Symbol \u2018put\u2019 at (1) already has an explicit interface\ntemp.f95:69:41:\n\n   69 |   class(MyHashMap), intent(inout) :: this\n      |                                         1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:70:28:\n\n   70 |   integer, intent(in) :: key\n      |                            1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:71:30:\n\n   71 |   integer, intent(in) :: value\n      |                              1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:72:18:\n\n   72 |   integer :: index\n      |                  1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:75:27:\n\n   75 |   index = find_index(this%map, key)\n      |                           1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:78:22:\n\n   78 |   if (index == 0) then\n      |                      1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:79:19:\n\n   79 |     allocate(this%map(size(this%map)+1))\n      |                   1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:80:10:\n\n   80 |     this%map(size(this%map))%key = key\n      |          1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:81:10:\n\n   81 |     this%map(size(this%map))%value = value\n      |          1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:82:6:\n\n   82 |   else\n      |      1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:83:10:\n\n   83 |     this%map(index)%value = value\n      |          1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:84:5:\n\n   84 |   end if\n      |     1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:85:3:\n\n   85 | end subroutine put\n      |   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:87:23:\n\n   87 | function get(this, key) result(value)\n      |                       1\nError: Symbol \u2018get\u2019 at (1) already has an explicit interface\ntemp.f95:88:38:\n\n   88 |   class(MyHashMap), intent(in) :: this\n      |                                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:89:28:\n\n   89 |   integer, intent(in) :: key\n      |                            1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:90:18:\n\n   90 |   integer :: value\n      |                  1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:91:18:\n\n   91 |   integer :: index\n      |                  1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:94:27:\n\n   94 |   index = find_index(this%map, key)\n      |                           1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:97:22:\n\n   97 |   if (index /= 0) then\n      |                      1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:98:11:\n\n   98 |     value = this%map(index)%value\n      |           1\nError: Syntax error in VALUE statement at (1)\ntemp.f95:99:6:\n\n   99 |   else\n      |      1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:100:14:\n\n  100 |     value = -1\n      |              1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:101:5:\n\n  101 |   end if\n      |     1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:102:3:\n\n  102 | end function get\n      |   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:104:28:\n\n  104 | subroutine remove(this, key)\n      |                            1\nError: Symbol \u2018remove\u2019 at (1) already has an explicit interface\ntemp.f95:105:41:\n\n  105 |   class(MyHashMap), intent(inout) :: this\n      |                                         1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:106:28:\n\n  106 |   integer, intent(in) :: key\n      |                            1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:107:18:\n\n  107 |   integer :: index\n      |                  1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:110:27:\n\n  110 |   index = find_index(this%map, key)\n      |                           1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:113:22:\n\n  113 |   if (index /= 0) then\n      |                      1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:114:21:\n\n  114 |     deallocate(this%map(index)%key)\n      |                     1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:115:21:\n\n  115 |     deallocate(this%map(index)%value)\n      |                     1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:116:10:\n\n  116 |     this%map(index) = this%map(size(this%map))\n      |          1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:117:21:\n\n  117 |     deallocate(this%map(size(this%map)))\n      |                     1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:118:5:\n\n  118 |   end if\n      |     1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:119:3:\n\n  119 | end subroutine remove\n      |   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:122:17:\n\n  122 |   type(hash_map), intent(in) :: map(:)\n      |                 1\nError: Derived type \u2018hash_map\u2019 at (1) is being used before it is defined\ntemp.f95:133:6:\n\n  133 |   if (\n      |      1\nError: Invalid character in name at (1)\nf951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "709": {
        "compiled": true,
        "executed": true,
        "stdout": " hello                                                                                               \n here                                                                                                \n lovely                                                                                              \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "717": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:38:12:\n\n   38 |         ans = .true.\n      |            1\nError: \u2018ans\u2019 at (1) is not a variable\ntemp.f95:40:12:\n\n   40 |         ans = .false.\n      |            1\nError: \u2018ans\u2019 at (1) is not a variable\ntemp.f95:22:23:\n\n   22 | subroutine solve(n, ans)\n      |                       1\nError: PROCEDURE attribute conflicts with INTENT attribute in \u2018ans\u2019 at (1)\ntemp.f95:12:18:\n\n   12 |     call solve(n, ans)\n      |                  1\nError: Expected a procedure for argument \u2018ans\u2019 at (1)\ntemp.f95:18:18:\n\n   18 |     call solve(n, ans)\n      |                  1\nError: Expected a procedure for argument \u2018ans\u2019 at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "724": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:48:28:\n\n   48 |         if (.not. allocated(pivot_index)) then\n      |                            1\nError: \u2018array\u2019 argument of \u2018allocated\u2019 intrinsic at (1) must be ALLOCATABLE\ntemp.f95:14:4:\n\n   14 |     nums = [1, 2, 3]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (6 and 3)\ntemp.f95:17:4:\n\n   17 |     nums = [2, 1, -1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (6 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "728": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:23:22:\n\n   11 |     do i = left, right\n      |                      2\n......\n   23 |             i = i / 10\n      |                      1\nError: Variable \u2018i\u2019 at (1) cannot be redefined inside loop beginning at (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "733": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:59:55:\n\n   59 |                     call flood_fill(image, i, j, color)\n      |                                                       1\nError: SUBROUTINE \u2018flood_fill\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:22:20:\n\n   22 |     image = reshape([0, 0, 0, &\n      |                    1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "734": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:13:16:\n\n   13 |     arr = [\"I \", \"am \", \"happy \", \"with \", \"leetcode \"]\n      |                1\nError: Different CHARACTER lengths (2/3) in array constructor at (1)\ntemp.f95:18:26:\n\n   18 |     sentence1 = [\"great \", \"acting \", \"skills \"]\n      |                          1\nError: Different CHARACTER lengths (6/7) in array constructor at (1)\ntemp.f95:20:25:\n\n   20 |     sentence2 = [\"fine \", \"drama \", \"talent \"]\n      |                         1\nError: Different CHARACTER lengths (5/6) in array constructor at (1)\ntemp.f95:24:18:\n\n   24 |     yi = [\"fine \", \"acting \"]\n      |                  1\nError: Different CHARACTER lengths (5/7) in array constructor at (1)\ntemp.f95:25:34:\n\n   25 |     result = are_sentences_similar(sentence1, sentence2, xi, yi)\n      |                                  1\nError: Return type mismatch of function \u2018are_sentences_similar\u2019 at (1) (UNKNOWN/LOGICAL(4))\ntemp.f95:25:13:\n\n   25 |     result = are_sentences_similar(sentence1, sentence2, xi, yi)\n      |             1\nError: Function \u2018are_sentences_similar\u2019 at (1) has no IMPLICIT type\ntemp.f95:25:34:\n\n   25 |     result = are_sentences_similar(sentence1, sentence2, xi, yi)\n      |                                  1\nError: Return type mismatch of function \u2018are_sentences_similar\u2019 at (1) (UNKNOWN/LOGICAL(4))\ntemp.f95:35:13:\n\n   35 |     result = are_sentences_similar(sentence1, sentence2, xi, yi)\n      |             1\nError: Function \u2018are_sentences_similar\u2019 at (1) has no IMPLICIT type\ntemp.f95:42:31:\n\n   42 |     sentence2 = [\"doubleplus \", \"good \"]\n      |                               1\nError: Different CHARACTER lengths (11/5) in array constructor at (1)\ntemp.f95:25:34:\n\n   25 |     result = are_sentences_similar(sentence1, sentence2, xi, yi)\n      |                                  1\nError: Return type mismatch of function \u2018are_sentences_similar\u2019 at (1) (UNKNOWN/LOGICAL(4))\ntemp.f95:47:13:\n\n   47 |     result = are_sentences_similar(sentence1, sentence2, xi, yi)\n      |             1\nError: Function \u2018are_sentences_similar\u2019 at (1) has no IMPLICIT type\ntemp.f95:25:57:\n\n   25 |     result = are_sentences_similar(sentence1, sentence2, xi, yi)\n      |                                                         1\nError: Rank mismatch in argument \u2018similarpairs\u2019 at (1) (rank-2 and rank-1)\ntemp.f95:35:57:\n\n   35 |     result = are_sentences_similar(sentence1, sentence2, xi, yi)\n      |                                                         1\nError: Rank mismatch in argument \u2018similarpairs\u2019 at (1) (rank-2 and rank-1)\ntemp.f95:47:57:\n\n   47 |     result = are_sentences_similar(sentence1, sentence2, xi, yi)\n      |                                                         1\nError: Rank mismatch in argument \u2018similarpairs\u2019 at (1) (rank-2 and rank-1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "744": {
        "compiled": true,
        "executed": true,
        "stdout": " c\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "746": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:31:\n\n    6 |     integer :: i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z\n      |                               1\nError: Symbol \u2018n\u2019 at (1) already has basic type of INTEGER\ntemp.f95:23:19:\n\n   23 |         min_cost = huge(1_8) ! initialize with a large value\n      |                   1\nError: Arithmetic overflow converting INTEGER(8) to INTEGER(4) at (1). This check can be disabled with the option \u2018-fno-range-check\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "747": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:31:\n\n    6 |     integer :: i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z\n      |                               1\nError: Symbol \u2018n\u2019 at (1) already has basic type of INTEGER\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "748": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:56:\n\n    5 |     character(len=15), dimension(4) :: words = [\"step \", \"steps \", \"stripe \", \"stepple \"]\n      |                                                        1\nError: Different CHARACTER lengths (5/6) in array constructor at (1)\ntemp.f95:14:70:\n\n   14 |     function solve(licensePlate, words) result(shortestCompletingWord)\n      |                                                                      1\nError: Function result \u2018shortestcompletingword\u2019 at (1) has no IMPLICIT type\ntemp.f95:8:54:\n\n    8 |     shortestCompletingWord = solve(licensePlate, words)\n      |                                                      1\nError: Symbol \u2018words\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "760": {
        "compiled": true,
        "executed": true,
        "stdout": "Mapping:\n2 5 4 3 1\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "762": {
        "compiled": true,
        "executed": true,
        "stdout": "Example 1: 5\nExample 2: 3\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "766": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:15:27:\n\n   15 |     matrix(:, :) = reshape([1, 2, &\n      |                           1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "771": {
        "compiled": true,
        "executed": true,
        "stdout": "Example 1: 50\nExample 2: 49\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "783": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:33:15:\n\n   33 |     type(node), pointer, intent(in) :: root\n      |               1\nError: Derived type \u2018node\u2019 at (1) is being used before it is defined\ntemp.f95:34:9:\n\n   34 |     real(DP) :: res\n      |         1\nError: Parameter \u2018dp\u2019 at (1) has not been declared or is a variable, which does not reduce to a constant expression\ntemp.f95:35:9:\n\n   35 |     real(DP) :: diff\n      |         1\nError: Parameter \u2018dp\u2019 at (1) has not been declared or is a variable, which does not reduce to a constant expression\ntemp.f95:38:20:\n\n   38 |         res = -1._DP\n      |                    1\nError: Missing kind-parameter at (1)\ntemp.f95:42:21:\n\n   42 |     diff = abs(root%val - root%left%val)\n      |                     1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:44:34:\n\n   44 |     res = min(res, min_diff(root%left))\n      |                                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:45:34:\n\n   45 |     res = min(res, min_diff(root%right))\n      |                                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:1:12:\n\n    1 | program main\n      |            1\n......\n   48 | type node\n      |         2   \nError: Two main PROGRAMs at (1) and (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "796": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:19:24:\n\n   19 |     function can_become(s, goal) result(res)\n      |                        1\nError: Procedure \u2018can_become\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:20:21:\n\n   20 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:21:47:\n\n   21 |         character(len=*), intent(in) :: s, goal\n      |                                               1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:22:23:\n\n   22 |         integer :: i, j\n      |                       1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:23:22:\n\n   23 |         logical :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:25:21:\n\n   25 |         res = .false.\n      |                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:26:29:\n\n   26 |         do while (i < len(s))\n      |                             1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:27:37:\n\n   27 |             if (s(i+1:) == goal) then\n      |                                     1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:28:28:\n\n   28 |                 res = .true.\n      |                            1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:29:20:\n\n   29 |                 exit\n      |                    1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:30:15:\n\n   30 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:33:21:\n\n   33 |             i = i + 1\n      |                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:34:11:\n\n   34 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:35:7:\n\n   35 |     end function can_become\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "800": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:39:28:\n\n   39 |         read (color(2:5), \"(H2, H2, H2)\") r, g, b\n      |                            1\nError: Unexpected element \u2018,\u2019 in format string at (1)\ntemp.f95:49:49:\n\n   49 |         read (color1(2:5), \"(H2, H2, H2)\") r1, g1, b1\n      |                                                 1\nWarning: Extraneous characters in format at (1)\ntemp.f95:50:55:\n\n   50 |         read (color2(2:5), \"(H2, H2, H2)\") r2, g2, b2\n      |                                                       1\nWarning: Extraneous characters in format at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "804": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 39 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7a2f860fb960 in ???\n#1  0x7a2f860fc4d9 in ???\n#2  0x7a2f8635017b in ???\n#3  0x7a2f86349684 in ???\n#4  0x7a2f8634a2aa in ???\n#5  0x5a8fec9406fb in MAIN__\n#6  0x5a8fec940d33 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "806": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:4:\n\n    9 |     widths = (/10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10/)\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (26 and 24)\ntemp.f95:11:33:\n\n   11 |     call solve(widths, s, result)\n      |                                 1\nError: Type mismatch in argument \u2018s\u2019 at (1); passed CHARACTER(100) to INTEGER(4)\ntemp.f95:15:4:\n\n   15 |     widths = (/4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10/)\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (26 and 25)\ntemp.f95:17:33:\n\n   17 |     call solve(widths, s, result)\n      |                                 1\nError: Type mismatch in argument \u2018s\u2019 at (1); passed CHARACTER(100) to INTEGER(4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "812": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:46:33:\n\n   46 |         real(kind=DP), value :: a(2), b(2), c(2)\n      |                                 1\nError: VALUE attribute conflicts with DIMENSION attribute at (1)\ntemp.f95:43:28:\n\n   43 |     function triangle_area(a, b, c) result(area)\n      |                            1\nError: Symbol \u2018a\u2019 at (1) has no IMPLICIT type\ntemp.f95:43:31:\n\n   43 |     function triangle_area(a, b, c) result(area)\n      |                               1\nError: Symbol \u2018b\u2019 at (1) has no IMPLICIT type\ntemp.f95:43:34:\n\n   43 |     function triangle_area(a, b, c) result(area)\n      |                                  1\nError: Symbol \u2018c\u2019 at (1) has no IMPLICIT type\ntemp.f95:31:29:\n\n   31 |         read (unit=input_unit, fmt='(I10)') n\n      |                             1\nError: Symbol \u2018input_unit\u2019 at (1) has no IMPLICIT type\ntemp.f95:49:76:\n\n   49 |         area = abs((a(1)*b(2)+b(1)*c(2)+c(1)*a(2)-a(2)*b(1)-b(2)*c(1)-c(2)*a(1)) / 2.0D0)\n      |                                                                            1\nError: Function \u2018a\u2019 at (1) has no IMPLICIT type\ntemp.f95:16:23:\n\n   16 |                 area = triangle_area(points(i), points(j), points(k))\n      |                       1\nError: Type mismatch in argument \u2018a\u2019 at (1); passed REAL(8) to UNKNOWN\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "819": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:16:15:\n\n   16 |     banned = []\n      |               1\nError: Empty array constructor at (1) is not allowed\ntemp.f95:59:29:\n\n   59 |         most_frequent_word = tolower(most_frequent_word)\n      |                             1\nError: Function \u2018tolower\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "821": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 10 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7da5adef4960 in ???\n#1  0x7da5adef54d9 in ???\n#2  0x7da5ae14917b in ???\n#3  0x7da5ae142684 in ???\n#4  0x7da5ae1432aa in ???\n#5  0x5b1d0b18f289 in MAIN__\n#6  0x5b1d0b18f5ad in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "824": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:33:25:\n\n   33 |             if (i < size(sentence)) then\n      |                         1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:26:23:\n\n   26 |         do i = 1, size(sentence)\n      |                       1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "830": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:100:67:\n\n  100 |     character(len=1000), parameter :: examples(3) = [\"abbxxxxzzy \", &\n      |                                                                   1\nError: Different CHARACTER lengths (11/4) in array constructor at (1)\ntemp.f95:95:12:\n\n   95 |             starts(i) = sorted(i, 1)\n      |            1\nError: Dummy argument \u2018starts\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:96:12:\n\n   96 |             ends(i) = sorted(i, 2)\n      |            1\nError: Dummy argument \u2018ends\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:64:4:\n\n   61 |         call sort(starts, ends)\n      |                               2\n......\n   64 |     function sort(starts, ends) result(sorted)\n      |    1\nError: \u2018sort\u2019 at (1) has a type, which is not consistent with the CALL at (2)\ntemp.f95:10:12:\n\n   10 |         s = examples(i)\n      |            1\nError: Function \u2018examples\u2019 at (1) has no IMPLICIT type\ntemp.f95:8:27:\n\n    8 |     do i = 1, size(examples)\n      |                           1\nError: Symbol \u2018examples\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "832": {
        "compiled": true,
        "executed": true,
        "stdout": " TTT\n TTT\n FFF\n TTT\n FFF\n TTT\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "836": {
        "compiled": true,
        "executed": true,
        "stdout": "T\nF\nF\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "844": {
        "compiled": true,
        "executed": true,
        "stdout": "F\nF\nF\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "859": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:27:39:\n\n   27 |     function solve(s, goal) result(res)\n      |                                       1\nError: Function result \u2018res\u2019 at (1) has no IMPLICIT type\ntemp.f95:10:10:\n\n   10 |     res = solve(s, goal)\n      |          1\nError: Cannot convert UNKNOWN to LOGICAL(4) at (1)\ntemp.f95:16:10:\n\n   16 |     res = solve(s, goal)\n      |          1\nError: Cannot convert UNKNOWN to LOGICAL(4) at (1)\ntemp.f95:22:10:\n\n   22 |     res = solve(s, goal)\n      |          1\nError: Cannot convert UNKNOWN to LOGICAL(4) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "860": {
        "compiled": true,
        "executed": true,
        "stdout": "T\nF\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "867": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:11:27:\n\n   11 |     matrix(:, :) = reshape([1, 2, 3, 4, 5, 6], shape(matrix))\n      |                           1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "868": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 9 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7977ba86f960 in ???\n#1  0x7977ba8704d9 in ???\n#2  0x7977baac417b in ???\n#3  0x7977baabd684 in ???\n#4  0x7977baabe2aa in ???\n#5  0x57fdeb89123a in MAIN__\n#6  0x57fdeb8914ba in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "872": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:40:20:\n\n   40 |     type (TreeNode), intent(in) :: root1, root2\n      |                    1\nError: Derived type \u2018treenode\u2019 at (1) is being used before it is defined\ntemp.f95:41:20:\n\n   41 |     type (TreeNode), pointer :: curr1, curr2\n      |                    1\nError: Derived type \u2018treenode\u2019 at (1) is being used before it is defined\ntemp.f95:55:36:\n\n   55 |         if (.not. associated(curr1%left)) then\n      |                                    1\nError: Symbol \u2018curr1\u2019 at (1) has no IMPLICIT type\ntemp.f95:56:42:\n\n   56 |             leafValueSequence(i) = curr1%val\n      |                                          1\nError: Symbol \u2018curr1\u2019 at (1) has no IMPLICIT type\ntemp.f95:58:11:\n\n   58 |         end if\n      |           1\nError: Expecting END DO statement at (1)\ntemp.f95:59:24:\n\n   59 |         curr1 => curr1%left\n      |                        1\nError: Symbol \u2018curr1\u2019 at (1) has no IMPLICIT type\ntemp.f95:61:24:\n\n   61 |         curr2 => curr2%left\n      |                        1\nError: Symbol \u2018curr2\u2019 at (1) has no IMPLICIT type\ntemp.f95:66:43:\n\n   66 |         if (leafValueSequence(i) /= curr2%val) return\n      |                                           1\nError: Symbol \u2018curr2\u2019 at (1) has no IMPLICIT type\ntemp.f95:67:24:\n\n   67 |         curr2 => curr2%left\n      |                        1\nError: Symbol \u2018curr2\u2019 at (1) has no IMPLICIT type\ntemp.f95:51:4:\n\n   51 |     curr1 => root1\n      |    1\nError: Non-POINTER in pointer association context (pointer assignment) at (1)\ntemp.f95:51:13:\n\n   51 |     curr1 => root1\n      |             1\nError: Pointer assignment target is neither TARGET nor POINTER at (1)\ntemp.f95:52:4:\n\n   52 |     curr2 => root2\n      |    1\nError: Non-POINTER in pointer association context (pointer assignment) at (1)\ntemp.f95:52:13:\n\n   52 |     curr2 => root2\n      |             1\nError: Pointer assignment target is neither TARGET nor POINTER at (1)\ntemp.f95:60:29:\n\n   60 |         if (.not. associated(curr2)) exit\n      |                             1\nError: \u2018pointer\u2019 argument of \u2018associated\u2019 intrinsic at (1) must be a POINTER\ntemp.f95:54:25:\n\n   54 |     do while (associated(curr1))\n      |                         1\nError: \u2018pointer\u2019 argument of \u2018associated\u2019 intrinsic at (1) must be a POINTER\ntemp.f95:15:24:\n\n   15 |     result = leafSimilar(root1, root2)\n      |                        1\nError: Return type mismatch of function \u2018leafsimilar\u2019 at (1) (UNKNOWN/LOGICAL(4))\ntemp.f95:15:13:\n\n   15 |     result = leafSimilar(root1, root2)\n      |             1\nError: Function \u2018leafsimilar\u2019 at (1) has no IMPLICIT type\ntemp.f95:15:13:\n\n   15 |     result = leafSimilar(root1, root2)\n      |             1\nError: Type mismatch in argument \u2018root1\u2019 at (1); passed TYPE(treenode) to REAL(4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "876": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:20:40:\n\n   20 |     print \"(A)\", get_middle_node(head)%val\n      |                                        1\nError: Symbol \u2018get_middle_node\u2019 at (1) has no IMPLICIT type\ntemp.f95:29:40:\n\n   29 |     print \"(A)\", get_middle_node(head)%val\n      |                                        1\nError: Symbol \u2018get_middle_node\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "883": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:23:24:\n\n   23 |     function total_area(grid) result(total)\n      |                        1\nError: Procedure \u2018total_area\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:24:21:\n\n   24 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:25:41:\n\n   25 |         integer, intent(in) :: grid(:, :)\n      |                                         1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:26:24:\n\n   26 |         integer :: total\n      |                        1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:27:26:\n\n   27 |         integer :: i, j, v\n      |                          1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:29:17:\n\n   29 |         total = 0\n      |                 1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:30:31:\n\n   30 |         do i = 1, size(grid, 1)\n      |                               1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:31:35:\n\n   31 |             do j = 1, size(grid, 2)\n      |                                   1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:32:30:\n\n   32 |                 v = grid(i, j)\n      |                              1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:33:31:\n\n   33 |                 if (v > 0) then\n      |                               1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:34:47:\n\n   34 |                     total = total + v * (v + 1)\n      |                                               1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:35:19:\n\n   35 |                 end if\n      |                   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:36:15:\n\n   36 |             end do\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:37:11:\n\n   37 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:38:7:\n\n   38 |     end function total_area\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:14:19:\n\n   14 |     grid = reshape([2], shape=[n, n])\n      |                   1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "884": {
        "compiled": true,
        "executed": false,
        "stdout": " Testing example: this apple is sweet this apple is sour\n",
        "stderr": "At line 65 of file temp.f95\nFortran runtime error: Attempting to allocate already allocated variable 'words'\n\nError termination. Backtrace:\n#0  0x7f026a5bf960 in ???\n#1  0x7f026a5c04d9 in ???\n#2  0x59401e141400 in split_into_words.0\n#3  0x59401e1416a6 in solve.1\n#4  0x59401e141a50 in test_example.2\n#5  0x59401e1415a6 in MAIN__\n#6  0x59401e141a98 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "888": {
        "compiled": true,
        "executed": true,
        "stdout": "Answer: 0,2\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "892": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\n Area:    0.00000000    \n Example 2:\n Area:    2.00000000    \n Example 3:\n Area:    4.00000000    \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "896": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:19:4:\n\n   19 |     nums = [1, 3, 2]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "897": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:21:\n\n    6 |     type(error_type), allocatable :: err\n      |                     1\nError: Derived type \u2018error_type\u2019 at (1) is being used before it is defined\ntemp.f95:7:20:\n\n    7 |     type(tree_node), pointer :: root\n      |                    1\nError: Derived type \u2018tree_node\u2019 at (1) is being used before it is defined\ntemp.f95:11:43:\n\n   11 |     read (unit=unit_in, fmt='(A)', iostat=err%stat, iomsg=err%msg, &\n      |                                           1\nError: Invalid value for IOSTAT specification at (1)\ntemp.f95:13:13:\n\n   13 |     if (err%stat /= 0) then\n      |             1\nError: Symbol \u2018err\u2019 at (1) has no IMPLICIT type\ntemp.f95:14:65:\n\n   14 |         write (unit=error_unit, fmt='(2A)') 'error: ', trim(err%msg)\n      |                                                                 1\nError: Symbol \u2018err\u2019 at (1) has no IMPLICIT type\ntemp.f95:16:7:\n\n   16 |     end if\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:19:18:\n\n   19 |           iostat=err%stat, iomsg=err%msg)\n      |                  1\nError: Invalid value for IOSTAT specification at (1)\ntemp.f95:20:13:\n\n   20 |     if (err%stat /= 0) then\n      |             1\nError: Symbol \u2018err\u2019 at (1) has no IMPLICIT type\ntemp.f95:21:65:\n\n   21 |         write (unit=error_unit, fmt='(2A)') 'error: ', trim(err%msg)\n      |                                                                 1\nError: Symbol \u2018err\u2019 at (1) has no IMPLICIT type\ntemp.f95:23:7:\n\n   23 |     end if\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:38:24:\n\n   38 |         type(tree_node), pointer, intent(out) :: root\n      |                        1\nError: Derived type \u2018tree_node\u2019 at (1) is being used before it is defined\ntemp.f95:39:25:\n\n   39 |         class(tree_node), pointer :: current\n      |                         1\nError: Derived type \u2018tree_node\u2019 at (1) is being used before it is defined\ntemp.f95:42:18:\n\n   42 |         allocate (current)\n      |                  1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:45:58:\n\n   45 |             read (unit=unit, fmt=*, iostat=stat) current%val\n      |                                                          1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:47:31:\n\n   47 |             allocate (current%right)\n      |                               1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:48:32:\n\n   48 |             current => current%right\n      |                                1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:50:26:\n\n   50 |         nullify (current%right)\n      |                          1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:55:24:\n\n   55 |         type(tree_node), pointer, intent(inout) :: root\n      |                        1\nError: Derived type \u2018tree_node\u2019 at (1) is being used before it is defined\ntemp.f95:56:24:\n\n   56 |         type(tree_node), pointer :: current, next\n      |                        1\nError: Derived type \u2018tree_node\u2019 at (1) is being used before it is defined\ntemp.f95:60:36:\n\n   60 |             if (associated(current%left)) then\n      |                                    1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:61:33:\n\n   61 |                 next => current%left\n      |                                 1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:62:25:\n\n   62 |                 current%left => null()\n      |                         1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:64:16:\n\n   64 |             else\n      |                1\nError: Unexpected ELSE statement at (1)\ntemp.f95:65:33:\n\n   65 |                 next => current%right\n      |                                 1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:66:25:\n\n   66 |                 current%right => null()\n      |                         1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:68:15:\n\n   68 |             end if\n      |               1\nError: Expecting END DO statement at (1)\ntemp.f95:74:24:\n\n   74 |         type(tree_node), pointer, intent(in) :: root\n      |                        1\nError: Derived type \u2018tree_node\u2019 at (1) is being used before it is defined\ntemp.f95:76:25:\n\n   76 |         class(tree_node), pointer :: current\n      |                         1\nError: Derived type \u2018tree_node\u2019 at (1) is being used before it is defined\ntemp.f95:80:51:\n\n   80 |             write (unit=unit, fmt='(I0)') current%val\n      |                                                   1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:81:36:\n\n   81 |             if (associated(current%left)) then\n      |                                    1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:82:36:\n\n   82 |                 current => current%left\n      |                                    1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:83:41:\n\n   83 |             else if (associated(current%right)) then\n      |                                         1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:84:36:\n\n   84 |                 current => current%right\n      |                                    1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:85:16:\n\n   85 |             else\n      |                1\nError: Unexpected ELSE statement at (1)\ntemp.f95:87:15:\n\n   87 |             end if\n      |               1\nError: Expecting END DO statement at (1)\ntemp.f95:1:12:\n\n    1 | program main\n      |            1\n......\n   93 | type :: tree_node\n      |                 2\nError: Two main PROGRAMs at (1) and (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "905": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:15:4:\n\n   15 |     nums = [0]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "908": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:47:24:\n\n   47 |                         nums(j) = x\n      |                        1\nError: Dummy argument \u2018nums\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:19:4:\n\n   19 |     nums = [0, 10]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (1 and 2)\ntemp.f95:27:4:\n\n   27 |     nums = [1, 3, 6]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (1 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "914": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:12:39:\n\n   12 |     function solve(deck) result(result)\n      |                                       1\nError: Function result \u2018result\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "917": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:34:132:\n\n   34 |         res = any(c == ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']) .or. &\n      |                                                                                                                                    1\nError: Line truncated at (1) [-Werror=line-truncation]\ntemp.f95:34:23:\n\n   34 |         res = any(c == ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']) .or. &\n      |                       1\nError: Invalid character in name at (1)\nf951: some warnings being treated as errors\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "922": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:13:4:\n\n   13 |     nums = (/ 2, 3 /)\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "925": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:23:61:\n\n   23 |     character(len=1000), parameter :: examples(3) = [\"alex \", &\n      |                                                             1\nError: Different CHARACTER lengths (5/6) in array constructor at (1)\ntemp.f95:8:13:\n\n    8 |         read(examples(i), *) name, typed\n      |             1\nError: Function \u2018examples\u2019 at (1) has no IMPLICIT type\ntemp.f95:7:27:\n\n    7 |     do i = 1, size(examples)\n      |                           1\nError: Symbol \u2018examples\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "929": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:45:47:\n\n   45 |         if (.not. any(trim(local_name) == trim(emails(:i-1)))) then\n      |                                               1\nError: \u2018string\u2019 argument of \u2018trim\u2019 intrinsic at (1) must be a scalar\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "933": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:4:24:\n\n    4 |     type(RecentCounter) :: recentCounter\n      |                        1\nError: Derived type \u2018recentcounter\u2019 at (1) is being used before it is defined\ntemp.f95:18:27:\n\n   18 |         n = recentCounter%ping(t)\n      |                           1\nError: Symbol \u2018recentcounter\u2019 at (1) has no IMPLICIT type\ntemp.f95:24:22:\n\n   24 |     type RecentCounter\n      |                      1\nError: Unexpected derived type declaration statement in CONTAINS section at (1)\ntemp.f95:25:28:\n\n   25 |         integer :: count = 0\n      |                            1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:26:60:\n\n   26 |         integer, dimension(:), pointer :: requests => null()\n      |                                                            1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:27:12:\n\n   27 |     contains\n      |            1\nError: Unexpected CONTAINS statement in CONTAINS section at (1)\ntemp.f95:29:7:\n\n   29 |     end type RecentCounter\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:32:29:\n\n   32 |         class(RecentCounter), intent(inout) :: this\n      |                             1\nError: Derived type \u2018recentcounter\u2019 at (1) is being used before it is defined\ntemp.f95:37:35:\n\n   37 |         if (.not. associated(this%requests)) then\n      |                                   1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:38:27:\n\n   38 |             allocate(this%requests(100))\n      |                           1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:39:28:\n\n   39 |         else if (size(this%requests) < size(this%requests) + 1) then\n      |                            1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:40:27:\n\n   40 |             allocate(this%requests(size(this%requests)*2))\n      |                           1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:41:11:\n\n   41 |         end if\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:44:14:\n\n   44 |         this%count = this%count + 1\n      |              1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:47:21:\n\n   47 |         do i = this%count, 2, -1\n      |                     1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:48:18:\n\n   48 |             this%requests(i) = this%requests(i-1)\n      |                  1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:49:11:\n\n   49 |         end do\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:52:14:\n\n   52 |         this%requests(1) = t\n      |              1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:56:24:\n\n   56 |         do i = 1, this%count\n      |                        1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:57:22:\n\n   57 |             if (this%requests(i) >= t - 3000) then\n      |                      1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:59:15:\n\n   59 |             end if\n      |               1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:60:11:\n\n   60 |         end do\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:31:30:\n\n   31 |     integer function ping(this, t) result(n)\n      |                              1\nError: Symbol \u2018this\u2019 at (1) has no IMPLICIT type\ntemp.f95:10:29:\n\n   10 |         read (unit=input_unit, fmt='(A)', iostat=status) line\n      |                             1\nError: Symbol \u2018input_unit\u2019 at (1) has no IMPLICIT type; did you mean \u2018error_unit\u2019?\ntemp.f95:19:31:\n\n   19 |         write (unit=output_unit, fmt='(I0)') n\n      |                               1\nError: Symbol \u2018output_unit\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "938": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:47:47:\n\n   47 |         read (buffer, fmt=*, iomsg=status) root\n      |                                               1\nError: Data transfer element at (1) cannot have POINTER components unless it is processed by a defined input/output procedure\ntemp.f95:47:35:\n\n   47 |         read (buffer, fmt=*, iomsg=status) root\n      |                                   1\nError: IOMSG tag at (1) must be of type CHARACTER\ntemp.f95:55:35:\n\n   55 |         read (buffer, fmt=*, iomsg=status) low\n      |                                   1\nError: IOMSG tag at (1) must be of type CHARACTER\ntemp.f95:63:35:\n\n   63 |         read (buffer, fmt=*, iomsg=status) high\n      |                                   1\nError: IOMSG tag at (1) must be of type CHARACTER\ntemp.f95:15:8:\n\n   15 |     if (root%left /= null()) then\n      |        1\nError: Invalid context for NULL() pointer at (1)\ntemp.f95:16:49:\n\n   16 |         write (unit=unit_write, fmt='(A)', iomsg=status) 'Left child exists'\n      |                                                 1\nError: IOMSG tag at (1) must be of type CHARACTER\ntemp.f95:19:8:\n\n   19 |     if (root%right /= null()) then\n      |        1\nError: Invalid context for NULL() pointer at (1)\ntemp.f95:20:49:\n\n   20 |         write (unit=unit_write, fmt='(A)', iomsg=status) 'Right child exists'\n      |                                                 1\nError: IOMSG tag at (1) must be of type CHARACTER\ntemp.f95:25:49:\n\n   25 |         write (unit=unit_write, fmt='(A)', iomsg=status) 'Root value out of range'\n      |                                                 1\nError: IOMSG tag at (1) must be of type CHARACTER\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "941": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:10:0:\n\n   10 | arr = [2, 1]\n      | \nError: Different shape for array assignment at (1) on dimension 1 (10 and 2)\ntemp.f95:15:0:\n\n   15 | arr = [3, 5, 5]\n      | \nError: Different shape for array assignment at (1) on dimension 1 (10 and 3)\ntemp.f95:20:0:\n\n   20 | arr = [0, 3, 2, 1]\n      | \nError: Different shape for array assignment at (1) on dimension 1 (10 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "942": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 9 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7f1fc97b7960 in ???\n#1  0x7f1fc97b84d9 in ???\n#2  0x7f1fc9a0c17b in ???\n#3  0x7f1fc9a05684 in ???\n#4  0x7f1fc9a062aa in ???\n#5  0x56a48ede7219 in MAIN__\n#6  0x56a48ede754d in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "944": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:16:16:\n\n   16 |         if (any(strs(i)(j+1:) < strs(i)(j:))) then\n      |                1\nError: \u2018mask\u2019 argument of \u2018any\u2019 intrinsic at (1) must be a logical array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "953": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:10:24:\n\n   10 |     allocate(words(size(order)))\n      |                        1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "961": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:14:4:\n\n   14 |     nums = [2, 1, 2, 5, 3, 2]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 6)\ntemp.f95:18:4:\n\n   18 |     nums = [5, 1, 5, 2, 5, 3, 5, 4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 8)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "965": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:40:18:\n\n   40 |         allocate (tmp)\n      |                  1\nError: Unlimited polymorphic allocate-object at (1) requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:67:51:\n\n   67 |                 call parse_node(unit_in, node%left)\n      |                                                   1\nError: \u2018left\u2019 at (1) is not a member of the \u2018__class__STAR_a\u2019 structure\ntemp.f95:68:52:\n\n   68 |                 call parse_node(unit_in, node%right)\n      |                                                    1\nError: \u2018right\u2019 at (1) is not a member of the \u2018__class__STAR_a\u2019 structure\ntemp.f95:85:17:\n\n   85 |         if (.not. is_uni_valued(root%left)) then\n      |                 1\nError: Function \u2018is_uni_valued\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:89:17:\n\n   89 |         if (.not. is_uni_valued(root%right)) then\n      |                 1\nError: Function \u2018is_uni_valued\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:59:42:\n\n   59 |         read (unit=unit_in, fmt=*, iostat=result) token\n      |                                          1\nError: IOSTAT tag at (1) must be of type INTEGER\ntemp.f95:60:12:\n\n   60 |         if (result /= 0) then\n      |            1\nError: Operands of comparison operator \u2018/=\u2019 at (1) are LOGICAL(4)/INTEGER(4)\ntemp.f95:73:45:\n\n   73 |                 read (unit=token, fmt=*) node\n      |                                             1\nError: Data transfer element at (1) cannot be polymorphic unless it is processed by a defined input/output procedure\ntemp.f95:45:28:\n\n   45 |                 root%val => tmp\n      |                            1\nError: Pointer assignment target is neither TARGET nor POINTER at (1)\ntemp.f95:48:29:\n\n   48 |                 root%left => tmp\n      |                             1\nError: Pointer assignment target is neither TARGET nor POINTER at (1)\ntemp.f95:22:17:\n\n   22 |           iostat=result, iomsg=filename)\n      |                 1\nError: IOSTAT tag at (1) must be of type INTEGER\ntemp.f95:23:8:\n\n   23 |     if (result /= 0) then\n      |        1\nError: Operands of comparison operator \u2018/=\u2019 at (1) are LOGICAL(4)/INTEGER(4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "976": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:16:57:\n\n   16 |     function largestPerimeter(nums) result(max_perimeter)\n      |                                                         1\nError: Function result \u2018max_perimeter\u2019 at (1) has no IMPLICIT type\ntemp.f95:11:4:\n\n   11 |     nums = [1, 2, 1, 10]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (3 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "977": {
        "compiled": true,
        "executed": true,
        "stdout": "Squares:\n01916100\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "989": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:59:21:\n\n   59 |             allocate(num(size(num)+1))\n      |                     1\nError: Allocate-object at (1) must be ALLOCATABLE or a POINTER\ntemp.f95:17:4:\n\n   17 |     num = [2, 7, 4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 3)\ntemp.f95:26:4:\n\n   26 |     num = [2, 1, 5]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "993": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:15:22:\n\n   15 |             real(kind=DP), intent(in) :: x, y\n      |                      1\nError: Parameter \u2018dp\u2019 at (1) has not been declared or is a variable, which does not reduce to a constant expression\ntemp.f95:55:33:\n\n   55 |     function isCousin(root, x, y) result(res)\n      |                                 1\nError: Symbol \u2018iscousin\u2019 at (1) already has an explicit interface\ntemp.f95:56:50:\n\n   56 |         type(TreeNode), target, intent(in) :: root\n      |                                                  1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:57:41:\n\n   57 |         real(kind=DP), intent(in) :: x, y\n      |                                         1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:58:22:\n\n   58 |         logical :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:59:42:\n\n   59 |         type(TreeNode), pointer :: current\n      |                                          1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:60:33:\n\n   60 |         integer :: depthX, depthY\n      |                                 1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:63:23:\n\n   63 |         current => root\n      |                       1\nError: Unexpected pointer assignment statement in CONTAINS section at (1)\ntemp.f95:64:38:\n\n   64 |         do while (associated(current))\n      |                                      1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:65:25:\n\n   65 |             if (current%val == x) exit\n      |                         1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:66:32:\n\n   66 |             current => current%left\n      |                                1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:67:11:\n\n   67 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:68:18:\n\n   68 |         depthX = 0\n      |                  1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:69:38:\n\n   69 |         do while (associated(current))\n      |                                      1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:70:31:\n\n   70 |             depthX = depthX + 1\n      |                               1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:71:32:\n\n   71 |             current => current%parent\n      |                                1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:72:11:\n\n   72 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:74:23:\n\n   74 |         current => root\n      |                       1\nError: Unexpected pointer assignment statement in CONTAINS section at (1)\ntemp.f95:75:38:\n\n   75 |         do while (associated(current))\n      |                                      1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:76:25:\n\n   76 |             if (current%val == y) exit\n      |                         1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:77:32:\n\n   77 |             current => current%left\n      |                                1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:78:11:\n\n   78 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:79:18:\n\n   79 |         depthY = 0\n      |                  1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:80:38:\n\n   80 |         do while (associated(current))\n      |                                      1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:81:31:\n\n   81 |             depthY = depthY + 1\n      |                               1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:82:32:\n\n   82 |             current => current%parent\n      |                                1\nError: Symbol \u2018current\u2019 at (1) has no IMPLICIT type\ntemp.f95:83:11:\n\n   83 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:85:57:\n\n   85 |         res = depthX /= depthY .and. depthX == depthY - 1\n      |                                                         1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:86:7:\n\n   86 |     end function isCousin\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:50:27:\n\n   50 |             call read_tree(node%left)\n      |                           1\nError: Actual argument to \u2018node\u2019 at (1) must be polymorphic\ntemp.f95:51:27:\n\n   51 |             call read_tree(node%right)\n      |                           1\nError: Actual argument to \u2018node\u2019 at (1) must be polymorphic\ntemp.f95:37:14:\n\n   37 |         res = isCousin(root, x, y)\n      |              1\nError: Type mismatch in argument \u2018x\u2019 at (1); passed REAL(8) to REAL(4)\ntemp.f95:33:23:\n\n   33 |         call read_tree(root)\n      |                       1\nError: Actual argument to \u2018node\u2019 at (1) must be polymorphic\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "997": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:4:61:\n\n    4 |     integer :: n, i, j, k, m, n_people, n_trust, trust(n, n), trusted(n), &\n      |                                                             1\nError: Explicit shaped array with nonconstant bounds at (1)\ntemp.f95:22:54:\n\n   22 |     function solve(n_people, trust) result(town_judge)\n      |                                                      1\nError: Function result \u2018town_judge\u2019 at (1) has no IMPLICIT type\ntemp.f95:8:5:\n\n    8 |     n = 2\n      |     1\nError: Symbol \u2018n\u2019 at (1) has no IMPLICIT type\ntemp.f95:9:9:\n\n    9 |     trust = reshape([1, 2, 2, 1], shape=[n, n])\n      |         1\nError: Symbol \u2018trust\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "999": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 9 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x78dfceae0960 in ???\n#1  0x78dfceae14d9 in ???\n#2  0x78dfced3517b in ???\n#3  0x78dfced2e684 in ???\n#4  0x78dfced2f2aa in ???\n#5  0x78dfced34b7a in ???\n#6  0x585291b9b51a in MAIN__\n#7  0x585291b9b6a6 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1002": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:47:17:\n\n   47 |         allocate(chars(m))\n      |                 1\nError: Allocate-object at (1) must be ALLOCATABLE or a POINTER\ntemp.f95:9:30:\n\n    9 |     words = [\"bella\", \"label\", \"roller\"]\n      |                              1\nError: Different CHARACTER lengths (5/6) in array constructor at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1005": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:43:27:\n\n   43 |         call random_number(i)\n      |                           1\nError: \u2018harvest\u2019 argument of \u2018random_number\u2019 intrinsic at (1) must be REAL\ntemp.f95:11:4:\n\n   11 |     nums = (/ 4, 2, 3 /)\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 3)\ntemp.f95:21:4:\n\n   21 |     nums = (/ 2, -3, -1, 5, -4 /)\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 5)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1009": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:17:24:\n\n   17 |     function complement(n) result(res)\n      |                        1\nError: Procedure \u2018complement\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:19:21:\n\n   19 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:20:32:\n\n   20 |         integer, intent(in) :: n\n      |                                1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:21:22:\n\n   21 |         integer :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:23:31:\n\n   23 |         res = iand(not(n), 1_8)\n      |                               1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:24:7:\n\n   24 |     end function complement\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1013": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:4:\n\n    9 |     arr = [0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 11)\ntemp.f95:17:4:\n\n   17 |     arr = [0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 11)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1018": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:31:35:\n\n   31 |     function xi(nums, i) result(xi)\n      |                                   1\nError: RESULT variable at (1) must be different than function name\ntemp.f95:32:21:\n\n   32 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:33:49:\n\n   33 |         integer, dimension(:), intent(in) :: nums\n      |                                                 1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:34:27:\n\n   34 |         integer, value :: i\n      |                           1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:35:21:\n\n   35 |         integer :: xi\n      |                     1\nError: Symbol \u2018xi\u2019 at (1) has already been host associated\ntemp.f95:37:11:\n\n   37 |         xi = 0\n      |           1\nError: Symbol \u2018xi\u2019 at (1) has already been host associated\ntemp.f95:38:24:\n\n   38 |         do while (i > 0)\n      |                        1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:39:15:\n\n   39 |             xi = xi * 2 + nums(i)\n      |               1\nError: Symbol \u2018xi\u2019 at (1) has already been host associated\ntemp.f95:40:21:\n\n   40 |             i = i - 1\n      |                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:41:11:\n\n   41 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:42:7:\n\n   42 |     end function xi\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:27:28:\n\n   27 |             answer(i) = mod(xi(nums, i), 5) == 0\n      |                            1\nError: Function \u2018xi\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1021": {
        "compiled": true,
        "executed": true,
        "stdout": " \n \n ))(\n )))(\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "1022": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:28:40:\n\n   28 |                 call solve(root%left, x)\n      |                                        1\nError: SUBROUTINE \u2018solve\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:32:41:\n\n   32 |                 call solve(root%right, x)\n      |                                         1\nError: SUBROUTINE \u2018solve\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:14:34:\n\n   14 |     call solve([1,0,1,0,1,0,1], x)\n      |                                  1\nError: Type mismatch in argument \u2018root\u2019 at (1); passed INTEGER(4) to TYPE(node)\ntemp.f95:16:22:\n\n   16 |     call solve([0], x)\n      |                      1\nError: Type mismatch in argument \u2018root\u2019 at (1); passed INTEGER(4) to TYPE(node)\ntemp.f95:26:19:\n\n   26 |         do i = 1, n\n      |                   1\n   27 |             if (associated(root%left)) then\n   28 |                 call solve(root%left, x)\n      |                                        2\nError: Index variable \u2018i\u2019 redefined at (1) in procedure \u2018solve\u2019 called from within DO loop at (2)\ntemp.f95:26:19:\n\n   26 |         do i = 1, n\n      |                   1\n......\n   32 |                 call solve(root%right, x)\n      |                                         2\nError: Index variable \u2018i\u2019 redefined at (1) in procedure \u2018solve\u2019 called from within DO loop at (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1025": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:46:12:\n\n   46 |     contains\n      |            1\nError: CONTAINS statement at (1) is already in a contained program unit\ntemp.f95:49:25:\n\n   49 |             implicit none\n      |                         1\nError: Duplicate IMPLICIT NONE statement at (1)\ntemp.f95:50:39:\n\n   50 |             integer, intent(inout) :: n\n      |                                       1\nError: Symbol \u2018n\u2019 at (1) already has basic type of INTEGER\ntemp.f95:51:36:\n\n   51 |             integer, intent(in) :: x\n      |                                    1\nError: Unexpected data declaration statement at (1)\ntemp.f95:54:11:\n\n   54 |         end subroutine make_move\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:53:12:\n\n   53 |             n = n - x\n      |            1\nError: Dummy argument \u2018n\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1030": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:58:28:\n\n   58 |         dist = abs(dist - [/( (i-1)*col+j, j=1,col ),/)])\n      |                            1\nError: Syntax error in array constructor at (1)\ntemp.f95:60:8:\n\n   60 |         dist = sum(dist, dim=2)\n      |        1\nError: Incompatible ranks 2 and 1 in assignment at (1)\ntemp.f95:62:30:\n\n   62 |         dist = sort(dist, dim=1)\n      |                              1\nError: Keyword argument requires explicit interface for procedure \u2018sort\u2019 at (1)\ntemp.f95:62:15:\n\n   62 |         dist = sort(dist, dim=1)\n      |               1\nError: Function \u2018sort\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1037": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 13 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7b1ac6c56960 in ???\n#1  0x7b1ac6c574d9 in ???\n#2  0x7b1ac6eab17b in ???\n#3  0x7b1ac6ea4684 in ???\n#4  0x7b1ac6ea52aa in ???\n#5  0x7b1ac6eaab7a in ???\n#6  0x594f7b204893 in MAIN__\n#7  0x594f7b20497c in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1046": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:11:43:\n\n   11 |         print '(A, I0)', 'Result: ', solve(stones(i))\n      |                                           1\nError: Rank mismatch in argument \u2018stones\u2019 at (1) (rank-1 and scalar)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1047": {
        "compiled": true,
        "executed": true,
        "stdout": " abbaca\n azxxzy\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1051": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:15:4:\n\n   15 |     heights = [5, 1, 2, 3, 4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (6 and 5)\ntemp.f95:21:4:\n\n   21 |     heights = [1, 2, 3, 4, 5]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (6 and 5)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1056": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:1:12:\n\n    1 | program main\n      |            1\n......\n   52 | integer, parameter :: examples(3) = (/ 6, 89, 11 /)\n      |                                                   2\nError: Two main PROGRAMs at (1) and (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1064": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:8:4:\n\n    8 |     arr = [-10, -5, 0, 3, 7]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (6 and 5)\ntemp.f95:11:4:\n\n   11 |     arr = [0, 2, 5, 8, 17]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (6 and 5)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1065": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:43:17:\n\n   43 |         allocate(indices(m,2))\n      |                 1\nError: Allocate-object at (1) must be ALLOCATABLE or a POINTER\ntemp.f95:50:29:\n\n   50 |                 if (k == len(words(i)+1)) then\n      |                             1\nError: Operands of binary numeric operator \u2018+\u2019 at (1) are CHARACTER(*)/INTEGER(4)\ntemp.f95:59:24:\n\n   59 |         indices = merge(indices, -1, indices(:,1) < indices(:,2))\n      |                        1\nError: Incompatible ranks in arguments 'tsource' and 'mask' for intrinsic 'merge' (2 and 1) at (1)\ntemp.f95:60:24:\n\n   60 |         indices = merge(indices, -1, indices(:,1) == indices(:,2))\n      |                        1\nError: Incompatible ranks in arguments 'tsource' and 'mask' for intrinsic 'merge' (2 and 1) at (1)\ntemp.f95:61:24:\n\n   61 |         indices = merge(indices, -1, indices(:,1) > indices(:,2))\n      |                        1\nError: Incompatible ranks in arguments 'tsource' and 'mask' for intrinsic 'merge' (2 and 1) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1071": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:40:12:\n\n   40 |             str2 = str2 // str2\n      |            1\nError: Dummy argument \u2018str2\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1078": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:16:57:\n\n   16 |             third = trim(adjustl(text(i+size(first)+size(second):)))\n      |                                                         1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:14:19:\n\n   14 |     do i = 1, size(text)\n      |                   1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1085": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:13:23:\n\n   13 |     do i = 1, len_trim(nums(min_index))\n      |                       1\nError: \u2018string\u2019 argument of \u2018len_trim\u2019 intrinsic at (1) must be CHARACTER\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1086": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:33:50:\n\n   33 |     function topFiveAverage(score) result(average)\n      |                                                  1\nError: Function result \u2018average\u2019 at (1) has no IMPLICIT type\ntemp.f95:20:22:\n\n   20 |         result(i,2) = topFiveAverage(scores(i))\n      |                      1\nError: Cannot convert UNKNOWN to REAL(8) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1089": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:11:4:\n\n   11 |     arr = [1, 2, 3]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (8 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1099": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:33:\n\n    6 |     integer, dimension(n) :: nums = (/ 34, 23, 1, 24, 75, 33, 54, 8 /)\n      |                                 1\nError: Different shape for array assignment at (1) on dimension 1 (9 and 8)\ntemp.f95:11:30:\n\n   11 |             if (nums(i) + nums(j) == k) then\n      |                              1\nError: Function \u2018nums\u2019 at (1) has no IMPLICIT type\ntemp.f95:12:56:\n\n   12 |                 write (*, '(A, I0, A, I0, A)') 'Found ', nums(i), ' + ', nums(j), ' = ', k\n      |                                                        1\nError: Function \u2018nums\u2019 at (1) has no IMPLICIT type\ntemp.f95:12:72:\n\n   12 |                 write (*, '(A, I0, A, I0, A)') 'Found ', nums(i), ' + ', nums(j), ' = ', k\n      |                                                                        1\nError: Function \u2018nums\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1103": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 15 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7aa884d9d960 in ???\n#1  0x7aa884d9e4d9 in ???\n#2  0x7aa884ff217b in ???\n#3  0x7aa884feb684 in ???\n#4  0x7aa884fec2aa in ???\n#5  0x5a7c5b44d272 in MAIN__\n#6  0x5a7c5b44d68a in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1108": {
        "compiled": true,
        "executed": true,
        "stdout": "1[1[1[1\n255[100[50[0\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1118": {
        "compiled": true,
        "executed": true,
        "stdout": "Year 1992 Month 7 has 31\n days.\nYear 2000 Month 2 has 29\n days.\nYear 1900 Month 2 has 29\n days.\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "1119": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "\nProgram received signal SIGSEGV: Segmentation fault - invalid memory reference.\n\nBacktrace for this error:\n#0  0x7ae45a9a6960 in ???\n#1  0x7ae45a9a5ac5 in ???\n#2  0x7ae45a79c51f in ???\n#3  0x57ddae1562ad in remove_vowels.0\n#4  0x57ddae1563de in MAIN__\n#5  0x57ddae1565d3 in main\n",
        "exit_code": -11,
        "exec_success": ""
    },
    "1122": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:4:\n\n    9 |     arr1 = [2, 3, 1, 3, 2, 4, 6, 7, 9, 2, 19]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 11)\ntemp.f95:10:4:\n\n   10 |     arr2 = [2, 1, 4, 3, 9, 6]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 6)\ntemp.f95:16:4:\n\n   16 |     arr1 = [28, 6, 22, 8, 44, 17]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 6)\ntemp.f95:17:4:\n\n   17 |     arr2 = [22, 28, 8, 6]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1128": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:13:44:\n\n   13 |         write(*,'(A,I0,A,I0)') '[', dominoes(i,1), ',', dominoes(i,2), ']'\n      |                                            1\nError: Rank mismatch in array reference at (1) (2/1)\ntemp.f95:13:64:\n\n   13 |         write(*,'(A,I0,A,I0)') '[', dominoes(i,1), ',', dominoes(i,2), ']'\n      |                                                                1\nError: Rank mismatch in array reference at (1) (2/1)\ntemp.f95:15:15:\n\n   15 |     call solve(dominoes)\n      |               1\nError: Rank mismatch in argument \u2018dominoes\u2019 at (1) (rank-2 and rank-1)\ntemp.f95:24:44:\n\n   24 |         write(*,'(A,I0,A,I0)') '[', dominoes(i,1), ',', dominoes(i,2), ']'\n      |                                            1\nError: Rank mismatch in array reference at (1) (2/1)\ntemp.f95:24:64:\n\n   24 |         write(*,'(A,I0,A,I0)') '[', dominoes(i,1), ',', dominoes(i,2), ']'\n      |                                                                1\nError: Rank mismatch in array reference at (1) (2/1)\ntemp.f95:26:15:\n\n   26 |     call solve(dominoes)\n      |               1\nError: Rank mismatch in argument \u2018dominoes\u2019 at (1) (rank-2 and rank-1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1133": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:13:4:\n\n   13 |     nums = [9, 9, 8, 8]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (9 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1134": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:17:26:\n\n   17 |     function is_armstrong(n) result(res)\n      |                          1\nError: Procedure \u2018is_armstrong\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:18:21:\n\n   18 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:19:27:\n\n   19 |         integer, value :: n\n      |                           1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:20:28:\n\n   20 |         integer :: k, i, sum\n      |                            1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:21:22:\n\n   21 |         logical :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:23:37:\n\n   23 |         k = floor(log10(real(n))) + 1\n      |                                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:24:15:\n\n   24 |         sum = 0\n      |               1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:25:19:\n\n   25 |         do i = 1, k\n      |                   1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:26:39:\n\n   26 |             sum = sum + (mod(n, 10)**i)\n      |                                       1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:27:22:\n\n   27 |             n = n / 10\n      |                      1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:28:11:\n\n   28 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:29:22:\n\n   29 |         res = sum == n\n      |                      1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:30:7:\n\n   30 |     end function is_armstrong\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:33:21:\n\n   33 |         implicit none\n      |                     1\nError: Duplicate IMPLICIT NONE statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1137": {
        "compiled": true,
        "executed": false,
        "stdout": " Enter n:\n",
        "stderr": "At line 18 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7b5d2b85e960 in ???\n#1  0x7b5d2b85f4d9 in ???\n#2  0x7b5d2bab317b in ???\n#3  0x7b5d2baac684 in ???\n#4  0x7b5d2baad2aa in ???\n#5  0x59f39b34c303 in MAIN__\n#6  0x59f39b34c4a1 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1150": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:16:4:\n\n   16 |     nums = [10, 100, 101, 101]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (9 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1154": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:17:25:\n\n   17 |     function day_of_year(date) result(day)\n      |                         1\nError: Procedure \u2018day_of_year\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:18:21:\n\n   18 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:19:44:\n\n   19 |         character(len=*), intent(in) :: date\n      |                                            1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:20:22:\n\n   20 |         integer :: day\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:23:28:\n\n   23 |         date = adjustl(date)\n      |                            1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:28:15:\n\n   28 |         day = 0\n      |               1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:29:35:\n\n   29 |         do while (date /= \"000000\")\n      |                                   1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:30:35:\n\n   30 |             select case (date(7:8))\n      |                                   1\nError: Unexpected SELECT CASE statement in CONTAINS section at (1)\ntemp.f95:31:21:\n\n   31 |                 case (\"01\",\"03\",\"05\",\"07\",\"08\",\"10\",\"12\")\n      |                     1\nError: Unexpected CASE statement at (1)\ntemp.f95:32:34:\n\n   32 |                     day = day + 31\n      |                                  1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:33:21:\n\n   33 |                 case (\"04\",\"06\",\"09\",\"11\")\n      |                     1\nError: Unexpected CASE statement at (1)\ntemp.f95:34:34:\n\n   34 |                     day = day + 30\n      |                                  1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:35:21:\n\n   35 |                 case (\"02\")\n      |                     1\nError: Unexpected CASE statement at (1)\ntemp.f95:36:49:\n\n   36 |                     if (mod(date(1:2),4)==0) then\n      |                                                 1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:37:38:\n\n   37 |                         day = day + 29\n      |                                      1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:38:24:\n\n   38 |                     else\n      |                        1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:39:38:\n\n   39 |                         day = day + 28\n      |                                      1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:40:23:\n\n   40 |                     end if\n      |                       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:41:15:\n\n   41 |             end select\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:43:11:\n\n   43 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:44:7:\n\n   44 |     end function day_of_year\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1160": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:12:13:\n\n   12 |     allocate(words(n_words))\n      |             1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:17:19:\n\n   17 |     allocate(chars(n_chars))\n      |                   1\nError: Shape specification for allocatable scalar at (1)\ntemp.f95:19:24:\n\n   19 |         read(*,*) chars(i)\n      |                        1\nError: Syntax error in READ statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1165": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:28:\n\n    6 |     character(len=*) :: word\n      |                            1\nError: Entity with assumed character length at (1) must be a dummy argument or a PARAMETER\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1175": {
        "compiled": true,
        "executed": true,
        "stdout": "25\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1176": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 8 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7b40d5f4a960 in ???\n#1  0x7b40d5f4b4d9 in ???\n#2  0x7b40d619f17b in ???\n#3  0x7b40d6198684 in ???\n#4  0x7b40d61992aa in ???\n#5  0x5a8effd97272 in MAIN__\n#6  0x5a8effd976df in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1180": {
        "compiled": true,
        "executed": true,
        "stdout": "\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1184": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:8:\n\n    9 |     do i = 1, n\n      |        1\nError: Symbol \u2018i\u2019 at (1) has no IMPLICIT type\ntemp.f95:30:19:\n\n   30 |         min_dist = huge(1_8)\n      |                   1\nError: Arithmetic overflow converting INTEGER(8) to INTEGER(4) at (1). This check can be disabled with the option \u2018-fno-range-check\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1185": {
        "compiled": true,
        "executed": true,
        "stdout": "Friday\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1189": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 11 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7bce65508960 in ???\n#1  0x7bce655094d9 in ???\n#2  0x7bce6575d17b in ???\n#3  0x7bce6575d752 in ???\n#4  0x7bce65759f1b in ???\n#5  0x7bce6575ee3c in ???\n#6  0x7bce6575fe55 in ???\n#7  0x5d398932f2a5 in MAIN__\n#8  0x5d398932f7ee in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1196": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:16:24:\n\n   16 |     function max_apples(weight) result(max_apples_)\n      |                        1\nError: Procedure \u2018max_apples\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:17:21:\n\n   17 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:18:40:\n\n   18 |         integer, intent(in) :: weight(:)\n      |                                        1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:19:44:\n\n   19 |         integer :: max_apples_, total_weight\n      |                                            1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:21:24:\n\n   21 |         total_weight = 0\n      |                        1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:22:30:\n\n   22 |         do i = 1, size(weight)\n      |                              1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:23:53:\n\n   23 |             if (total_weight + weight(i) > 5000) then\n      |                                                     1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:24:20:\n\n   24 |                 exit\n      |                    1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:25:15:\n\n   25 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:26:51:\n\n   26 |             total_weight = total_weight + weight(i)\n      |                                                   1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:27:11:\n\n   27 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:28:27:\n\n   28 |         max_apples_ = i - 1\n      |                           1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:29:7:\n\n   29 |     end function max_apples\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:7:4:\n\n    7 |     weight = [100, 200, 150, 1000]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 4)\ntemp.f95:11:4:\n\n   11 |     weight = [900, 950, 800, 1000, 700, 800]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 6)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1200": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:52:42:\n\n   52 |                     pairs(:, :) = reshape(\n      |                                          1\nError: Syntax error in argument list at (1)\nf951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1207": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:4:\n\n    9 |     arr = [1, 2, 2, 1, 1, 3]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 6)\ntemp.f95:17:4:\n\n   17 |     arr = [1, 2]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1213": {
        "compiled": true,
        "executed": true,
        "stdout": "",
        "stderr": "STOP Error: unexpected condition\n",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1217": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:31:\n\n    6 |     integer :: i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z\n      |                               1\nError: Symbol \u2018n\u2019 at (1) already has basic type of INTEGER\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1221": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 7 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7829d69fd960 in ???\n#1  0x7829d69fe4d9 in ???\n#2  0x7829d6c5217b in ???\n#3  0x7829d6c4b684 in ???\n#4  0x7829d6c4c2aa in ???\n#5  0x57169b0fc22c in MAIN__\n#6  0x57169b0fc3e9 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1228": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:4:\n\n    9 |     arr = [5, 7, 11, 13]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 4)\ntemp.f95:14:4:\n\n   14 |     arr = [15, 13, 12]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1232": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 11 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7baec62fd960 in ???\n#1  0x7baec62fe4d9 in ???\n#2  0x7baec655217b in ???\n#3  0x7baec654b684 in ???\n#4  0x7baec654c2aa in ???\n#5  0x5874dfb56289 in MAIN__\n#6  0x5874dfb566f1 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1243": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:10:4:\n\n   10 |     arr = [6, 2, 3, 4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 4)\ntemp.f95:16:4:\n\n   16 |     arr = [1, 6, 3, 4, 3, 5]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 6)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1252": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 10 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7856fa24d960 in ???\n#1  0x7856fa24e4d9 in ???\n#2  0x7856fa4a217b in ???\n#3  0x7856fa49b684 in ???\n#4  0x7856fa49c2aa in ???\n#5  0x5cedf4d222d9 in MAIN__\n#6  0x5cedf4d22ce3 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1260": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:97:15:\n\n   97 |             end\n      |               1\nError: END DO statement expected at (1)\nf951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1266": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:81:9:\n\n   81 | d = sqrt((x2 - x1)**2 + (y2 - y1)**2)\n      |         1\nError: \u2018x\u2019 argument of \u2018sqrt\u2019 intrinsic at (1) must be REAL or COMPLEX\ntemp.f95:57:21:\n\n   57 |             d = sqrt((points(i, 1) - points(j, 1))**2 + (points(i, 2) - points(j, 2))**2)\n      |                     1\nError: \u2018x\u2019 argument of \u2018sqrt\u2019 intrinsic at (1) must be REAL or COMPLEX\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1271": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:32:12:\n\n   32 |         do i = 1, len_trim(hexstring)\n      |            1\nError: Symbol \u2018i\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1275": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:19:42:\n\n   19 |             write(*, '(3A)') ((grid(j, k), k = 1, size(grid, 2)), new_line(''))\n      |                                          1\nError: Expected a right parenthesis in expression at (1)\ntemp.f95:100:19:\n\n  100 |             if (all\n      |                   1\nError: Function \u2018all\u2019 requires an argument list at (1)\nf951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1281": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:23:12:\n\n   23 |             n = n / 10\n      |            1\nError: Dummy argument \u2018n\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1287": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:31:\n\n    6 |     integer :: i, j, k, l, m, n, o\n      |                               1\nError: Symbol \u2018n\u2019 at (1) already has basic type of INTEGER\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1290": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 14 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x780ee390a960 in ???\n#1  0x780ee390b4d9 in ???\n#2  0x780ee3b5f17b in ???\n#3  0x780ee3b58684 in ???\n#4  0x780ee3b592aa in ???\n#5  0x5c82c1bfb287 in MAIN__\n#6  0x5c82c1bfb4dd in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1295": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:14:13:\n\n   14 |     allocate(nums(n+1))\n      |             1\nError: Allocate-object at (1) must be ALLOCATABLE or a POINTER\ntemp.f95:15:4:\n\n   15 |     nums(n+1) = 555\n      |    1\nError: Named constant \u2018nums\u2019 in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1299": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:18:4:\n\n   18 |     arr = [400]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (6 and 1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1304": {
        "compiled": true,
        "executed": true,
        "stdout": "",
        "stderr": "STOP Error reading input\n",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1309": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:21:36:\n\n   21 |         allocate(character(len=size(s)) :: result)\n      |                                    1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:28:41:\n\n   28 |                 result(i:i) = char(ichar('10#') + ichar(c) - ichar('j'))\n      |                                         1\nError: Argument of ICHAR at (1) must be of length one\ntemp.f95:23:23:\n\n   23 |         do i = 1, size(s)\n      |                       1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1313": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:14:4:\n\n   14 |     expected = [1, 3, 3]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1317": {
        "compiled": true,
        "executed": true,
        "stdout": "1 1\n5 6\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "1323": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:19:20:\n\n   19 |             if (n(i:i) == '6') then\n      |                    1\nError: Syntax error in argument list at (1)\ntemp.f95:23:25:\n\n   23 |             else if (n(i:i) == '9') then\n      |                         1\nError: Syntax error in argument list at (1)\ntemp.f95:27:15:\n\n   27 |             end if\n      |               1\nError: Expecting END DO statement at (1)\ntemp.f95:18:22:\n\n   18 |         do i = 1, len(n)\n      |                      1\nError: \u2018string\u2019 argument of \u2018len\u2019 intrinsic at (1) must be CHARACTER\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1331": {
        "compiled": true,
        "executed": true,
        "stdout": "40\n10\n20\n30\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1332": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:25:37:\n\n   25 |                 if (s(i:j) == s(i:j)(::-1)) then\n      |                                     1\nError: Syntax error in IF-expression at (1)\ntemp.f95:28:19:\n\n   28 |                 end if\n      |                   1\nError: Expecting END DO statement at (1)\ntemp.f95:26:20:\n\n   26 |                     s(i:j) = ''\n      |                    1\nError: Dummy argument \u2018s\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:21:22:\n\n   21 |         do while (any(s /= ''))\n      |                      1\nError: \u2018mask\u2019 argument of \u2018any\u2019 intrinsic at (1) must be a logical array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1337": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:33:27:\n\n   33 |         integer, dimension(m, n), intent(in) :: mat\n      |                           1\nError: Variable \u2018m\u2019 cannot appear in the expression at (1)\ntemp.f95:32:32:\n\n   32 |         integer, intent(in) :: m, n, k\n      |                                1\nError: Symbol at (1) is not a DUMMY variable\ntemp.f95:33:29:\n\n   33 |         integer, dimension(m, n), intent(in) :: mat\n      |                             1\nError: Variable \u2018n\u2019 cannot appear in the expression at (1)\ntemp.f95:32:35:\n\n   32 |         integer, intent(in) :: m, n, k\n      |                                   1\nError: Symbol at (1) is not a DUMMY variable\ntemp.f95:50:12:\n\n   50 |             min_num_soldiers = mat(1, :)\n      |            1\nError: Incompatible ranks 0 and 1 in assignment at (1)\ntemp.f95:52:55:\n\n   52 |                 if ((mat(j, :) < min_num_soldiers) .or. &\n      |                                                       1\nError: IF clause at (1) requires a scalar LOGICAL expression\ntemp.f95:54:20:\n\n   54 |                     min_num_soldiers = mat(j, :)\n      |                    1\nError: Incompatible ranks 0 and 1 in assignment at (1)\ntemp.f95:20:18:\n\n   20 |     mat = reshape([1, 0, 0, 0, &\n      |                  1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1342": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:27:16:\n\n   27 |                 num = num / 2\n      |                1\nError: Dummy argument \u2018num\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:29:16:\n\n   29 |                 num = num - 1\n      |                1\nError: Dummy argument \u2018num\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1346": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\n Result:  T\n \n Example 2:\n Result:  F\n \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "1351": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:14:25:\n\n   14 |     grid(:, :) = reshape([3, 2, 1, 0, 1, 0], shape(grid))\n      |                         1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1356": {
        "compiled": true,
        "executed": true,
        "stdout": "infinite loop",
        "stderr": "",
        "exit_code": 69
    },
    "1360": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\n date1 = 2019-06-29\n date2 = 2019-06-30\n days_between =            1\n \n Example 2:\n date1 = 2020-01-15\n date2 = 2019-12-31\n days_between =          -19\n \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "1365": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:16:4:\n\n   16 |     nums = [6, 5, 4, 8]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 4)\ntemp.f95:23:4:\n\n   23 |     nums = [7, 7, 7, 7]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1370": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:24:42:\n\n   24 |         allocate(character(len=len(s)) :: result)\n      |                                          1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:17:36:\n\n   17 |     function solve(s) result(result)\n      |                                    1\nError: Function result \u2018result\u2019 at (1) has no IMPLICIT type\ntemp.f95:71:12:\n\n   71 |     contains\n      |            1\nError: CONTAINS statement at (1) is already in a contained program unit\ntemp.f95:74:25:\n\n   74 |             implicit none\n      |                         1\nError: Duplicate IMPLICIT NONE statement at (1)\ntemp.f95:75:43:\n\n   75 |             character, intent(in) :: c1, c2\n      |                                           1\nError: Unexpected data declaration statement at (1)\ntemp.f95:76:25:\n\n   76 |             logical :: gt\n      |                         1\nError: Unexpected data declaration statement at (1)\ntemp.f95:79:28:\n\n   79 |         end function gt_char\n      |                            1\nError: Expected label \u2018solve\u2019 for END FUNCTION statement at (1)\ntemp.f95:82:25:\n\n   82 |             implicit none\n      |                         1\nError: Duplicate IMPLICIT NONE statement at (1)\ntemp.f95:83:43:\n\n   83 |             character, intent(in) :: c1, c2\n      |                                           1\nError: Unexpected data declaration statement at (1)\ntemp.f95:84:25:\n\n   84 |             logical :: lt\n      |                         1\nError: Unexpected data declaration statement at (1)\ntemp.f95:87:28:\n\n   87 |         end function lt_char\n      |                            1\nError: Expected label \u2018solve\u2019 for END FUNCTION statement at (1)\ntemp.f95:90:25:\n\n   90 |             implicit none\n      |                         1\nError: Duplicate IMPLICIT NONE statement at (1)\ntemp.f95:91:53:\n\n   91 |             character(len=*), intent(inout) :: string\n      |                                                     1\nError: Unexpected data declaration statement at (1)\ntemp.f95:92:41:\n\n   92 |             character, intent(in) :: char\n      |                                         1\nError: Unexpected data declaration statement at (1)\ntemp.f95:93:24:\n\n   93 |             integer :: i\n      |                        1\nError: Symbol \u2018i\u2019 at (1) already has basic type of INTEGER\ntemp.f95:99:11:\n\n   99 |         end subroutine remove\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:24:31:\n\n   24 |         allocate(character(len=len(s)) :: result)\n      |                               1\nError: \u2018remove\u2019 at (1) is not a function\ntemp.f95:78:25:\n\n   78 |             gt = ichar(c1) > ichar(c2)\n      |                         1\nError: Symbol \u2018c1\u2019 at (1) has no IMPLICIT type; did you mean \u2018c\u2019?\ntemp.f95:78:37:\n\n   78 |             gt = ichar(c1) > ichar(c2)\n      |                                     1\nError: Symbol \u2018c2\u2019 at (1) has no IMPLICIT type; did you mean \u2018c\u2019?\ntemp.f95:95:40:\n\n   95 |             do while (index(string, char) /= 0)\n      |                                        1\nError: Symbol \u2018char\u2019 at (1) has no IMPLICIT type\ntemp.f95:78:14:\n\n   78 |             gt = ichar(c1) > ichar(c2)\n      |              1\nError: Symbol \u2018gt\u2019 at (1) has no IMPLICIT type\ntemp.f95:35:41:\n\n   35 |                 c = minval(s, key=gt_char)\n      |                                         1\nError: Symbol \u2018gt_char\u2019 at (1) has no IMPLICIT type\ntemp.f95:86:14:\n\n   86 |             lt = ichar(c1) < ichar(c2)\n      |              1\nError: Symbol \u2018lt\u2019 at (1) has no IMPLICIT type\ntemp.f95:56:41:\n\n   56 |                 c = maxval(s, key=lt_char)\n      |                                         1\nError: Symbol \u2018lt_char\u2019 at (1) has no IMPLICIT type\ntemp.f95:95:34:\n\n   95 |             do while (index(string, char) /= 0)\n      |                                  1\nError: Symbol \u2018string\u2019 at (1) has no IMPLICIT type\ntemp.f95:29:23:\n\n   29 |             c = minval(s)\n      |                       1\nError: \u2018array\u2019 argument of \u2018minval\u2019 intrinsic at (1) must be an array\ntemp.f95:43:27:\n\n   43 |                 c = minval(s)\n      |                           1\nError: \u2018array\u2019 argument of \u2018minval\u2019 intrinsic at (1) must be an array\ntemp.f95:50:23:\n\n   50 |             c = maxval(s)\n      |                       1\nError: \u2018array\u2019 argument of \u2018maxval\u2019 intrinsic at (1) must be an array\ntemp.f95:64:27:\n\n   64 |                 c = maxval(s)\n      |                           1\nError: \u2018array\u2019 argument of \u2018maxval\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1374": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:1:12:\n\n    1 | program main\n      |            1\n......\n   35 | /)\n      |  2          \nError: Two main PROGRAMs at (1) and (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1379": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:84:15:\n\n   84 |     current => cloned\n      |               1\nError: Pointer assignment target is neither TARGET nor POINTER at (1)\ntemp.f95:21:18:\n\n   21 |     open (newunit=unit_in, file=filename, status='old', action='read', &\n      |                  1\nError: Named constant \u2018unit_in\u2019 in variable definition context (NEWUNIT tag) at (1)\ntemp.f95:27:18:\n\n   27 |     open (newunit=unit_out, file='stdout', status='replace', action='write', &\n      |                  1\nError: Named constant \u2018unit_out\u2019 in variable definition context (NEWUNIT tag) at (1)\ntemp.f95:36:41:\n\n   36 |     read (unit=unit_in, iostat=stat) root\n      |                                         1\nError: Data transfer element at (1) cannot have POINTER components unless it is processed by a defined input/output procedure\ntemp.f95:47:43:\n\n   47 |     read (unit=unit_in, iostat=stat) target\n      |                                           1\nError: Data transfer element at (1) cannot have POINTER components unless it is processed by a defined input/output procedure\ntemp.f95:60:32:\n\n   60 |     write (unit=unit_out) target\n      |                                1\nError: Data transfer element at (1) cannot have POINTER components unless it is processed by a defined input/output procedure\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1380": {
        "compiled": true,
        "executed": true,
        "stdout": "Lucky numbers: 0\u0000\u0000\u0000\u00000\u0000\u0000\u0000\u00000\u0000\u0000\u0000\u00000\u0000\u0000\u0000\u00000\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1385": {
        "compiled": true,
        "executed": true,
        "stdout": "2\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "1394": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:4:\n\n    9 |     arr = [2, 2, 3, 4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 4)\ntemp.f95:13:4:\n\n   13 |     arr = [1, 2, 2, 3, 3, 3]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 6)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1399": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:22:25:\n\n   22 |         read (buffer, '(I0)', iostat=iostat) n\n      |                         1\nError: Positive width required in format string at (1)\ntemp.f95:41:26:\n\n   37 |         do i = 1, n\n      |                   2       \n......\n   41 |                 i = i / 10\n      |                          1\nError: Variable \u2018i\u2019 at (1) cannot be redefined inside loop beginning at (2)\ntemp.f95:59:12:\n\n   59 |     contains\n      |            1\nError: CONTAINS statement at (1) is already in a contained program unit\ntemp.f95:62:25:\n\n   62 |             implicit none\n      |                         1\nError: Duplicate IMPLICIT NONE statement at (1)\ntemp.f95:63:31:\n\n   63 |             integer, value :: x\n      |                               1\nError: Unexpected data declaration statement at (1)\ntemp.f95:64:25:\n\n   64 |             integer :: nd\n      |                         1\nError: Unexpected data declaration statement at (1)\ntemp.f95:71:29:\n\n   71 |         end function n_digits\n      |                             1\nError: Expected label \u2018solve\u2019 for END FUNCTION statement at (1)\ntemp.f95:66:14:\n\n   66 |             nd = 0\n      |              1\nError: Symbol \u2018nd\u2019 at (1) has no IMPLICIT type; did you mean \u2018n\u2019?\ntemp.f95:67:23:\n\n   67 |             do while (x > 0)\n      |                       1\nError: Symbol \u2018x\u2019 at (1) has no IMPLICIT type\ntemp.f95:21:43:\n\n   21 |         call get_command_argument(1, buffer)\n      |                                           1\nError: Symbol \u2018buffer\u2019 at (1) has no IMPLICIT type\ntemp.f95:23:18:\n\n   23 |         if (iostat /= 0) then\n      |                  1\nError: Symbol \u2018iostat\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1403": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "f951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1408": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 68 of file temp.f95\nFortran runtime error: Attempting to allocate already allocated variable 'substrs'\n\nError termination. Backtrace:\n#0  0x7a2aa20c2960 in ???\n#1  0x7a2aa20c34d9 in ???\n#2  0x56a041fb0803 in get_substrs.0\n#3  0x56a041fb0c2a in MAIN__\n#4  0x56a041fb12fc in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1413": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 11 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7f596d55d960 in ???\n#1  0x7f596d55e4d9 in ???\n#2  0x7f596d7b217b in ???\n#3  0x7f596d7ab684 in ???\n#4  0x7f596d7ac2aa in ???\n#5  0x5b783c373272 in MAIN__\n#6  0x5b783c3735a1 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1417": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:30:36:\n\n   30 |         allocate(character(len=size(s)) :: result)\n      |                                    1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:36:35:\n\n   36 |                     do j = 1, size(s)\n      |                                   1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:39:33:\n\n   39 |                     if (j > size(s)) then\n      |                                 1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:31:23:\n\n   31 |         do i = 1, size(s)\n      |                       1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1422": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:16:45:\n\n   16 |             n = count(s(i:j) == '0') + count(s(i:j) == '1')\n      |                                             1\nError: \u2018mask\u2019 argument of \u2018count\u2019 intrinsic at (1) must be a logical array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1426": {
        "compiled": true,
        "executed": true,
        "stdout": "0\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "1427": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:59:38:\n\n   59 |         allocate(tmp, source=s(1:size(s)-1))\n      |                                      1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1431": {
        "compiled": true,
        "executed": true,
        "stdout": "T\nT\nT\nF\nT\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "1436": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:28:\n\n    9 |     paths(1,:) = ['London ', 'New York']\n      |                            1\nError: Different CHARACTER lengths (7/8) in array constructor at (1)\ntemp.f95:10:30:\n\n   10 |     paths(2,:) = ['New York ', 'Lima']\n      |                              1\nError: Different CHARACTER lengths (9/4) in array constructor at (1)\ntemp.f95:11:26:\n\n   11 |     paths(3,:) = ['Lima ', 'Sao Paulo']\n      |                          1\nError: Different CHARACTER lengths (5/9) in array constructor at (1)\ntemp.f95:16:4:\n\n   16 |     paths(:,1) = ['B', 'C', 'D']\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 3)\ntemp.f95:17:4:\n\n   17 |     paths(:,2) = ['C', 'A', 'B']\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 3)\ntemp.f95:22:4:\n\n   22 |     paths(:,:) = ['A', 'Z']\n      |    1\nError: Incompatible ranks 2 and 1 in assignment at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1437": {
        "compiled": true,
        "executed": true,
        "stdout": "T\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "1446": {
        "compiled": true,
        "executed": true,
        "stdout": "           1\n           1\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1450": {
        "compiled": true,
        "executed": true,
        "stdout": "3\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1455": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:45:34:\n\n   45 |             if (sentence(i:i+size(searchWord)-1) == searchWord) then\n      |                                  1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:44:23:\n\n   44 |         do i = 1, size(sentence)\n      |                       1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1460": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:48:20:\n\n   48 |                     arr = tmp\n      |                    1\nError: Dummy argument \u2018arr\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:52:20:\n\n   52 |                     arr = tmp\n      |                    1\nError: Dummy argument \u2018arr\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1464": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:4:\n\n    9 |     nums = [3, 4, 5, 2]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (500 and 4)\ntemp.f95:15:4:\n\n   15 |     nums = [1, 5, 4, 5]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (500 and 4)\ntemp.f95:21:4:\n\n   21 |     nums = [3, 7]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (500 and 2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1469": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:15:33:\n\n   15 |         if (associated(root%left(i)%left)) then\n      |                                 1\nError: Syntax error in argument list at (1)\ntemp.f95:17:26:\n\n   17 |                 root%left(i)%val, root%left(i)%left%val\n      |                          1\nError: Syntax error in WRITE statement at (1)\ntemp.f95:18:12:\n\n   18 |         else\n      |            1\nError: Unexpected ELSE statement at (1)\ntemp.f95:20:26:\n\n   20 |                 root%left(i)%val, \"None\"\n      |                          1\nError: Syntax error in WRITE statement at (1)\ntemp.f95:21:11:\n\n   21 |         end if\n      |           1\nError: Expecting END DO statement at (1)\ntemp.f95:32:28:\n\n   32 |         allocate (root%left(2))\n      |                            1\nError: Shape specification for allocatable scalar at (1)\ntemp.f95:34:28:\n\n   34 |         allocate (root%left(2)%left)\n      |                            1\nError: Shape specification for allocatable scalar at (1)\ntemp.f95:14:19:\n\n   14 |     do i = 1, size(root%left)\n      |                   1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1470": {
        "compiled": true,
        "executed": false,
        "stdout": "Result:\n\u0002\u0000\u0000\u0000\n\u0001\u0000\u0000\u0000\n\u0004\u0000\u0000\u0000\n",
        "stderr": "\nProgram received signal SIGSEGV: Segmentation fault - invalid memory reference.\n\nBacktrace for this error:\n#0  0x7a81daf2f960 in ???\n#1  0x7a81daf2eac5 in ???\n#2  0x7a81dad2551f in ???\n",
        "exit_code": -11,
        "exec_success": ""
    },
    "1474": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:10:28:\n\n   10 |     integer :: i, j, k, m, n\n      |                            1\nError: Symbol \u2018n\u2019 at (1) already has basic type of INTEGER\ntemp.f95:75:4:\n\n   67 |         call traverse_and_remove(head, 1, 3)\n      |                                            2\n......\n   75 |     function traverse_and_remove(head, m, n) result(new_head)\n      |    1\nError: \u2018traverse_and_remove\u2019 at (1) has a type, which is not consistent with the CALL at (2)\ntemp.f95:75:4:\n\n   39 |         call traverse_and_remove(head, 2, 3)\n      |                                            2\n......\n   75 |     function traverse_and_remove(head, m, n) result(new_head)\n      |    1\nError: \u2018traverse_and_remove\u2019 at (1) has a type, which is not consistent with the CALL at (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1475": {
        "compiled": true,
        "executed": true,
        "stdout": "Answer:\n8 0 6 0 3\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1480": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 11 of file temp.f95 (unit = 6, file = 'stdout')\nFortran runtime error: Expected INTEGER for item 7 in formatted transfer, got CHARACTER\n(A,*(I0,1X))\n     ^\n\nError termination. Backtrace:\n#0  0x7b58b9124960 in ???\n#1  0x7b58b91254d9 in ???\n#2  0x7b58b936aec3 in ???\n#3  0x7b58b93780e2 in ???\n#4  0x7b58b937b6d1 in ???\n#5  0x7b58b937be05 in ???\n#6  0x58a8ab960603 in MAIN__\n#7  0x58a8ab9606df in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1486": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:33:\n\n    5 |     integer, dimension(n) :: nums\n      |                                 1\nError: Explicit shaped array with nonconstant bounds at (1)\ntemp.f95:8:8:\n\n    8 |         nums(i) = start + 2 * (i - 1)\n      |        1\nError: Function \u2018nums\u2019 at (1) has no IMPLICIT type\ntemp.f95:8:12:\n\n    8 |         nums(i) = start + 2 * (i - 1)\n      |            1\nError: Symbol \u2018nums\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1491": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 22 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7f00aaa52960 in ???\n#1  0x7f00aaa534d9 in ???\n#2  0x7f00aaca717b in ???\n#3  0x7f00aaca0684 in ???\n#4  0x7f00aaca12aa in ???\n#5  0x574c94a875c0 in get_array.1\n#6  0x574c94a874b3 in MAIN__\n#7  0x574c94a8786d in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1496": {
        "compiled": true,
        "executed": true,
        "stdout": " F\n F\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "1502": {
        "compiled": true,
        "executed": true,
        "stdout": "T\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "1507": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:35:16:\n\n   35 |             if (month_names(i) == month_name) then\n      |                1\nError: Function \u2018month_names\u2019 at (1) has no IMPLICIT type\ntemp.f95:34:34:\n\n   34 |         do i = 1, size(month_names)\n      |                                  1\nError: Symbol \u2018month_names\u2019 at (1) has no IMPLICIT type; did you mean \u2018month_name\u2019?\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1512": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:23:24:\n\n   23 |     function good_pairs(nums) result(count)\n      |                        1\nError: Procedure \u2018good_pairs\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:24:21:\n\n   24 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:25:49:\n\n   25 |         integer, dimension(:), intent(in) :: nums\n      |                                                 1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:26:24:\n\n   26 |         integer :: count\n      |                        1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:27:23:\n\n   27 |         integer :: i, j\n      |                       1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:29:17:\n\n   29 |         count = 0\n      |                 1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:30:32:\n\n   30 |         do i = 1, size(nums) - 1\n      |                                1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:31:36:\n\n   31 |             do j = i + 1, size(nums)\n      |                                    1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:32:44:\n\n   32 |                 if (nums(i) == nums(j)) then\n      |                                            1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:33:37:\n\n   33 |                     count = count + 1\n      |                                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:34:19:\n\n   34 |                 end if\n      |                   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:35:15:\n\n   35 |             end do\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:36:11:\n\n   36 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:37:7:\n\n   37 |     end function good_pairs\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:14:4:\n\n   14 |     nums = [1, 1, 1, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (6 and 4)\ntemp.f95:18:4:\n\n   18 |     nums = [1, 2, 3]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (6 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1518": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:16:29:\n\n   16 |     function maxWaterBottles(n, m) result(res)\n      |                             1\nError: Procedure \u2018maxwaterbottles\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:17:21:\n\n   17 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:18:30:\n\n   18 |         integer, value :: n, m\n      |                              1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:19:22:\n\n   19 |         integer :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:21:23:\n\n   21 |         res = n + m - 1\n      |                       1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:22:7:\n\n   22 |     end function maxWaterBottles\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1523": {
        "compiled": true,
        "executed": true,
        "stdout": "3\n1\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "1528": {
        "compiled": true,
        "executed": true,
        "stdout": "eetcode^\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": ""
    },
    "1534": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:15:72:\n\n   15 |     function count_good_triplets(arr, a, b, c) result(num_good_triplets)\n      |                                                                        1\nError: Function result \u2018num_good_triplets\u2019 at (1) has no IMPLICIT type\ntemp.f95:28:31:\n\n   28 |                     condition_4 = abs(arr(i) - arr(k)) <= c\n      |                               1\nError: Symbol \u2018condition_4\u2019 at (1) has no IMPLICIT type; did you mean \u2018condition_3\u2019?\ntemp.f95:10:24:\n\n   10 |     num_good_triplets = count_good_triplets(arr, a, b, c)\n      |                        1\nError: Cannot convert UNKNOWN to INTEGER(4) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1539": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:10:4:\n\n   10 |     arr = [2, 3, 4, 7, 11]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 5)\ntemp.f95:16:4:\n\n   16 |     arr = [1, 2, 3, 4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1544": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:32:40:\n\n   32 |     function is_good(s) result(is_good_)\n      |                                        1\nError: Function result \u2018is_good_\u2019 at (1) has no IMPLICIT type\ntemp.f95:64:33:\n\n   64 |                        (s(1:1) == ucase(s(2:2)))\n      |                                 1\nError: Function \u2018ucase\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1550": {
        "compiled": true,
        "executed": true,
        "stdout": "Result: F\nResult: F\nResult: F\nResult: F\nResult: F\nResult: F\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "1556": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:21:44:\n\n   21 |             allocate(character(len=len(trim(add_dot(n / 1000))) + 4) :: res)\n      |                                            1\nError: Function \u2018add_dot\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:18:44:\n\n   18 |             allocate(character(len=len(trim(str(n)))+1) :: res)\n      |                                            1\nError: Function \u2018str\u2019 at (1) has no IMPLICIT type\ntemp.f95:19:18:\n\n   19 |             res = str(n) // \" \"\n      |                  1\nError: Function \u2018str\u2019 at (1) has no IMPLICIT type\ntemp.f95:22:46:\n\n   22 |             res = add_dot(n / 1000) // \". \" // str(mod(n, 1000))\n      |                                              1\nError: Function \u2018str\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1560": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:37:\n\n    5 |     integer, dimension(m+1) :: rounds = (/ 1, 3, 1, 2 /)\n      |                                     1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 4)\ntemp.f95:21:35:\n\n   21 |         integer, value :: n, rounds(m+1)\n      |                                   1\nError: VALUE attribute conflicts with DIMENSION attribute at (1)\ntemp.f95:19:22:\n\n   19 |     subroutine solve(n, rounds, visited_sectors)\n      |                      1\nError: Symbol \u2018n\u2019 at (1) has no IMPLICIT type\ntemp.f95:19:30:\n\n   19 |     subroutine solve(n, rounds, visited_sectors)\n      |                              1\nError: Symbol \u2018rounds\u2019 at (1) has no IMPLICIT type\ntemp.f95:11:24:\n\n   11 |     call solve(n, rounds, visited_sectors)\n      |                        1\nError: Symbol \u2018rounds\u2019 at (1) has no IMPLICIT type\ntemp.f95:25:25:\n\n   25 |         current_sector = rounds(1)\n      |                         1\nError: Function \u2018rounds\u2019 at (1) has no IMPLICIT type\ntemp.f95:29:26:\n\n   29 |             next_sector = rounds(i)\n      |                          1\nError: Function \u2018rounds\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1566": {
        "compiled": true,
        "executed": true,
        "stdout": " False\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "1572": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:23:26:\n\n   23 |     function sum_diagonal(mat) result(sum_)\n      |                          1\nError: Procedure \u2018sum_diagonal\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:24:21:\n\n   24 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:25:40:\n\n   25 |         integer, intent(in) :: mat(:, :)\n      |                                        1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:26:23:\n\n   26 |         integer :: sum_\n      |                       1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:27:23:\n\n   27 |         integer :: i, j\n      |                       1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:29:16:\n\n   29 |         sum_ = 0\n      |                1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:30:30:\n\n   30 |         do i = 1, size(mat, 1)\n      |                              1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:31:39:\n\n   31 |             if (i /= size(mat, 2)) then\n      |                                       1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:32:41:\n\n   32 |                 sum_ = sum_ + mat(i, i+1)\n      |                                         1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:33:15:\n\n   33 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:34:35:\n\n   34 |             sum_ = sum_ + mat(i, i)\n      |                                   1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:35:28:\n\n   35 |             if (i /= 1) then\n      |                            1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:36:41:\n\n   36 |                 sum_ = sum_ + mat(i-1, i)\n      |                                         1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:37:15:\n\n   37 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:38:11:\n\n   38 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:39:7:\n\n   39 |     end function sum_diagonal\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:18:24:\n\n   18 |     mat(:, :) = reshape([5], shape(mat))\n      |                        1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1576": {
        "compiled": true,
        "executed": true,
        "stdout": " ?zs                                                                                                 \n ubv?w                                                                                               \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1582": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:30:54:\n\n   30 |                     if (all(mat(i, :) == 0) .and. all(mat(:, j) == 0)) then\n      |                                                      1\nError: Operands of comparison operator \u2018==\u2019 at (1) are LOGICAL(4)/INTEGER(4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1588": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 11 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7b888c972960 in ???\n#1  0x7b888c9734d9 in ???\n#2  0x7b888cbc717b in ???\n#3  0x7b888cbc0684 in ???\n#4  0x7b888cbc12aa in ???\n#5  0x590fed8be301 in MAIN__\n#6  0x590fed8be4e8 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1592": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:19:\n\n    9 |     nwords = count(text == ' ') + 1\n      |                   1\nError: \u2018mask\u2019 argument of \u2018count\u2019 intrinsic at (1) must be a logical array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1598": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 22 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7aa5c98dd960 in ???\n#1  0x7aa5c98de4d9 in ???\n#2  0x7aa5c9b3217b in ???\n#3  0x7aa5c9b2b684 in ???\n#4  0x7aa5c9b2c2aa in ???\n#5  0x56dd5d2432e9 in get_args.0\n#6  0x56dd5d243469 in MAIN__\n#7  0x56dd5d2435ae in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1603": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:2:9:\n\n    2 |     use ParkingSystem_mod\n      |         1\nFatal Error: Cannot open module file \u2018parkingsystem_mod.mod\u2019 for reading at (1): No such file or directory\ncompilation terminated.\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1608": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:19:20:\n\n   19 |             count = count_if(nums > i)\n      |                    1\nError: Function \u2018count_if\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1614": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:22:19:\n\n   22 |     function depth(s) result(d)\n      |                   1\nError: Procedure \u2018depth\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:24:21:\n\n   24 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:25:41:\n\n   25 |         character(len=*), intent(in) :: s\n      |                                         1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:26:20:\n\n   26 |         integer :: d\n      |                    1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:28:13:\n\n   28 |         d = 0\n      |             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:29:24:\n\n   29 |         do i = 1, len(s)\n      |                        1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:30:31:\n\n   30 |             select case(s(i:i))\n      |                               1\nError: Unexpected SELECT CASE statement in CONTAINS section at (1)\ntemp.f95:31:21:\n\n   31 |                 case(' ')\n      |                     1\nError: Unexpected CASE statement at (1)\ntemp.f95:32:25:\n\n   32 |                     cycle\n      |                         1\nError: CYCLE statement at (1) is not within a construct\ntemp.f95:33:21:\n\n   33 |                 case('(')\n      |                     1\nError: Unexpected CASE statement at (1)\ntemp.f95:34:29:\n\n   34 |                     d = d + 1\n      |                             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:35:21:\n\n   35 |                 case(')')\n      |                     1\nError: Unexpected CASE statement at (1)\ntemp.f95:36:29:\n\n   36 |                     d = d - 1\n      |                             1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:37:15:\n\n   37 |             end select\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:38:11:\n\n   38 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:39:7:\n\n   39 |     end function depth\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1619": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:47:17:\n\n   47 |                 swap(arr(l), arr(m))\n      |                 1\nError: Unclassifiable statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1624": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\n Input: aa\n Output:        32765\n \n Example 2:\n Input: abca\n Output:        32765\n \n Example 3:\n Input: cbzxy\n Output:        32765\n \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1629": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 11 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7905a6d26960 in ???\n#1  0x7905a6d274d9 in ???\n#2  0x7905a6f7b17b in ???\n#3  0x7905a6f74684 in ???\n#4  0x7905a6f752aa in ???\n#5  0x59e31bce32a2 in MAIN__\n#6  0x59e31bce3697 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1636": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 11 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7f8f214c3960 in ???\n#1  0x7f8f214c44d9 in ???\n#2  0x7f8f2171817b in ???\n#3  0x7f8f21711684 in ???\n#4  0x7f8f217122aa in ???\n#5  0x7f8f21717b7a in ???\n#6  0x58212b040282 in MAIN__\n#7  0x58212b0405b7 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1640": {
        "compiled": true,
        "executed": true,
        "stdout": "F\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "1646": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:4:28:\n\n    4 |     integer :: n, nums(n+1), max_val\n      |                            1\nError: Explicit shaped array with nonconstant bounds at (1)\ntemp.f95:12:11:\n\n   12 |     max_val = get_max(nums)\n      |           1\nError: Symbol \u2018max_val\u2019 at (1) has no IMPLICIT type\ntemp.f95:7:5:\n\n    7 |     n = 7\n      |     1\nError: Symbol \u2018n\u2019 at (1) has no IMPLICIT type\ntemp.f95:8:31:\n\n    8 |     call generate_array(n, nums)\n      |                               1\nError: Symbol \u2018nums\u2019 at (1) has no IMPLICIT type\ntemp.f95:42:12:\n\n   42 |         do i = 2, n\n      |            1\nError: Symbol \u2018i\u2019 at (1) has no IMPLICIT type\ntemp.f95:40:13:\n\n   40 |         nums(0) = 0\n      |             1\nWarning: Array reference at (1) is out of bounds (0 < 1) in dimension 1\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1652": {
        "compiled": true,
        "executed": true,
        "stdout": "Decrypted code: 12\b\u0000\u0000\u00007\u0003\u0000\u0000\u0000\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1656": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:2:11:\n\n    2 |     use :: ordered_stream_mod\n      |           1\nFatal Error: Cannot open module file \u2018ordered_stream_mod.mod\u2019 for reading at (1): No such file or directory\ncompilation terminated.\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1662": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:13:\n\n    9 |     allocate(word1(2))\n      |             1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:10:13:\n\n   10 |     allocate(word2(2))\n      |             1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:21:13:\n\n   21 |     allocate(word1(2))\n      |             1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:22:13:\n\n   22 |     allocate(word2(2))\n      |             1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:33:13:\n\n   33 |     allocate(word1(3))\n      |             1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:34:13:\n\n   34 |     allocate(word2(1))\n      |             1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:52:17:\n\n   52 |         allocate(concatWord(sum(len(word1))))\n      |                 1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:55:30:\n\n   55 |             concatWord = trim(concatWord) // trim(word1(i))\n      |                              1\nError: \u2018string\u2019 argument of \u2018trim\u2019 intrinsic at (1) must be a scalar\ntemp.f95:58:30:\n\n   58 |             concatWord = trim(concatWord) // trim(word2(i))\n      |                              1\nError: \u2018string\u2019 argument of \u2018trim\u2019 intrinsic at (1) must be a scalar\ntemp.f95:60:8:\n\n   60 |         same = (concatWord == word2(1))\n      |        1\nError: Incompatible ranks 0 and 1 in assignment at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1668": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:4:32:\n\n    4 |     character(len=*) :: sequence, word\n      |                                1\nError: Entity with assumed character length at (1) must be a dummy argument or a PARAMETER\ntemp.f95:4:38:\n\n    4 |     character(len=*) :: sequence, word\n      |                                      1\nError: Entity with assumed character length at (1) must be a dummy argument or a PARAMETER\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1672": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:13:23:\n\n   13 |     accounts = reshape([1, 5, 7, 3], shape=[m, n])\n      |                       1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1678": {
        "compiled": true,
        "executed": true,
        "stdout": " G\n G\n G\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1684": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:60:\n\n    5 |     character(len=*), parameter :: words(5) = [\"ad \", \"bd \", \"aaab \", \"baa \", \"badab \"]\n      |                                                            1\nError: Different CHARACTER lengths (3/5) in array constructor at (1)\ntemp.f95:8:50:\n\n    8 |     n_consistent = count_consistent(allowed, words)\n      |                                                  1\nError: Symbol \u2018words\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1688": {
        "compiled": true,
        "executed": false,
        "stdout": "Enter the number of teams:\n",
        "stderr": "At line 8 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7afe21d8e960 in ???\n#1  0x7afe21d8f4d9 in ???\n#2  0x7afe21fe317b in ???\n#3  0x7afe21fdc684 in ???\n#4  0x7afe21fdd2aa in ???\n#5  0x5be604c3c2ec in MAIN__\n#6  0x5be604c3c3e9 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1694": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "f951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1700": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 9 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7c5afd764960 in ???\n#1  0x7c5afd7654d9 in ???\n#2  0x7c5afd9b917b in ???\n#3  0x7c5afd9b2684 in ???\n#4  0x7c5afd9b32aa in ???\n#5  0x5c940e4992bc in MAIN__\n#6  0x5c940e499913 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1704": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:39:32:\n\n   39 |     alike = (nvowels == nvowels(s(len(s)/2+1:)))\n      |                                1\nError: Expected a right parenthesis in expression at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1708": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:7:4:\n\n    7 |     A = [1, 3, 2, 4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 4)\ntemp.f95:8:4:\n\n    8 |     B = [1, 2, 2, 4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 4)\ntemp.f95:12:4:\n\n   12 |     B = [2, 1, 1, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1710": {
        "compiled": true,
        "executed": true,
        "stdout": "Example 1: 11 units can be put on the truck.\nExample 2: 25 units can be put on the truck.\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1716": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 9 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7d81f1b42960 in ???\n#1  0x7d81f1b434d9 in ???\n#2  0x7d81f1d9717b in ???\n#3  0x7d81f1d90684 in ???\n#4  0x7d81f1d912aa in ???\n#5  0x5a643a56c209 in MAIN__\n#6  0x5a643a56c401 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1720": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:34:13:\n\n   34 |             arr(i) = arr(i - 1) ^ encoded(i - 2)\n      |             1\nError: Unclassifiable statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1725": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:4:\n\n    9 |     rectangles(1) = [5, 8]\n      |    1\nError: Incompatible ranks 0 and 1 in assignment at (1)\ntemp.f95:10:4:\n\n   10 |     rectangles(2) = [3, 9]\n      |    1\nError: Incompatible ranks 0 and 1 in assignment at (1)\ntemp.f95:11:4:\n\n   11 |     rectangles(3) = [5, 12]\n      |    1\nError: Incompatible ranks 0 and 1 in assignment at (1)\ntemp.f95:12:4:\n\n   12 |     rectangles(4) = [16, 5]\n      |    1\nError: Incompatible ranks 0 and 1 in assignment at (1)\ntemp.f95:16:15:\n\n   16 |     call solve(rectangles, maxLen, count)\n      |               1\nError: Rank mismatch in argument \u2018rectangles\u2019 at (1) (rank-2 and rank-1)\ntemp.f95:20:4:\n\n   20 |     rectangles(1) = [2, 3]\n      |    1\nError: Incompatible ranks 0 and 1 in assignment at (1)\ntemp.f95:21:4:\n\n   21 |     rectangles(2) = [3, 7]\n      |    1\nError: Incompatible ranks 0 and 1 in assignment at (1)\ntemp.f95:22:4:\n\n   22 |     rectangles(3) = [4, 3]\n      |    1\nError: Incompatible ranks 0 and 1 in assignment at (1)\ntemp.f95:23:4:\n\n   23 |     rectangles(4) = [3, 7]\n      |    1\nError: Incompatible ranks 0 and 1 in assignment at (1)\ntemp.f95:27:15:\n\n   27 |     call solve(rectangles, maxLen, count)\n      |               1\nError: Rank mismatch in argument \u2018rectangles\u2019 at (1) (rank-2 and rank-1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1732": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:11:4:\n\n   11 |     gain = [-4, -3, -2, -1, 4, 3, 2]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 7)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1736": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:44:39:\n\n   44 |         read (time, \"(I2, A, I2)\") hh, \":\", mm\n      |                                       1\nError: Expecting variable in READ statement at (1)\ntemp.f95:33:24:\n\n   33 |                         time(i:i) = char(ichar('0') + j)\n      |                        1\nError: Dummy argument \u2018time\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1742": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:15:22:\n\n   15 |     do i = 1, infinity\n      |                      1\nError: Symbol \u2018infinity\u2019 at (1) has no IMPLICIT type\ntemp.f95:49:12:\n\n   49 |             n = n / 10\n      |            1\nError: Dummy argument \u2018n\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1748": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:25:16:\n\n   25 |             do j = 1, size(nums)\n      |                1\nError: Symbol \u2018j\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1752": {
        "compiled": true,
        "executed": true,
        "stdout": "Example 1: False\nExample 2: False\nExample 3: False\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "1758": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:28:22:\n\n   28 |     subroutine solve(s)\n      |                      1\nError: PROCEDURE attribute conflicts with INTENT attribute in \u2018s\u2019 at (1)\ntemp.f95:36:16:\n\n   36 |         n = len(s)\n      |                1\nError: \u2018string\u2019 argument of \u2018len\u2019 intrinsic at (1) must be CHARACTER\ntemp.f95:59:12:\n\n   59 |             s(i) = '1'\n      |            1\nError: The function result on the lhs of the assignment at (1) must have the pointer attribute.\ntemp.f95:61:12:\n\n   61 |             s(i) = '0'\n      |            1\nError: The function result on the lhs of the assignment at (1) must have the pointer attribute.\ntemp.f95:68:21:\n\n   68 |         call solve(s)\n      |                     1\nError: SUBROUTINE \u2018solve\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:10:15:\n\n   10 |     call solve(s)\n      |               1\nError: Expected a procedure for argument \u2018s\u2019 at (1)\ntemp.f95:16:15:\n\n   16 |     call solve(s)\n      |               1\nError: Expected a procedure for argument \u2018s\u2019 at (1)\ntemp.f95:22:15:\n\n   22 |     call solve(s)\n      |               1\nError: Expected a procedure for argument \u2018s\u2019 at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1763": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:23:36:\n\n   23 |         allocate(character(len=size(s)) :: res)\n      |                                    1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:27:27:\n\n   27 |             do j = 1, size(s) - i\n      |                           1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:25:23:\n\n   25 |         do i = 1, size(s) - 1\n      |                       1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:45:29:\n\n   28 |                 if (isNiceString(s(i+j:i+j))) then\n      |                    2         \n......\n   45 |         do i = 1, len_trim(s)\n      |                             1\nError: Index variable \u2018i\u2019 redefined at (1) in procedure \u2018isnicestring\u2019 called from within DO loop at (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1768": {
        "compiled": true,
        "executed": true,
        "stdout": " \n \n \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1773": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 10 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7fa986313960 in ???\n#1  0x7fa9863144d9 in ???\n#2  0x7fa98656817b in ???\n#3  0x7fa986561684 in ???\n#4  0x7fa9865622aa in ???\n#5  0x5c582dd6c54b in MAIN__\n#6  0x5c582dd6c9ff in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1779": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 7 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x787a8f164960 in ???\n#1  0x787a8f1654d9 in ???\n#2  0x787a8f3b917b in ???\n#3  0x787a8f3b2684 in ???\n#4  0x787a8f3b32aa in ???\n#5  0x5d3fe72635f8 in MAIN__\n#6  0x5d3fe7263a06 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1784": {
        "compiled": true,
        "executed": true,
        "stdout": " SUCCESS: Expected false and got false for input 1001                                                                                                \n FAILURE: Expected true but got false for input 110                                                                                                 \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "1790": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1: True\n Example 2: True\n Example 3: True\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "1791": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:42:12:\n\n   42 |     contains\n      |            1\nError: CONTAINS statement at (1) is already in a contained program unit\ntemp.f95:45:25:\n\n   45 |             implicit none\n      |                         1\nError: Duplicate IMPLICIT NONE statement at (1)\ntemp.f95:46:40:\n\n   46 |             integer, intent(in) :: edges(:)\n      |                                        1\nError: Symbol \u2018edges\u2019 at (1) already has basic type of INTEGER\ntemp.f95:47:39:\n\n   47 |             integer, intent(in) :: node\n      |                                       1\nError: Unexpected data declaration statement at (1)\ntemp.f95:48:45:\n\n   48 |             logical, intent(inout) :: visited(:)\n      |                                             1\nError: Symbol \u2018visited\u2019 at (1) already has basic type of LOGICAL\ntemp.f95:49:24:\n\n   49 |             integer :: i\n      |                        1\nError: Symbol \u2018i\u2019 at (1) already has basic type of INTEGER\ntemp.f95:59:11:\n\n   59 |         end subroutine dfs\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:51:24:\n\n   51 |             visited(node) = .true.\n      |                        1\nError: Symbol \u2018node\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1796": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\n Input: dfa12321afd                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \n Output:            3\n \n Example 2:\n Input: abc1111                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n Output:            1\n \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1800": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:10:66:\n\n   10 |     write(*, '(a, i0)') 'Example 1: ', max_ascending_subarray_sum(nums)\n      |                                                                  1\nError: Symbol at (1) is not appropriate for an expression\ntemp.f95:12:66:\n\n   12 |     write(*, '(a, i0)') 'Example 2: ', max_ascending_subarray_sum(nums)\n      |                                                                  1\nError: Symbol at (1) is not appropriate for an expression\ntemp.f95:14:66:\n\n   14 |     write(*, '(a, i0)') 'Example 3: ', max_ascending_subarray_sum(nums)\n      |                                                                  1\nError: Symbol at (1) is not appropriate for an expression\ntemp.f95:18:61:\n\n   18 |     function max_ascending_subarray_sum(nums) result(max_sum)\n      |                                                             1\nError: PROGRAM attribute of \u2018max_ascending_subarray_sum\u2019 conflicts with PROCEDURE attribute at (1)\ntemp.f95:19:21:\n\n   19 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:20:38:\n\n   20 |         integer, intent(in) :: nums(:)\n      |                                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:21:45:\n\n   21 |         integer :: max_sum, current_sum, i, j\n      |                                             1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:23:19:\n\n   23 |         max_sum = 0\n      |                   1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:24:32:\n\n   24 |         do i = 1, size(nums) - 1\n      |                                1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:25:27:\n\n   25 |             current_sum = 0\n      |                           1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:26:32:\n\n   26 |             do j = i, size(nums)\n      |                                1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:27:68:\n\n   27 |                 if (current_sum >= 0 .and. nums(j) > nums(j-1)) then\n      |                                                                    1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:28:55:\n\n   28 |                     current_sum = current_sum + nums(j)\n      |                                                       1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:29:20:\n\n   29 |                 else\n      |                    1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:30:24:\n\n   30 |                     exit\n      |                        1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:31:19:\n\n   31 |                 end if\n      |                   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:32:51:\n\n   32 |                 max_sum = max(max_sum, current_sum)\n      |                                                   1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:33:15:\n\n   33 |             end do\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:34:11:\n\n   34 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:35:7:\n\n   35 |     end function max_ascending_subarray_sum\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:11:19:\n\n   11 |     nums = reshape([10, 20, 30, 40, 50], shape=[n])\n      |                   1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1805": {
        "compiled": true,
        "executed": true,
        "stdout": "0\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1812": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:21:22:\n\n   21 |     function is_white(coordinates) result(is_white_)\n      |                      1\nError: Procedure \u2018is_white\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:22:21:\n\n   22 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:23:51:\n\n   23 |         character(len=*), intent(in) :: coordinates\n      |                                                   1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:24:27:\n\n   24 |         integer :: row, col\n      |                           1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:25:28:\n\n   25 |         logical :: is_white_\n      |                            1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:27:45:\n\n   27 |         read(coordinates, \"(A1,I1)\") col, row\n      |                                             1\nError: Unexpected READ statement in CONTAINS section at (1)\ntemp.f95:28:41:\n\n   28 |         if (col >= 4 .and. col <= 6) then\n      |                                         1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:29:30:\n\n   29 |             is_white_ = .true.\n      |                              1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:30:12:\n\n   30 |         else\n      |            1\nError: Unexpected ELSE statement in CONTAINS section at (1)\ntemp.f95:31:31:\n\n   31 |             is_white_ = .false.\n      |                               1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:32:11:\n\n   32 |         end if\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:33:7:\n\n   33 |     end function is_white\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1816": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\nHelloellollo\n Example 2:\nWhathatat\n Example 3:\nchopperhopperopperpper\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1822": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:51:10:\n\n   51 |     case (0._DP)\n      |          1\nError: Expression in CASE selector at (1) cannot be REAL(8)\ntemp.f95:52:16:\n\n   52 |         sign = 0\n      |                1\nError: Expected a CASE or END SELECT statement following SELECT CASE at (1)\ntemp.f95:53:11:\n\n   53 |     case (< 0._DP)\n      |           1\nError: Expected initialization expression in CASE at (1)\ntemp.f95:54:17:\n\n   54 |         sign = -1\n      |                 1\nError: Expected a CASE or END SELECT statement following SELECT CASE at (1)\ntemp.f95:50:17:\n\n   50 |     select case (x)\n      |                 1\nError: Argument of SELECT statement at (1) cannot be REAL(8)\ntemp.f95:16:4:\n\n   16 |     nums = [1._DP, 5._DP, 0._DP, 2._DP, -3._DP]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (7 and 5)\ntemp.f95:24:4:\n\n   24 |     nums = [-1._DP, 1._DP, -1._DP, 1._DP, -1._DP]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (7 and 5)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1826": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:10:4:\n\n   10 |     sensor1 = [2, 3, 4, 5]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 4)\ntemp.f95:11:4:\n\n   11 |     sensor2 = [2, 1, 3, 4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 4)\ntemp.f95:28:4:\n\n   28 |     sensor1 = [2, 3, 2, 2, 3, 2]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 6)\ntemp.f95:29:4:\n\n   29 |     sensor2 = [2, 3, 2, 3, 2, 7]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 6)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1827": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:31:\n\n    6 |     integer :: i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z\n      |                               1\nError: Symbol \u2018n\u2019 at (1) already has basic type of INTEGER\ntemp.f95:9:4:\n\n    9 |     nums = [1, 1, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 3)\ntemp.f95:17:4:\n\n   17 |     nums = [8]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1832": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:25:24:\n\n   25 |     function is_pangram(sentence) result(is_pangram_)\n      |                        1\nError: Procedure \u2018is_pangram\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:26:21:\n\n   26 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:27:48:\n\n   27 |         character(len=*), intent(in) :: sentence\n      |                                                1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:28:20:\n\n   28 |         integer :: i\n      |                    1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:29:30:\n\n   29 |         logical :: is_pangram_\n      |                              1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:31:28:\n\n   31 |         is_pangram_ = .true.\n      |                            1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:32:22:\n\n   32 |         do i = 97, 122\n      |                      1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:33:51:\n\n   33 |             if (index(sentence, char(i)) == 0) then\n      |                                                   1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:34:37:\n\n   34 |                 is_pangram_ = .false.\n      |                                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:35:20:\n\n   35 |                 exit\n      |                    1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:36:15:\n\n   36 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:37:11:\n\n   37 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:38:7:\n\n   38 |     end function is_pangram\n      |       1\nError: Expecting END PROGRAM statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1837": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:26:22:\n\n   26 |         do i = 1, len(n)\n      |                      1\nError: \u2018string\u2019 argument of \u2018len\u2019 intrinsic at (1) must be CHARACTER\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1844": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:11:25:\n\n   11 |             j = iachar(s(i)) - 48\n      |                         1\nError: Syntax error in argument list at (1)\ntemp.f95:21:25:\n\n   21 |             j = iachar(s(i)) - 48\n      |                         1\nError: Syntax error in argument list at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1848": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:16:4:\n\n   16 |     nums = [1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1854": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:14:27:\n\n   14 |         read(*,*) logs(i)%birth, logs(i)%death\n      |                           1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018logs\u2019 at (1)\ntemp.f95:28:25:\n\n   28 |             if (logs(j)%birth >= logs(i)%birth .and. &\n      |                         1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018logs\u2019 at (1)\ntemp.f95:32:15:\n\n   32 |             end if\n      |               1\nError: Expecting END DO statement at (1)\ntemp.f95:37:36:\n\n   37 |                 min_year = logs(i)%birth\n      |                                    1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018logs\u2019 at (1)\ntemp.f95:38:36:\n\n   38 |                 max_year = logs(i)%death\n      |                                    1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018logs\u2019 at (1)\ntemp.f95:40:29:\n\n   40 |                 if (logs(i)%birth < min_year) then\n      |                             1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018logs\u2019 at (1)\ntemp.f95:41:40:\n\n   41 |                     min_year = logs(i)%birth\n      |                                        1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018logs\u2019 at (1)\ntemp.f95:43:29:\n\n   43 |                 if (logs(i)%death > max_year) then\n      |                             1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018logs\u2019 at (1)\ntemp.f95:44:40:\n\n   44 |                     max_year = logs(i)%death\n      |                                        1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018logs\u2019 at (1)\ntemp.f95:46:15:\n\n   46 |             end if\n      |               1\nError: Expecting END DO statement at (1)\ntemp.f95:47:11:\n\n   47 |         end if\n      |           1\nError: Expecting END DO statement at (1)\ntemp.f95:61:28:\n\n   61 |                 if (arr(i)%birth > arr(j)%birth) then\n      |                            1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018arr\u2019 at (1)\ntemp.f95:62:35:\n\n   62 |                     temp = arr(i)%birth\n      |                                   1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018arr\u2019 at (1)\ntemp.f95:63:28:\n\n   63 |                     arr(i)%birth = arr(j)%birth\n      |                            1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018arr\u2019 at (1)\ntemp.f95:64:28:\n\n   64 |                     arr(j)%birth = temp\n      |                            1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018arr\u2019 at (1)\ntemp.f95:65:35:\n\n   65 |                     temp = arr(i)%death\n      |                                   1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018arr\u2019 at (1)\ntemp.f95:66:28:\n\n   66 |                     arr(i)%death = arr(j)%death\n      |                            1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018arr\u2019 at (1)\ntemp.f95:67:28:\n\n   67 |                     arr(j)%death = temp\n      |                            1\nError: Unexpected \u2018%\u2019 for nonderived-type variable \u2018arr\u2019 at (1)\ntemp.f95:68:19:\n\n   68 |                 end if\n      |                   1\nError: Expecting END DO statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1859": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:11:18:\n\n   11 |     nwords = size(sentence)\n      |                  1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:18:18:\n\n   18 |     nwords = size(sentence)\n      |                  1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1863": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:44:9:\n\n   44 |         res = a XOR b XOR c XOR d XOR e\n      |         1\nError: Unclassifiable statement at (1)\ntemp.f95:10:4:\n\n   10 |     nums = [1,3]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (12 and 2)\ntemp.f95:12:4:\n\n   12 |     nums = [5,1,6]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (12 and 3)\ntemp.f95:14:4:\n\n   14 |     nums = [3,4,5,6,7,8]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (12 and 6)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1869": {
        "compiled": true,
        "executed": true,
        "stdout": "F\nF\nF\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "1876": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 36 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x78b6918be960 in ???\n#1  0x78b6918bf4d9 in ???\n#2  0x78b691b1317b in ???\n#3  0x78b691b13752 in ???\n#4  0x78b691b0ff1b in ???\n#5  0x78b691b14e3c in ???\n#6  0x78b691b15e55 in ???\n#7  0x585076b9c2fb in get_string.0\n#8  0x585076b9c576 in MAIN__\n#9  0x585076b9c761 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1880": {
        "compiled": true,
        "executed": true,
        "stdout": " F\n F\n F\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "1886": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:60:12:\n\n   60 |     contains\n      |            1\nError: CONTAINS statement at (1) is already in a contained program unit\ntemp.f95:63:25:\n\n   63 |             implicit none\n      |                         1\nError: Duplicate IMPLICIT NONE statement at (1)\ntemp.f95:64:47:\n\n   64 |             logical, intent(inout) :: arr(:, :)\n      |                                               1\nError: Unexpected data declaration statement at (1)\ntemp.f95:65:38:\n\n   65 |             integer, intent(in) :: dir\n      |                                      1\nError: Unexpected data declaration statement at (1)\ntemp.f95:67:24:\n\n   67 |             integer :: i, j\n      |                        1\nError: Symbol \u2018i\u2019 at (1) already has basic type of INTEGER\ntemp.f95:68:40:\n\n   68 |             logical, allocatable :: temp(:, :)\n      |                                        1\nError: Symbol \u2018temp\u2019 at (1) already has basic type of LOGICAL\ntemp.f95:93:16:\n\n   93 |             arr(:, :) = temp(:, :)\n      |                1\nError: \u2018arr\u2019 at (1) is not a variable\ntemp.f95:95:11:\n\n   95 |         end subroutine rotate\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:72:28:\n\n   72 |             select case (dir)\n      |                            1\nError: Symbol \u2018dir\u2019 at (1) has no IMPLICIT type\ntemp.f95:36:20:\n\n   36 |                 if (mat(i, j) /= target(i, j)) then\n      |                    1\nError: Logicals at (1) must be compared with .neqv. instead of /=\ntemp.f95:44:28:\n\n   44 |                     if (all(temp == target)) then\n      |                            1\nError: Logicals at (1) must be compared with .eqv. instead of ==\ntemp.f95:70:34:\n\n   70 |             allocate(temp(size(arr, 1), size(arr, 2)))\n      |                                  1\nError: Symbol \u2018arr\u2019 at (1) has no IMPLICIT type\ntemp.f95:72:25:\n\n   72 |             select case (dir)\n      |                         1\nError: Argument of SELECT statement at (1) cannot be UNKNOWN\ntemp.f95:8:16:\n\n    8 |     mat(:, :) = reshape([0, 1, 1, 0], shape(mat))\n      |                1\nWarning: Extension: Conversion from INTEGER(4) to LOGICAL(4) at (1)\ntemp.f95:9:19:\n\n    9 |     target(:, :) = reshape([1, 0, 0, 1], shape(target))\n      |                   1\nWarning: Extension: Conversion from INTEGER(4) to LOGICAL(4) at (1)\ntemp.f95:13:16:\n\n   13 |     mat(:, :) = reshape([0, 1, 1, 0], shape(mat))\n      |                1\nWarning: Extension: Conversion from INTEGER(4) to LOGICAL(4) at (1)\ntemp.f95:14:19:\n\n   14 |     target(:, :) = reshape([1, 0, 0, 1], shape(target))\n      |                   1\nWarning: Extension: Conversion from INTEGER(4) to LOGICAL(4) at (1)\ntemp.f95:18:16:\n\n   18 |     mat(:, :) = reshape([0, 0, 0, 0, 0, 0, 1, 1, 1], shape(mat))\n      |                1\nWarning: Extension: Conversion from INTEGER(4) to LOGICAL(4) at (1)\ntemp.f95:19:19:\n\n   19 |     target(:, :) = reshape([1, 1, 1, 0, 0, 0, 0, 1, 0], shape(target))\n      |                   1\nWarning: Extension: Conversion from INTEGER(4) to LOGICAL(4) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1893": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:30:46:\n\n   30 |             if (any(ranges(i, 1) <= left .and. left <= ranges(i, 2))) then\n      |                                              1\nError: \u2018mask\u2019 argument of \u2018any\u2019 intrinsic at (1) must be a logical array\ntemp.f95:34:47:\n\n   34 |             if (any(ranges(i, 1) <= right .and. right <= ranges(i, 2))) then\n      |                                               1\nError: \u2018mask\u2019 argument of \u2018any\u2019 intrinsic at (1) must be a logical array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1897": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:8:20:\n\n    8 |     words = [\"abc \", \"aabc \", \"bc \"]\n      |                    1\nError: Different CHARACTER lengths (4/5) in array constructor at (1)\ntemp.f95:12:19:\n\n   12 |     words = [\"ab \", \"a \"]\n      |                   1\nError: Different CHARACTER lengths (3/2) in array constructor at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1903": {
        "compiled": true,
        "executed": true,
        "stdout": "Example 1: 52                                                                                                  \nExample 2: 206                                                                                                 \nExample 3: 27                                                                                                  \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1909": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:4:\n\n    6 |     nums = [1, 2, 10, 5, 7]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 5)\ntemp.f95:10:4:\n\n   10 |     nums = [1, 1, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1913": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:11:4:\n\n   11 |     nums = reshape([5, 6, 2, 7, 4], shape=[5])\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 5)\ntemp.f95:13:4:\n\n   13 |     nums = reshape([4, 2, 5, 9, 7, 4, 8], shape=[7])\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 7)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1920": {
        "compiled": true,
        "executed": true,
        "stdout": "ans =\n0\n2\n0\n3\n1\n5\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "1925": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:31:25:\n\n   31 |                 k = sqrt(i**2 + j**2)\n      |                         1\nError: \u2018x\u2019 argument of \u2018sqrt\u2019 intrinsic at (1) must be REAL or COMPLEX\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1929": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:8:18:\n\n    8 |     ans = [(nums(i), i=1,n), (nums(i), i=1,n)]\n      |                  1\nError: Symbol \u2018i\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1933": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:25:\n\n    9 |     write(*,*) s, \"is\", (result == .true.), \"a value-equal string\"\n      |                         1\nError: Logicals at (1) must be compared with .eqv. instead of ==\ntemp.f95:13:25:\n\n   13 |     write(*,*) s, \"is\", (result == .true.), \"a value-equal string\"\n      |                         1\nError: Logicals at (1) must be compared with .eqv. instead of ==\ntemp.f95:17:25:\n\n   17 |     write(*,*) s, \"is\", (result == .true.), \"a value-equal string\"\n      |                         1\nError: Logicals at (1) must be compared with .eqv. instead of ==\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1935": {
        "compiled": true,
        "executed": false,
        "stdout": "          10\n",
        "stderr": "At line 16 of file temp.f95\nFortran runtime error: Attempting to allocate already allocated variable 'text'\n\nError termination. Backtrace:\n#0  0x7d8d045d3960 in ???\n#1  0x7d8d045d44d9 in ???\n#2  0x5ccfc45e25d3 in MAIN__\n#3  0x5ccfc45e2ae8 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "1941": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:19:39:\n\n   19 |     function goodString(s) result(good)\n      |                                       1\nError: Function result \u2018good\u2019 at (1) has no IMPLICIT type\ntemp.f95:9:11:\n\n    9 |     good = goodString(s)\n      |           1\nError: Cannot convert UNKNOWN to LOGICAL(4) at (1)\ntemp.f95:14:11:\n\n   14 |     good = goodString(s)\n      |           1\nError: Cannot convert UNKNOWN to LOGICAL(4) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1945": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:30:12:\n\n   30 |     contains\n      |            1\nError: CONTAINS statement at (1) is already in a contained program unit\ntemp.f95:33:25:\n\n   33 |             implicit none\n      |                         1\nError: Duplicate IMPLICIT NONE statement at (1)\ntemp.f95:34:36:\n\n   34 |             integer, intent(in) :: n\n      |                                    1\nError: Unexpected data declaration statement at (1)\ntemp.f95:35:28:\n\n   35 |             integer :: d(10)\n      |                            1\nError: Unexpected data declaration statement at (1)\ntemp.f95:42:27:\n\n   42 |         end function digits\n      |                           1\nError: Expected label \u2018solve\u2019 for END FUNCTION statement at (1)\ntemp.f95:37:13:\n\n   37 |             d = 0\n      |             1\nError: Symbol \u2018d\u2019 at (1) has no IMPLICIT type\ntemp.f95:21:12:\n\n   21 |         do i = 1, len_trim(s)\n      |            1\nError: Symbol \u2018i\u2019 at (1) has no IMPLICIT type\ntemp.f95:26:12:\n\n   26 |         do j = 1, k\n      |            1\nError: Symbol \u2018j\u2019 at (1) has no IMPLICIT type\ntemp.f95:38:23:\n\n   38 |             do while (n > 0)\n      |                       1\nError: Symbol \u2018n\u2019 at (1) has no IMPLICIT type\ntemp.f95:27:25:\n\n   27 |             result = sum(digits(result))\n      |                         1\nError: \u2018array\u2019 argument of \u2018sum\u2019 intrinsic at (1) must be an array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1952": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:28:36:\n\n   28 |                 result = result .or. hasThreePositiveDivisors(i)\n      |                                    1\nError: Function \u2018hasthreepositivedivisors\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1957": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:135:14:\n\n  135 |             s(\n      |              1\nError: Invalid character in name at (1)\nf951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1961": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:14:33:\n\n   14 |     allocate(character(len=6) :: word2)\n      |                                 1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:16:33:\n\n   16 |     allocate(character(len=9) :: word3)\n      |                                 1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:18:33:\n\n   18 |     allocate(character(len=7) :: word4)\n      |                                 1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:33:21:\n\n   33 |     deallocate(word2)\n      |                     1\nError: Allocate-object at (1) is not a nonprocedure pointer nor an allocatable variable\ntemp.f95:34:21:\n\n   34 |     deallocate(word3)\n      |                     1\nError: Allocate-object at (1) is not a nonprocedure pointer nor an allocatable variable\ntemp.f95:35:21:\n\n   35 |     deallocate(word4)\n      |                     1\nError: Allocate-object at (1) is not a nonprocedure pointer nor an allocatable variable\ntemp.f95:38:33:\n\n   38 |     allocate(character(len=7) :: word2)\n      |                                 1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:40:33:\n\n   40 |     allocate(character(len=6) :: word3)\n      |                                 1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:42:33:\n\n   42 |     allocate(character(len=9) :: word4)\n      |                                 1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:15:9:\n\n   15 |     word2 = \"love \"\n      |         1\nError: Symbol \u2018word2\u2019 at (1) has no IMPLICIT type; did you mean \u2018words\u2019?\ntemp.f95:17:9:\n\n   17 |     word3 = \"leetcode \"\n      |         1\nError: Symbol \u2018word3\u2019 at (1) has no IMPLICIT type; did you mean \u2018words\u2019?\ntemp.f95:19:9:\n\n   19 |     word4 = \"apples \"\n      |         1\nError: Symbol \u2018word4\u2019 at (1) has no IMPLICIT type; did you mean \u2018words\u2019?\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1967": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:21:\n\n    9 |     patterns = [\"a \", \"abc \", \"bc \", \"d \"]\n      |                     1\nError: Different CHARACTER lengths (2/4) in array constructor at (1)\ntemp.f95:15:4:\n\n   15 |     patterns = [\"a \", \"b \", \"c \"]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 3)\ntemp.f95:21:4:\n\n   21 |     patterns = [\"a \", \"a \", \"a \"]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1971": {
        "compiled": true,
        "executed": true,
        "stdout": "F\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "1974": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:10:63:\n\n   10 |     data (i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z)/'a', 'b', 'c', &\n      |                                                               1\nError: Syntax error in DATA statement at (1)\ntemp.f95:15:11:\n\n   15 |     data i /'a'/\n      |           1\nError: Incompatible types in DATA statement at (1); attempted conversion of CHARACTER(1) to INTEGER(4)\ntemp.f95:25:20:\n\n   25 |                 if (word(j:j) == i) then\n      |                    1\nError: Operands of comparison operator \u2018==\u2019 at (1) are CHARACTER(*)/INTEGER(4)\ntemp.f95:30:24:\n\n   30 |                     i = word(j:j)\n      |                        1\nError: Cannot convert CHARACTER(*) to INTEGER(4) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1979": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:28:18:\n\n   28 |             gcd = gcd_of_two(b, mod(a, b))\n      |                  1\nError: Function \u2018gcd_of_two\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:6:14:\n\n    6 |     do while (get_line(n) > 0)\n      |              1\nError: Function \u2018get_line\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1984": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:15:19:\n\n   15 |     nums = reshape([9, 4, 1, 7], shape(nums))\n      |                   1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "1991": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:4:\n\n    9 |     nums = [2,3,-1,8,4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 5)\ntemp.f95:16:4:\n\n   16 |     nums = [1,-1,4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 3)\ntemp.f95:23:4:\n\n   23 |     nums = [2,5]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (10 and 2)\ntemp.f95:41:41:\n\n   40 |             do j=0,i-1\n      |                      2                   \n   41 |                 leftSum = leftSum + nums(j)\n      |                                         1\nWarning: Array reference at (1) out of bounds (0 < 1) in loop beginning at (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2000": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 9 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7c0b62c54960 in ???\n#1  0x7c0b62c554d9 in ???\n#2  0x7c0b62ea917b in ???\n#3  0x7c0b62ea2684 in ???\n#4  0x7c0b62ea32aa in ???\n#5  0x5a7303e0524d in MAIN__\n#6  0x5a7303e05484 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2006": {
        "compiled": true,
        "executed": true,
        "stdout": "6\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "2011": {
        "compiled": true,
        "executed": true,
        "stdout": "0\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "2016": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:4:38:\n\n    4 |     integer :: n, i, j, diff, max_diff\n      |                                      1\nError: Symbol \u2018max_diff\u2019 at (1) cannot have a type\ntemp.f95:15:13:\n\n   15 |     max_diff = -1\n      |             1\nError: \u2018max_diff\u2019 at (1) is not a variable\ntemp.f95:19:32:\n\n   19 |             if (diff > max_diff .and. nums(i) < nums(j)) then\n      |                                1\nError: Symbol at (1) is not appropriate for an expression\ntemp.f95:20:25:\n\n   20 |                 max_diff = diff\n      |                         1\nError: \u2018max_diff\u2019 at (1) is not a variable\ntemp.f95:21:15:\n\n   21 |             end if\n      |               1\nError: Expecting END DO statement at (1)\ntemp.f95:26:23:\n\n   26 |     write(*,*) max_diff\n      |                       1\nError: Symbol at (1) is not appropriate for an expression\ntemp.f95:18:16:\n\n   18 |             diff = nums(j) - nums(i)\n      |                1\nError: Symbol \u2018diff\u2019 at (1) has no IMPLICIT type\ntemp.f95:10:8:\n\n   10 |     do i=1,n\n      |        1\nError: Symbol \u2018i\u2019 at (1) has no IMPLICIT type\ntemp.f95:17:12:\n\n   17 |         do j=i+1,n\n      |            1\nError: Symbol \u2018j\u2019 at (1) has no IMPLICIT type\ntemp.f95:8:15:\n\n    8 |     read(*,*) n\n      |               1\nError: Symbol \u2018n\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2022": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:14:8:\n\n   14 |     do i = 1, m\n      |        1\nError: Symbol \u2018i\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2027": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 7 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7df5b6889960 in ???\n#1  0x7df5b688a4d9 in ???\n#2  0x7df5b6ade17b in ???\n#3  0x7df5b6ad7684 in ???\n#4  0x7df5b6ad82aa in ???\n#5  0x5afc4711c23a in MAIN__\n#6  0x5afc4711c616 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2032": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:34:\n\n    6 |     integer, dimension(n) :: nums1 = [1, 1, 3, 2]\n      |                                  1\nError: Different shape for array assignment at (1) on dimension 1 (3 and 4)\ntemp.f95:7:34:\n\n    7 |     integer, dimension(n) :: nums2 = [2, 3]\n      |                                  1\nError: Different shape for array assignment at (1) on dimension 1 (3 and 2)\ntemp.f95:8:34:\n\n    8 |     integer, dimension(n) :: nums3 = [3]\n      |                                  1\nError: Different shape for array assignment at (1) on dimension 1 (3 and 1)\ntemp.f95:11:20:\n\n   11 |     call solve(nums1, nums2, nums3, result)\n      |                    1\nError: Symbol \u2018nums1\u2019 at (1) has no IMPLICIT type\ntemp.f95:11:27:\n\n   11 |     call solve(nums1, nums2, nums3, result)\n      |                           1\nError: Symbol \u2018nums2\u2019 at (1) has no IMPLICIT type\ntemp.f95:11:34:\n\n   11 |     call solve(nums1, nums2, nums3, result)\n      |                                  1\nError: Symbol \u2018nums3\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2037": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:34:20:\n\n   34 |                     students(i) = seats(j)\n      |                    1\nError: Dummy argument \u2018students\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:35:20:\n\n   35 |                     seats(j) = temp\n      |                    1\nError: Dummy argument \u2018seats\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:48:24:\n\n   48 |                         students(i) = seats(j)\n      |                        1\nError: Dummy argument \u2018students\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:49:24:\n\n   49 |                         seats(j) = temp\n      |                        1\nError: Dummy argument \u2018seats\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2042": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:29:16:\n\n   29 |             if (j <= s(i:i)) then\n      |                1\nError: Operands of comparison operator \u2018<=\u2019 at (1) are INTEGER(4)/CHARACTER(*)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2047": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:37:12:\n\n   37 |     contains\n      |            1\nError: CONTAINS statement at (1) is already in a contained program unit\ntemp.f95:39:25:\n\n   39 |         logical function is_valid_word(word)\n      |                         1\nError: Syntax error in data declaration at (1)\ntemp.f95:40:25:\n\n   40 |             implicit none\n      |                         1\nError: Duplicate IMPLICIT NONE statement at (1)\ntemp.f95:41:48:\n\n   41 |             character(len=*), intent(in) :: word\n      |                                                1\nError: Unexpected data declaration statement at (1)\ntemp.f95:42:24:\n\n   42 |             integer :: i, j\n      |                        1\nError: Symbol \u2018i\u2019 at (1) already has basic type of INTEGER\ntemp.f95:44:26:\n\n   44 |             is_valid_word = .false.\n      |                          1\nError: \u2018is_valid_word\u2019 at (1) is not a variable\ntemp.f95:48:33:\n\n   48 |                 if (ichar(word(i:i)) < ichar('a') .or. &\n      |                                 1\nError: Syntax error in argument list at (1)\ntemp.f95:57:19:\n\n   57 |                 end if\n      |                   1\nError: Expecting END DO statement at (1)\ntemp.f95:63:30:\n\n   63 |                 is_valid_word = .true.\n      |                              1\nError: \u2018is_valid_word\u2019 at (1) is not a variable\ntemp.f95:65:30:\n\n   65 |                 is_valid_word = .true.\n      |                              1\nError: \u2018is_valid_word\u2019 at (1) is not a variable\ntemp.f95:67:30:\n\n   67 |                 is_valid_word = .true.\n      |                              1\nError: \u2018is_valid_word\u2019 at (1) is not a variable\ntemp.f95:77:30:\n\n   77 |                 is_valid_word = .true.\n      |                              1\nError: \u2018is_valid_word\u2019 at (1) is not a variable\ntemp.f95:79:30:\n\n   79 |                 is_valid_word = .true.\n      |                              1\nError: \u2018is_valid_word\u2019 at (1) is not a variable\ntemp.f95:81:30:\n\n   81 |                 is_valid_word = .true.\n      |                              1\nError: \u2018is_valid_word\u2019 at (1) is not a variable\ntemp.f95:83:30:\n\n   83 |                 is_valid_word = .true.\n      |                              1\nError: \u2018is_valid_word\u2019 at (1) is not a variable\ntemp.f95:88:34:\n\n   88 |         end function is_valid_word\n      |                                  1\nError: Expected label \u2018count_valid_words\u2019 for END FUNCTION statement at (1)\ntemp.f95:47:35:\n\n   47 |             do i = 1, len_trim(word)\n      |                                   1\nError: Symbol \u2018word\u2019 at (1) has no IMPLICIT type\ntemp.f95:32:16:\n\n   32 |             if (is_valid_word(sentence(i:))) then\n      |                1\nError: Function \u2018is_valid_word\u2019 at (1) has no IMPLICIT type; did you mean \u2018count_valid_words\u2019?\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2053": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:13:\n\n    9 |     allocate(arr(6))\n      |             1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:15:13:\n\n   15 |     allocate(arr(3))\n      |             1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:21:13:\n\n   21 |     allocate(arr(3))\n      |             1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:16:18:\n\n   16 |     arr = [\"aaa \", \"aa \", \"a \"]\n      |                  1\nError: Different CHARACTER lengths (4/3) in array constructor at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2057": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:4:\n\n    9 |     nums = [0, 1, 2]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 3)\ntemp.f95:13:4:\n\n   13 |     nums = [4, 3, 2, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 4)\ntemp.f95:17:4:\n\n   17 |     nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 10)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2062": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:34:32:\n\n   34 |     function is_vowel_substring(word) result(res)\n      |                                1\nError: Procedure \u2018is_vowel_substring\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:35:21:\n\n   35 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:36:44:\n\n   36 |         character(len=*), intent(in) :: word\n      |                                            1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:37:22:\n\n   37 |         logical :: res\n      |                      1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:39:21:\n\n   39 |         res = .false.\n      |                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:40:19:\n\n   40 |         do i = 1, 5\n      |                   1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:41:54:\n\n   41 |             if (index(word, ['a', 'e', 'i', 'o', 'u'][i]) == 0) exit\n      |                                                      1\nError: Syntax error in argument list at (1)\ntemp.f95:42:11:\n\n   42 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:43:24:\n\n   43 |         if (i == 6) then\n      |                        1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:44:24:\n\n   44 |             res = .true.\n      |                        1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:45:11:\n\n   45 |         end if\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:46:7:\n\n   46 |     end function is_vowel_substring\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:28:16:\n\n   28 |             if (is_vowel_substring(word(i:i+4))) then\n      |                1\nError: \u2018is_vowel_substring\u2019 at (1) is not a function\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2068": {
        "compiled": true,
        "executed": false,
        "stdout": " F\n",
        "stderr": "At line 18 of file temp.f95\nFortran runtime error: Attempting to allocate already allocated variable 'word1'\n\nError termination. Backtrace:\n#0  0x7ccb9829a960 in ???\n#1  0x7ccb9829b4d9 in ???\n#2  0x57cd15d3d5fb in MAIN__\n#3  0x57cd15d3db68 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2073": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:18:17:\n\n   18 |     start_time = omp_get_wtime()\n      |                 1\nError: Function \u2018omp_get_wtime\u2019 at (1) has no IMPLICIT type\ntemp.f95:20:15:\n\n   20 |     end_time = omp_get_wtime()\n      |               1\nError: Function \u2018omp_get_wtime\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2078": {
        "compiled": true,
        "executed": true,
        "stdout": "Maximum distance: 3\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "2085": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:9:39:\n\n    9 |     call get_command_argument(1, value=n)\n      |                                       1\nError: In call to \u2018get_command_argument\u2019 at (1), type mismatch in argument \u2018value\u2019; pass \u2018INTEGER(4)\u2019 to \u2018CHARACTER(*)\u2019\ntemp.f95:11:39:\n\n   11 |     call get_command_argument(2, value=m)\n      |                                       1\nError: In call to \u2018get_command_argument\u2019 at (1), type mismatch in argument \u2018value\u2019; pass \u2018INTEGER(4)\u2019 to \u2018CHARACTER(*)\u2019\ntemp.f95:34:22:\n\n   34 |     print '(I0)', sum(counts == 1)\n      |                      1\nError: \u2018array\u2019 argument of \u2018sum\u2019 intrinsic at (1) must have a numeric type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2089": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "/usr/bin/ld: /tmp/cc7Uxzji.o: in function `solve.0':\ntemp.f95:(.text+0x3ef): undefined reference to `sort_'\ncollect2: error: ld returned 1 exit status\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2094": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:61:41:\n\n   46 |         do i = 1, size(digits) - 2\n      |                                  2       \n......\n   61 |                                 i = i + 1\n      |                                         1\nError: Variable \u2018i\u2019 at (1) cannot be redefined inside loop beginning at (2)\ntemp.f95:12:4:\n\n   12 |     digits = [2, 1, 3, 0]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 4)\ntemp.f95:20:4:\n\n   20 |     digits = [2, 2, 8, 8, 2]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 5)\ntemp.f95:28:4:\n\n   28 |     digits = [3, 7, 5]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (100 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2099": {
        "compiled": true,
        "executed": true,
        "stdout": "Result: 2,1\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "2103": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 10 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7cca34856960 in ???\n#1  0x7cca348574d9 in ???\n#2  0x7cca34aab17b in ???\n#3  0x7cca34aa4684 in ???\n#4  0x7cca34aa52aa in ???\n#5  0x5bd1854382bc in MAIN__\n#6  0x5bd185438771 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2108": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:54:12:\n\n   54 |             str = str(:len_trim(str)-1)\n      |            1\nError: Dummy argument \u2018str\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:7:36:\n\n    7 |     words = [\"abc \", \"car \", \"ada \", \"racecar \", \"cool \"]\n      |                                    1\nError: Different CHARACTER lengths (4/8) in array constructor at (1)\ntemp.f95:12:31:\n\n   12 |     words = [\"notapalindrome \", \"racecar \"]\n      |                               1\nError: Different CHARACTER lengths (15/8) in array constructor at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2114": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:18:28:\n\n   18 |             [\"please wait \", \"continue to fight \", \"continue to win \"]], shape(examples))\n      |                            1\nError: Different CHARACTER lengths (12/18) in array constructor at (1)\ntemp.f95:21:49:\n\n   21 |             allocate(sentences(size(examples(i, :))))\n      |                                                 1\nError: Syntax error in argument list at (1)\ntemp.f95:58:17:\n\n   58 |         allocate(words(0))\n      |                 1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:67:16:\n\n   67 |                 str = str(pos+1:)\n      |                1\nError: Dummy argument \u2018str\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:23:31:\n\n   23 |                 sentences(j) = examples(i, j)\n      |                               1\nError: Function \u2018examples\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2119": {
        "compiled": true,
        "executed": true,
        "stdout": "Example 1: F\nExample 2: F\nExample 3: F\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "2124": {
        "compiled": true,
        "executed": true,
        "stdout": " Not every 'a' appears before every 'b' in the string.\n Not every 'a' appears before every 'b' in the string.\n Every 'a' appears before every 'b' in the string.\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "2129": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:26:27:\n\n   26 |                 res(i:i) = tolower(str(i:i))\n      |                           1\nError: Function \u2018tolower\u2019 at (1) has no IMPLICIT type\ntemp.f95:28:27:\n\n   28 |                 res(i:i) = toupper(str(i:i))\n      |                           1\nError: Function \u2018toupper\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2133": {
        "compiled": true,
        "executed": true,
        "stdout": "T\nF\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "2138": {
        "compiled": true,
        "executed": true,
        "stdout": " abcdefghi\n abcdefghij\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "2144": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:30:19:\n\n   30 |         min_cost = huge(1_8)\n      |                   1\nError: Arithmetic overflow converting INTEGER(8) to INTEGER(4) at (1). This check can be disabled with the option \u2018-fno-range-check\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2148": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\n Input:           11           7           2          15\n Output:            2\n \n Example 2:\n Input:           -3           3           3          90\n Output:            0\n \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "2154": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:16:4:\n\n   16 |     nums = [2, 7, 9]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2160": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:36:12:\n\n   36 |             num = num / 10\n      |            1\nError: Dummy argument \u2018num\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:43:16:\n\n   43 |                 num = num / 10\n      |                1\nError: Dummy argument \u2018num\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:50:20:\n\n   50 |                     num = num / 10\n      |                    1\nError: Dummy argument \u2018num\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:57:24:\n\n   57 |                         num = num / 10\n      |                        1\nError: Dummy argument \u2018num\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2164": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:18:8-15:\n\n   18 | if (any(nums /= [2,3,4,1])) stop \"Test case 1 failed\"\n      |        1      2\nError: Shapes for operands at (1) and (2) are not conformable\ntemp.f95:26:8-15:\n\n   26 | if (any(nums /= [2,1])) stop \"Test case 2 failed\"\n      |        1      2\nError: Shapes for operands at (1) and (2) are not conformable\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2176": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:18:4:\n\n   18 |     nums = [1, 2, 3, 4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (7 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2180": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 8 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7bc8ac98d960 in ???\n#1  0x7bc8ac98e4d9 in ???\n#2  0x7bc8acbe217b in ???\n#3  0x7bc8acbdb684 in ???\n#4  0x7bc8acbdc2aa in ???\n#5  0x5c44dd07d21a in MAIN__\n#6  0x5c44dd07d3fa in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2185": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:24:30:\n\n   24 |         read (unit=*, fmt='(I0)') n\n      |                              1\nError: Positive width required in format string at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2190": {
        "compiled": true,
        "executed": true,
        "stdout": "0\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "2194": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:38:17:\n\n   38 | type(cell_range) :: range\n      |                 1\nError: Derived type \u2018cell_range\u2019 at (1) is being used before it is defined\ntemp.f95:39:16:\n\n   39 | type(cell_list) :: list\n      |                1\nError: Derived type \u2018cell_list\u2019 at (1) is being used before it is defined\ntemp.f95:44:19:\n\n   44 | print \"(A)\", list%to_string()\n      |                   1\nError: Symbol \u2018list\u2019 at (1) has no IMPLICIT type\ntemp.f95:55:17:\n\n   55 | type(cell_range), intent(out) :: range\n      |                 1\nError: Derived type \u2018cell_range\u2019 at (1) is being used before it is defined\ntemp.f95:68:7:\n\n   68 | range%start%row = s(3:i-1)\n      |       1\nError: Symbol \u2018range\u2019 at (1) has no IMPLICIT type\ntemp.f95:69:7:\n\n   69 | range%start%col = s(1:2)\n      |       1\nError: Symbol \u2018range\u2019 at (1) has no IMPLICIT type\ntemp.f95:70:7:\n\n   70 | range%end%row = s(i+1:j-1)\n      |       1\nError: Symbol \u2018range\u2019 at (1) has no IMPLICIT type\ntemp.f95:71:7:\n\n   71 | range%end%col = s(k+1:l)\n      |       1\nError: Symbol \u2018range\u2019 at (1) has no IMPLICIT type\ntemp.f95:75:47:\n\n   75 | function get_list(range, list) result(new_list)\n      |                                               1\nError: FUNCTION attribute conflicts with SUBROUTINE attribute in \u2018get_list\u2019 at (1)\ntemp.f95:79:13:\n\n   79 | implicit none\n      |             1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:81:17:\n\n   81 | type(cell_range), intent(in) :: range\n      |                 1\nError: Derived type \u2018cell_range\u2019 at (1) is being used before it is defined\ntemp.f95:82:16:\n\n   82 | type(cell_list), intent(in) :: list\n      |                1\nError: Derived type \u2018cell_list\u2019 at (1) is being used before it is defined\ntemp.f95:83:16:\n\n   83 | type(cell_list) :: new_list\n      |                1\nError: Derived type \u2018cell_list\u2019 at (1) is being used before it is defined\ntemp.f95:85:21:\n\n   85 | integer :: i, j, k, n\n      |                     1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:86:16:\n\n   86 | logical :: found\n      |                1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:88:15:\n\n   88 | n = size(list%cells)\n      |               1\nError: Symbol \u2018list\u2019 at (1) has no IMPLICIT type\ntemp.f95:89:11:\n\n   89 | do i = 1, n\n      |           1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:90:15:\n\n   90 |     do j = 1, n\n      |               1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:91:18:\n\n   91 |         if (list%cells(i)%row >= range%start%row .and. &\n      |                  1\nError: Symbol \u2018list\u2019 at (1) has no IMPLICIT type\ntemp.f95:95:32:\n\n   95 |             call add_cell(list%cells(i), new_list)\n      |                                1\nError: Symbol \u2018list\u2019 at (1) has no IMPLICIT type\ntemp.f95:96:16:\n\n   96 |             exit\n      |                1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:97:11:\n\n   97 |         end if\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:98:7:\n\n   98 |     end do\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:99:3:\n\n   99 | end do\n      |   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:101:3:\n\n  101 | end function get_list\n      |   1\nError: Expecting END PROGRAM statement at (1)\nf951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2200": {
        "compiled": true,
        "executed": true,
        "stdout": "2\n3\n4\n5\n6\n7\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "2206": {
        "compiled": true,
        "executed": true,
        "stdout": "F\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "2210": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:18:51:\n\n   18 |     function solve(nums) result(nhills_and_valleys)\n      |                                                   1\nError: Function result \u2018nhills_and_valleys\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2215": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:40:8:\n\n   40 |         answer(1, 2) = [1, 3]\n      |        1\nError: Incompatible ranks 0 and 1 in assignment at (1)\ntemp.f95:41:8:\n\n   41 |         answer(2, 2) = [4, 6]\n      |        1\nError: Incompatible ranks 0 and 1 in assignment at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2220": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:42:25:\n\n   42 |             if (i > size(start)) then\n      |                         1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:50:29:\n\n   50 |                 if (j > size(goal)) then\n      |                             1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:58:33:\n\n   58 |                     if (k > size(start)) then\n      |                                 1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:66:37:\n\n   66 |                         if (n > size(goal)) then\n      |                                     1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:74:41:\n\n   74 |                             if (m > size(start)) then\n      |                                         1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:90:16:\n\n   90 |             if (btest(start, i) /= btest(goal, j)) then\n      |                1\nError: Logicals at (1) must be compared with .neqv. instead of /=\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2224": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:29:51:\n\n   29 |         read (current, fmt='(I2, A, I2)') hh_curr, ':', mm_curr\n      |                                                   1\nError: Expecting variable in READ statement at (1)\ntemp.f95:30:51:\n\n   30 |         read (correct, fmt='(I2, A, I2)') hh_corr, ':', mm_corr\n      |                                                   1\nError: Expecting variable in READ statement at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2229": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:14:4:\n\n   14 |     nums = [1, 3]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 2)\ntemp.f95:19:4:\n\n   19 |     nums = [3, 5, 4]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2231": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:27:23:\n\n   27 |         max_value = num\n      |                       1\nError: Function \u2018num\u2019 requires an argument list at (1)\ntemp.f95:11:22:\n\n   11 |     function solve(num) result(max_value)\n      |                      1\nError: PROCEDURE attribute conflicts with INTENT attribute in \u2018num\u2019 at (1)\ntemp.f95:21:20:\n\n   21 |                     num(i) = num(j)\n      |                    1\nError: The function result on the lhs of the assignment at (1) must have the pointer attribute.\ntemp.f95:22:20:\n\n   22 |                     num(j) = temp\n      |                    1\nError: The function result on the lhs of the assignment at (1) must have the pointer attribute.\ntemp.f95:18:30:\n\n   18 |             do j = i + 1, len(num)\n      |                              1\nError: \u2018string\u2019 argument of \u2018len\u2019 intrinsic at (1) must be CHARACTER\ntemp.f95:17:22:\n\n   17 |         do i = 1, len(num) - 1\n      |                      1\nError: \u2018string\u2019 argument of \u2018len\u2019 intrinsic at (1) must be CHARACTER\ntemp.f95:6:23:\n\n    6 |     print '(A)', solve(1234)\n      |                       1\nError: Expected a procedure for argument \u2018num\u2019 at (1)\ntemp.f95:7:23:\n\n    7 |     print '(A)', solve(65875)\n      |                       1\nError: Expected a procedure for argument \u2018num\u2019 at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2235": {
        "compiled": true,
        "executed": true,
        "stdout": "Example 1: 17\nExample 2: -6\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "2236": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:49:52:\n\n   49 |             result = check_balanced(root%left) .and. check_balanced(root%right)\n      |                                                    1\nError: Function \u2018check_balanced\u2019 at (1) cannot be called recursively, as it is not RECURSIVE\ntemp.f95:36:36:\n\n   36 |         write(*, '(A, L1)') 'Test ', result == expected\n      |                                    1\nError: Logicals at (1) must be compared with .eqv. instead of ==\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2239": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:11:4:\n\n   11 |     nums = [2, -1, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2243": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:48:12:\n\n   48 |         s = merge(s(1:j-1), s(j:))\n      |            1\nError: Missing actual argument \u2018mask\u2019 in call to \u2018merge\u2019 at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2248": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:33:17:\n\n   33 |                 result(k) = nums(i)(1)\n      |                 1\nError: Unclassifiable statement at (1)\ntemp.f95:26:39:\n\n   26 |                 if (all(nums(i) == nums(j))) then\n      |                                       1\nError: Rank mismatch in array reference at (1) (1/2)\ntemp.f95:37:17:\n\n   37 |         result = sort(result)\n      |                 1\nError: Function \u2018sort\u2019 at (1) has no IMPLICIT type\ntemp.f95:8:15:\n\n    8 |     call solve(nums, result)\n      |               1\nError: Rank mismatch in argument \u2018nums\u2019 at (1) (rank-2 and rank-1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2255": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 9 of file temp.f95\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7ae9dac03960 in ???\n#1  0x7ae9dac044d9 in ???\n#2  0x7ae9dae5817b in ???\n#3  0x7ae9dae51684 in ???\n#4  0x7ae9dae522aa in ???\n#5  0x5ae736fe64ff in MAIN__\n#6  0x5ae736fe6884 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2259": {
        "compiled": true,
        "executed": true,
        "stdout": " 12\n 231\n 51\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "2264": {
        "compiled": true,
        "executed": true,
        "stdout": "133\n**1\n233\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "2269": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:17:40:\n\n   17 | function k_beauty(num, k) result(beauty)\n      |                                        1\nError: Function result \u2018beauty\u2019 at (1) has no IMPLICIT type\ntemp.f95:20:22:\n\n   20 |     character(len=len(num)) :: str\n      |                      1\nError: \u2018string\u2019 argument of \u2018len\u2019 intrinsic at (1) must be CHARACTER\ntemp.f95:25:23:\n\n   25 |     str = trim(adjustl(num))\n      |                       1\nError: In call to \u2018adjustl\u2019 at (1), type mismatch in argument \u2018string\u2019; pass \u2018INTEGER(4)\u2019 to \u2018CHARACTER(*,0)\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2273": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:17:27:\n\n   17 |                 deallocate(words(i))\n      |                           1\nError: Allocate-object at (1) must be ALLOCATABLE or a POINTER\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2278": {
        "compiled": true,
        "executed": true,
        "stdout": "28\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "2283": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:39:16:\n\n   39 |             do j = 1, n\n      |                1\nError: Symbol \u2018j\u2019 at (1) has no IMPLICIT type\ntemp.f95:44:16:\n\n   44 |             if (count /= num(i+1:i+1)) then\n      |                1\nError: Operands of comparison operator \u2018/=\u2019 at (1) are INTEGER(4)/CHARACTER(*)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2287": {
        "compiled": true,
        "executed": true,
        "stdout": "           5\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "2299": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:29:70:\n\n   29 | character(len=100), parameter :: examples(3) = (/ '\"IloveLe3tcode! \"', &\n      |                                                                      1\nError: Different CHARACTER lengths (17/20) in array constructor at (1)\ntemp.f95:24:52:\n\n   24 |             .and. count(password == password(1:size(password)-1)) < 2\n      |                                                    1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:8:13:\n\n    8 |         read(examples(i), *) password\n      |             1\nError: Function \u2018examples\u2019 at (1) has no IMPLICIT type\ntemp.f95:7:27:\n\n    7 |     do i = 1, size(examples)\n      |                           1\nError: Symbol \u2018examples\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2303": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:19:\n\n    5 |     type(brackets) :: brackets\n      |                   1\nError: Derived type \u2018brackets\u2019 at (1) is being used before it is defined\ntemp.f95:23:24:\n\n   23 |         class(brackets), intent(in) :: brackets\n      |                        1\nError: Derived type \u2018brackets\u2019 at (1) is being used before it is defined\ntemp.f95:29:33:\n\n   29 |         do i = 1, size(brackets%upper)\n      |                                 1\nError: Symbol \u2018brackets\u2019 at (1) has no IMPLICIT type\ntemp.f95:30:36:\n\n   30 |             if (income >= brackets%upper(i)) then\n      |                                    1\nError: Symbol \u2018brackets\u2019 at (1) has no IMPLICIT type\ntemp.f95:31:48:\n\n   31 |                 tax = tax + (income - brackets%upper(i-1)) * brackets%percent(i) / 100.0_DP\n      |                                                1\nError: Symbol \u2018brackets\u2019 at (1) has no IMPLICIT type\ntemp.f95:32:16:\n\n   32 |             else\n      |                1\nError: Unexpected ELSE statement at (1)\ntemp.f95:33:20:\n\n   33 |                 exit\n      |                    1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:34:15:\n\n   34 |             end if\n      |               1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:35:11:\n\n   35 |         end do\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:1:12:\n\n    1 | program main\n      |            1\n......\n   40 | type, abstract :: brackets\n      |                          2\nError: Two main PROGRAMs at (1) and (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2309": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:61:21:\n\n   61 |             result = toupper(result)\n      |                     1\nError: Function \u2018toupper\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2315": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\n Input: l|\\*e\\*et|c\\*\\*o|\\*de|\n Output:            0\n \n Example 2:\n Input: iamprogrammer \n Output:            0\n \n Example 3:\n Input: yo|uar|e\\*\\*|b|e\\*\\*\\*au|tifu|l \n Output:            0\n \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "2319": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:23:25:\n\n   23 |     function is_x_matrix(grid) result(is_x)\n      |                         1\nError: Procedure \u2018is_x_matrix\u2019 at (1) has an explicit interface from a previous declaration\ntemp.f95:24:21:\n\n   24 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:25:41:\n\n   25 |         integer, intent(in) :: grid(:, :)\n      |                                         1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:26:23:\n\n   26 |         logical :: is_x\n      |                       1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:27:23:\n\n   27 |         integer :: i, j\n      |                       1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:29:21:\n\n   29 |         is_x = .true.\n      |                     1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:31:31:\n\n   31 |         do i = 1, size(grid, 1)\n      |                               1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:32:37:\n\n   32 |             if (grid(i, i) == 0) then\n      |                                     1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:33:30:\n\n   33 |                 is_x = .false.\n      |                              1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:34:20:\n\n   34 |                 exit\n      |                    1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:35:15:\n\n   35 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:36:11:\n\n   36 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:38:22:\n\n   38 |         if (is_x) then\n      |                      1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:39:39:\n\n   39 |             do i = 1, size(grid, 1) - 1\n      |                                       1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:40:43:\n\n   40 |                 do j = i + 1, size(grid, 2)\n      |                                           1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:41:45:\n\n   41 |                     if (grid(i, j) /= 0) then\n      |                                             1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:42:38:\n\n   42 |                         is_x = .false.\n      |                                      1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:43:28:\n\n   43 |                         exit\n      |                            1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:44:23:\n\n   44 |                     end if\n      |                       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:45:19:\n\n   45 |                 end do\n      |                   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:46:36:\n\n   46 |                 if (.not. is_x) exit\n      |                                    1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:47:15:\n\n   47 |             end do\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:48:11:\n\n   48 |         end if\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:50:22:\n\n   50 |         if (is_x) then\n      |                      1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:51:35:\n\n   51 |             do j = 1, size(grid, 2)\n      |                                   1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:52:41:\n\n   52 |                 if (grid(j, j) == 0) then\n      |                                         1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:53:34:\n\n   53 |                     is_x = .false.\n      |                                  1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:54:24:\n\n   54 |                     exit\n      |                        1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:55:19:\n\n   55 |                 end if\n      |                   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:56:15:\n\n   56 |             end do\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:57:11:\n\n   57 |         end if\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:59:7:\n\n   59 |     end function is_x_matrix\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:16:25:\n\n   16 |     grid(:, :) = reshape([5, 7, 0, &\n      |                         1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2325": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:33:8:\n\n   33 |         j = index(alphabet, order(i))\n      |        1\nError: Incompatible ranks 0 and 1 in assignment at (1)\ntemp.f95:43:12:\n\n   43 |             k = index(alphabet, message(i:i))\n      |            1\nError: Incompatible ranks 0 and 1 in assignment at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2331": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:22:\n\n    6 |     type(binary_tree), pointer :: root\n      |                      1\nError: Derived type \u2018binary_tree\u2019 at (1) is being used before it is defined\ntemp.f95:18:26:\n\n   18 |         type(binary_tree), pointer, intent(out) :: root\n      |                          1\nError: Derived type \u2018binary_tree\u2019 at (1) is being used before it is defined\ntemp.f95:21:17:\n\n   21 |         allocate(root)\n      |                 1\nError: Allocate-object at (1) is neither a data pointer nor an allocatable variable\ntemp.f95:23:18:\n\n   23 |             root%value = values(1)\n      |                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:25:18:\n\n   25 |             root%value = values(1)\n      |                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:27:31:\n\n   27 |                 allocate(root%left)\n      |                               1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:28:53:\n\n   28 |                 call build_tree(values(i:i+1), root%left)\n      |                                                     1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:31:31:\n\n   31 |                 allocate(root%right)\n      |                               1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:32:53:\n\n   32 |                 call build_tree(values(i:i+1), root%right)\n      |                                                     1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:39:26:\n\n   39 |         type(binary_tree), pointer, intent(in) :: root\n      |                          1\nError: Derived type \u2018binary_tree\u2019 at (1) is being used before it is defined\ntemp.f95:44:34:\n\n   44 |         else if (associated(root%left, root%right)) then\n      |                                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:45:41:\n\n   45 |             result = evaluate_tree(root%left) .and. evaluate_tree(root%right)\n      |                                         1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:46:34:\n\n   46 |         else if (associated(root%left)) then\n      |                                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:47:41:\n\n   47 |             result = evaluate_tree(root%left) .or. root%value == 1\n      |                                         1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:48:34:\n\n   48 |         else if (associated(root%right)) then\n      |                                  1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:49:41:\n\n   49 |             result = evaluate_tree(root%right) .or. root%value == 1\n      |                                         1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:51:27:\n\n   51 |             result = root%value == 1\n      |                           1\nError: Symbol \u2018root\u2019 at (1) has no IMPLICIT type\ntemp.f95:1:12:\n\n    1 | program main\n      |            1\n......\n   57 | type :: binary_tree\n      |                   2\nError: Two main PROGRAMs at (1) and (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2335": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:17:28:\n\n   17 |                          i = 0, amount(1) - 1, 1 ), &\n      |                            1\nError: Syntax error in array constructor at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2341": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:33:60:\n\n   33 |             i = minloc(nums, dim=1, mask=(nums == nums(1)))[1]\n      |                                                            1\nError: Coarray designator at (1) but \u2018minloc\u2019 is not a coarray\ntemp.f95:34:60:\n\n   34 |             j = maxloc(nums, dim=1, mask=(nums == nums(1)))[1]\n      |                                                            1\nError: Coarray designator at (1) but \u2018maxloc\u2019 is not a coarray\ntemp.f95:9:4:\n\n    9 |     nums = [1, 3, 2, 1, 3, 2, 2]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (8 and 7)\ntemp.f95:14:4:\n\n   14 |     nums = [1, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (8 and 2)\ntemp.f95:19:4:\n\n   19 |     nums = [0]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (8 and 1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2347": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:26:4:\n\n   26 |     function get_best_hand(ranks, suits) result(best_hand)\n      |    1\nError: Character-valued internal function \u2018get_best_hand\u2019 at (1) must not be assumed length\ntemp.f95:44:42:\n\n   44 |             if (flush_count < 1 .and. all(suits(i) == suits(1))) then\n      |                                          1\nError: \u2018mask\u2019 argument of \u2018all\u2019 intrinsic at (1) must be a logical array\ntemp.f95:46:54:\n\n   46 |             else if (three_kind_count < 1 .and. count(ranks(i) == ranks(1)) == 3) then\n      |                                                      1\nError: \u2018mask\u2019 argument of \u2018count\u2019 intrinsic at (1) must be a logical array\ntemp.f95:48:48:\n\n   48 |             else if (pair_count < 1 .and. count(ranks(i) == ranks(1)) == 2) then\n      |                                                1\nError: \u2018mask\u2019 argument of \u2018count\u2019 intrinsic at (1) must be a logical array\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2351": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 9 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x79f2d323f960 in ???\n#1  0x79f2d32404d9 in ???\n#2  0x79f2d349417b in ???\n#3  0x79f2d348d684 in ???\n#4  0x79f2d348e2aa in ???\n#5  0x5c1df4d2321c in MAIN__\n#6  0x5c1df4d2339f in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2357": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:34:28:\n\n   34 |             x = minval(nums(nums > 0), mask=nums > 0)\n      |                            1\nError: Array index at (1) must be of INTEGER type, found LOGICAL\ntemp.f95:38:20:\n\n   38 |                     nums(i) = nums(i) - x\n      |                    1\nError: Dummy argument \u2018nums\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:17:4:\n\n   17 |     nums = [0]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2363": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:49:\n\n    6 |     integer, dimension(n, 2) :: items2 = reshape([3,1,1,5],[n,2])\n      |                                                 1\nError: Without padding, there are not enough elements in the intrinsic RESHAPE source at (1) to match the shape\ntemp.f95:11:29:\n\n   11 |     call solve(items1, items2, ret)\n      |                             1\nError: Symbol \u2018items2\u2019 at (1) has no IMPLICIT type; did you mean \u2018items1\u2019?\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2367": {
        "compiled": true,
        "executed": true,
        "stdout": "Example 1: 2\nExample 2: 0\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "2373": {
        "compiled": true,
        "executed": true,
        "stdout": "Example 1:9 9 8 6\nExample 2:1 1 2 1\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "2379": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 8 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7fc234057960 in ???\n#1  0x7fc2340584d9 in ???\n#2  0x7fc2342ac17b in ???\n#3  0x7fc2342a5684 in ???\n#4  0x7fc2342a62aa in ???\n#5  0x582f6ba27219 in MAIN__\n#6  0x582f6ba273f8 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2383": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 7 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7a3ef21a9960 in ???\n#1  0x7a3ef21aa4d9 in ???\n#2  0x7a3ef23fe17b in ???\n#3  0x7a3ef23f7684 in ???\n#4  0x7a3ef23f82aa in ???\n#5  0x593602af620d in MAIN__\n#6  0x593602af6584 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2389": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "\nProgram received signal SIGSEGV: Segmentation fault - invalid memory reference.\n\nBacktrace for this error:\n#0  0x7d3415ce3960 in ???\n#1  0x7d3415ce2ac5 in ???\n#2  0x7d3415ad951f in ???\n#3  0x5bf0e0c67440 in solve.0\n#4  0x5bf0e0c6767e in MAIN__\n#5  0x5bf0e0c6782f in main\n",
        "exit_code": -11,
        "exec_success": "fail"
    },
    "2395": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:10:4:\n\n   10 |     nums = (/4, 2, 4/)\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (1000 and 3)\ntemp.f95:18:4:\n\n   18 |     nums = (/1, 2, 3, 4, 5/)\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (1000 and 5)\ntemp.f95:26:4:\n\n   26 |     nums = (/0, 0, 0/)\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (1000 and 3)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2399": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:10:4:\n\n   10 |     distance = [1,3,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (26 and 25)\ntemp.f95:15:4:\n\n   15 |     distance = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (26 and 25)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2404": {
        "compiled": true,
        "executed": true,
        "stdout": "4\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "2409": {
        "compiled": true,
        "executed": true,
        "stdout": "          11\n          11\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "2413": {
        "compiled": true,
        "executed": true,
        "stdout": "9\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "2418": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:33:53:\n\n   33 |                     call swap(heights(i), heights(j))\n      |                                                     1\nError: Type mismatch in argument \u2018a\u2019 at (1); passed INTEGER(4) to CHARACTER(*)\ntemp.f95:16:22:\n\n   16 |     names = [\"Alice \", \"Bob \", \"Bob \"]\n      |                      1\nError: Different CHARACTER lengths (6/4) in array constructor at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2423": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:63:20:\n\n   63 |                     word(i:i) = ' '\n      |                    1\nError: Dummy argument \u2018word\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:73:20:\n\n   73 |                     word(i:i) = ' '\n      |                    1\nError: Dummy argument \u2018word\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2427": {
        "compiled": true,
        "executed": true,
        "stdout": "4\n2\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "2432": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 8 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7e6ba8716960 in ???\n#1  0x7e6ba87174d9 in ???\n#2  0x7e6ba896b17b in ???\n#3  0x7e6ba8964684 in ???\n#4  0x7e6ba89652aa in ???\n#5  0x5cca4eaa628c in MAIN__\n#6  0x5cca4eaa670a in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2437": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:45:45:\n\n   45 |                                 if (i /= int(time(1:1)) - 48) then\n      |                                             1\nError: \u2018a\u2019 argument of \u2018int\u2019 intrinsic at (1) must have a numeric type\ntemp.f95:56:49:\n\n   56 |                                     if (j /= int(time(2:2)) - 48) then\n      |                                                 1\nError: \u2018a\u2019 argument of \u2018int\u2019 intrinsic at (1) must have a numeric type\ntemp.f95:68:49:\n\n   68 |                                     if (k /= int(time(3:3)) - 48) then\n      |                                                 1\nError: \u2018a\u2019 argument of \u2018int\u2019 intrinsic at (1) must have a numeric type\ntemp.f95:80:49:\n\n   80 |                                     if (l /= int(time(4:4)) - 48) then\n      |                                                 1\nError: \u2018a\u2019 argument of \u2018int\u2019 intrinsic at (1) must have a numeric type\ntemp.f95:92:49:\n\n   92 |                                     if (m /= int(time(5:5)) - 48) then\n      |                                                 1\nError: \u2018a\u2019 argument of \u2018int\u2019 intrinsic at (1) must have a numeric type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2441": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:31:12:\n\n   31 |         do i = 1, size(nums)\n      |            1\nError: Symbol \u2018i\u2019 at (1) has no IMPLICIT type\ntemp.f95:9:4:\n\n    9 |     nums = [-1, 2, -3, 3]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 4)\ntemp.f95:13:4:\n\n   13 |     nums = [-1, 10, 6, 7, -7, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 6)\ntemp.f95:17:4:\n\n   17 |     nums = [-10, 8, 6, 7, -2, -3]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 6)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2446": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\n event1 = 01:1502:00\n event2 = 02:0003:00\n Result:  T\n Example 2:\n event1 = 01:0002:00\n event2 = 01:2003:00\n Result:  F\n Example 3:\n event1 = 10:0011:00\n event2 = 14:0015:00\n Result:  F\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "2451": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:20:29:\n\n   20 |         integer :: diff(size(word)-1)\n      |                             1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:20:29:\n\n   20 |         integer :: diff(size(word)-1)\n      |                             1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:24:54:\n\n   24 |         diff = [(word(i+1:i+2) - word(i:i), i=1, size(word)-1)]\n      |                                                      1\nError: \u2018array\u2019 argument of \u2018size\u2019 intrinsic at (1) must be an array\ntemp.f95:24:17:\n\n   24 |         diff = [(word(i+1:i+2) - word(i:i), i=1, size(word)-1)]\n      |                 1\nError: Operands of binary numeric operator \u2018-\u2019 at (1) are CHARACTER(*)/CHARACTER(*)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2455": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 10 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x78f6d0850960 in ???\n#1  0x78f6d08514d9 in ???\n#2  0x78f6d0aa517b in ???\n#3  0x78f6d0a9e684 in ???\n#4  0x78f6d0a9f2aa in ???\n#5  0x5574cc6f7272 in MAIN__\n#6  0x5574cc6f75e4 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2460": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:15:4:\n\n   15 |     nums = [0, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (6 and 2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2465": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 9 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7e3dbab7f960 in ???\n#1  0x7e3dbab804d9 in ???\n#2  0x7e3dbadd417b in ???\n#3  0x7e3dbadcd684 in ???\n#4  0x7e3dbadce2aa in ???\n#5  0x564d660171da in MAIN__\n#6  0x564d660174b6 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2469": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\nCelsius =   36.50000; Kelvin =  309.64999\n; Fahrenheit =   97.70000\n Example 2:\nCelsius =  122.11000; Kelvin =  395.26001\n; Fahrenheit =  251.79799\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "2475": {
        "compiled": true,
        "executed": true,
        "stdout": "3\n0\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "full"
    },
    "2481": {
        "compiled": true,
        "executed": false,
        "stdout": "Enter the value of n:\n",
        "stderr": "At line 7 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7f70299d8960 in ???\n#1  0x7f70299d94d9 in ???\n#2  0x7f7029c2d17b in ???\n#3  0x7f7029c26684 in ???\n#4  0x7f7029c272aa in ???\n#5  0x568e04e3c2e2 in MAIN__\n#6  0x568e04e3c3c1 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2485": {
        "compiled": true,
        "executed": true,
        "stdout": "-1\n-1\n-1\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "2490": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:27:29:\n\n   27 |             if (words(iword)(len_trim(words(iword))) /= words(iword+1)(1)) then\n      |                             1\nError: Syntax error in IF-expression at (1)\ntemp.f95:30:15:\n\n   30 |             end if\n      |               1\nError: Expecting END DO statement at (1)\ntemp.f95:34:26:\n\n   34 |         if (words(nwords)(len_trim(words(nwords))) /= words(1)(1)) then\n      |                          1\nError: Syntax error in IF-expression at (1)\ntemp.f95:37:11:\n\n   37 |         end if\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:50:17:\n\n   50 |         allocate(words(nwords))\n      |                 1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:67:63:\n\n   67 | character(len=500), parameter :: examples(3) = [\"Hello World \", &\n      |                                                               1\nError: Different CHARACTER lengths (12/6) in array constructor at (1)\ntemp.f95:49:23:\n\n   49 |         nwords = count(str == ' ') + 1\n      |                       1\nError: \u2018mask\u2019 argument of \u2018count\u2019 intrinsic at (1) must be a logical array\ntemp.f95:8:19:\n\n    8 |         sentence = examples(i)\n      |                   1\nError: Function \u2018examples\u2019 at (1) has no IMPLICIT type\ntemp.f95:7:27:\n\n    7 |     do i = 1, size(examples)\n      |                           1\nError: Symbol \u2018examples\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2496": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:10:13:\n\n   10 |     allocate(strs(n))\n      |             1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:25:13:\n\n   25 |     allocate(strs(n))\n      |             1\nError: Allocate-object at (1) with a deferred type parameter requires either a type-spec or SOURCE tag or a MOLD tag\ntemp.f95:113:21:\n\n  113 |     end function max_\n      |                     1\nError: Expected label \u2018max_value\u2019 for END FUNCTION statement at (1)\nf951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2500": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:11:16:\n\n   11 |             if (grid(i, :) > max_val) then\n      |                1\nError: IF clause at (1) requires a scalar LOGICAL expression\ntemp.f95:12:16:\n\n   12 |                 max_val = grid(i, :)\n      |                1\nError: Incompatible ranks 0 and 1 in assignment at (1)\ntemp.f95:16:16:\n\n   16 |             if (grid(i, :) == max_val) then\n      |                1\nError: IF clause at (1) requires a scalar LOGICAL expression\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2506": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 8 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x7ca15d705960 in ???\n#1  0x7ca15d7064d9 in ???\n#2  0x7ca15d95a17b in ???\n#3  0x7ca15d953684 in ???\n#4  0x7ca15d9542aa in ???\n#5  0x55760bccc2e3 in MAIN__\n#6  0x55760bccc542 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2511": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:16:4:\n\n   16 |     forts = [0, 0, 1, -1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (9 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2515": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:86:16:\n\n   86 |                 startIndex = size(words)\n      |                1\nError: Dummy argument \u2018startindex\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\ntemp.f95:88:16:\n\n   88 |                 startIndex = startIndex - 1\n      |                1\nError: Dummy argument \u2018startindex\u2019 with INTENT(IN) in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2520": {
        "compiled": true,
        "executed": true,
        "stdout": " Example 1:\n Input:           7\n Output:           0\n \n Example 2:\n Input:         121\n Output:           0\n \n Example 3:\n Input:        1248\n Output:           0\n \n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "2525": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:55:18:\n\n   55 |     if (any(shape=\n      |                  1\nError: Syntax error in argument list at (1)\nf951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2529": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:33:\n\n    5 |     integer, parameter :: nums(4) = [-2, -1, -1, 1, 2, 3]\n      |                                 1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 6)\ntemp.f95:6:34:\n\n    6 |     integer, parameter :: nums2(6) = [-3, -2, -1, 0, 0, 1, 2]\n      |                                  1\nError: Different shape for array assignment at (1) on dimension 1 (6 and 7)\ntemp.f95:11:29:\n\n   11 |     call get_max_pos_neg(nums, pos, neg)\n      |                             1\nError: Symbol \u2018nums\u2019 at (1) has no IMPLICIT type; did you mean \u2018nums3\u2019?\ntemp.f95:15:30:\n\n   15 |     call get_max_pos_neg(nums2, pos, neg)\n      |                              1\nError: Symbol \u2018nums2\u2019 at (1) has no IMPLICIT type; did you mean \u2018nums3\u2019?\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2535": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:30:46:\n\n   30 |                 res = res + ichar(str(arr(i))(j:j)) - ichar('0')\n      |                                              1\nError: Syntax error in argument list at (1)\ntemp.f95:29:31:\n\n   29 |             do j = 1, len_trim(str(arr(i)))\n      |                               1\nError: Function \u2018str\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2540": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:6:35:\n\n    6 |     integer, dimension(n2) :: nums2 = [2, 4]\n      |                                   1\nError: Different shape for array assignment at (1) on dimension 1 (4 and 2)\ntemp.f95:10:59:\n\n   10 |     write (*, '(A, I0)') 'Example 1: ', min_integer_common(nums1, nums2)\n      |                                                           1\nError: Symbol at (1) is not appropriate for an expression\ntemp.f95:15:59:\n\n   15 |     write (*, '(A, I0)') 'Example 2: ', min_integer_common(nums1, nums2)\n      |                                                           1\nError: Symbol at (1) is not appropriate for an expression\ntemp.f95:19:60:\n\n   19 |     function min_integer_common(nums1, nums2) result(result)\n      |                                                            1\nError: PROGRAM attribute of \u2018min_integer_common\u2019 conflicts with PROCEDURE attribute at (1)\ntemp.f95:20:21:\n\n   20 |         implicit none\n      |                     1\nError: Unexpected IMPLICIT NONE statement in CONTAINS section at (1)\ntemp.f95:21:49:\n\n   21 |         integer, intent(in) :: nums1(:), nums2(:)\n      |                                                 1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:22:25:\n\n   22 |         integer :: result\n      |                         1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:23:24:\n\n   23 |         logical :: found\n      |                        1\nError: Unexpected data declaration statement in CONTAINS section at (1)\ntemp.f95:25:19:\n\n   25 |         result = -1\n      |                   1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:26:29:\n\n   26 |         do i = 1, size(nums1)\n      |                             1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:27:27:\n\n   27 |             found = .false.\n      |                           1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:28:33:\n\n   28 |             do j = 1, size(nums2)\n      |                                 1\nError: Unexpected DO statement in CONTAINS section at (1)\ntemp.f95:29:38:\n\n   29 |                 if (nums1(i) == nums2(j)) then\n      |                                      1\nError: Syntax error in IF-expression at (1)\ntemp.f95:30:34:\n\n   30 |                     found = .true.\n      |                                  1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:31:24:\n\n   31 |                     exit\n      |                        1\nError: EXIT statement at (1) is not within a construct\ntemp.f95:32:19:\n\n   32 |                 end if\n      |                   1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:33:15:\n\n   33 |             end do\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:34:27:\n\n   34 |             if (found) then\n      |                           1\nError: Unexpected block IF statement in CONTAINS section at (1)\ntemp.f95:35:46:\n\n   35 |                 result = max(result, nums1(i))\n      |                                              1\nError: Unexpected assignment statement in CONTAINS section at (1)\ntemp.f95:36:15:\n\n   36 |             end if\n      |               1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:37:11:\n\n   37 |         end do\n      |           1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:38:7:\n\n   38 |     end function min_integer_common\n      |       1\nError: Expecting END PROGRAM statement at (1)\ntemp.f95:14:9:\n\n   14 |     nums2 = [2, 3, 4, 5]\n      |         1\nError: Symbol \u2018nums2\u2019 at (1) has no IMPLICIT type; did you mean \u2018nums1\u2019?\ntemp.f95:13:4:\n\n   13 |     nums1 = [1, 2, 3, 6]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (3 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2544": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:13:8:\n\n   13 |         n = n / 10\n      |        1\nError: Named constant \u2018n\u2019 in variable definition context (assignment) at (1)\ntemp.f95:21:8:\n\n   21 |         n = n / 10\n      |        1\nError: Named constant \u2018n\u2019 in variable definition context (assignment) at (1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2549": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:61:27:\n\n   61 |         if (.not. any(board == x)) then\n      |                           1\nError: Symbol \u2018board\u2019 at (1) has no IMPLICIT type\ntemp.f95:54:40:\n\n   54 |         num_distinct = size(unique(board))\n      |                                        1\nError: Symbol \u2018board\u2019 at (1) has no IMPLICIT type\ntemp.f95:41:28:\n\n   41 |         do x = 1, size(board)\n      |                            1\nError: Symbol \u2018board\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2553": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:31:42:\n\n   31 |                 answer(i) = ichar(nums(i)(j:j)) - ichar('0') + 1\n      |                                          1\nError: Syntax error in argument list at (1)\ntemp.f95:27:26:\n\n   27 |                 j = index(nums(i), '0', back=.true.)\n      |                          1\nError: \u2018string\u2019 argument of \u2018index\u2019 intrinsic at (1) must be CHARACTER\ntemp.f95:26:31:\n\n   26 |             do while (k <= len(nums(i)))\n      |                               1\nError: \u2018string\u2019 argument of \u2018len\u2019 intrinsic at (1) must be CHARACTER\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2558": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:13:4:\n\n   13 |     gifts = [1, 1, 1, 1]\n      |    1\nError: Different shape for array assignment at (1) on dimension 1 (5 and 4)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2562": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 7 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x78415e9fd960 in ???\n#1  0x78415e9fe4d9 in ???\n#2  0x78415ec5217b in ???\n#3  0x78415ec4b684 in ???\n#4  0x78415ec4c2aa in ???\n#5  0x5d387510f246 in MAIN__\n#6  0x5d387510f470 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2566": {
        "compiled": true,
        "executed": true,
        "stdout": "11899\n23017\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "2570": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:11:29:\n\n   11 |     call merge_sorted_arrays(nums1, nums2, result)\n      |                             1\nError: Rank mismatch in argument \u2018nums1\u2019 at (1) (rank-2 and rank-1)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2574": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:23:12:\n\n   23 |         do i = 1, size(nums)\n      |            1\nError: Symbol \u2018i\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2578": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:31:33:\n\n   31 |             count(ichar(str(num)(i:i))) = count(ichar(str(num)(i:i))) + 1\n      |                                 1\nError: Syntax error in argument list at (1)\ntemp.f95:120:14:\n\n  120 |             if\n      |              1\nError: Missing \u2018(\u2019 in IF-expression at (1)\nf951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2582": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:1:12:\n\n    1 | program main\n      |            1\n......\n   34 |     3, 2], shape(examples))\n      |                           2\nError: Two main PROGRAMs at (1) and (2)\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2586": {
        "compiled": true,
        "executed": false,
        "stdout": "",
        "stderr": "At line 9 of file temp.f95 (unit = 5, file = 'stdin')\nFortran runtime error: End of file\n\nError termination. Backtrace:\n#0  0x78d619485960 in ???\n#1  0x78d6194864d9 in ???\n#2  0x78d6196da17b in ???\n#3  0x78d6196d3684 in ???\n#4  0x78d6196d42aa in ???\n#5  0x5b5f2463222a in MAIN__\n#6  0x5b5f246325f9 in main\n",
        "exit_code": 2,
        "exec_success": ""
    },
    "2591": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:109:24:\n\n  109 |                 do k = 1\n      |                        1\nError: Syntax error in iterator at (1)\nf951: Error: Unexpected end of file in \u2018temp.f95\u2019\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2595": {
        "compiled": true,
        "executed": true,
        "stdout": "Answer: 871069698,-2124738402\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "fail"
    },
    "2600": {
        "compiled": true,
        "executed": true,
        "stdout": "The maximum possible sum is 1 + 1 + 0 = 2\nThe maximum possible sum is 2 + 2 + 0 = 4\n",
        "stderr": "",
        "exit_code": 0,
        "exec_success": "partial"
    },
    "2605": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:5:34:\n\n    5 |     integer, dimension(n) :: nums1 = [4, 1, 3], nums2 = [5, 7]\n      |                                  1\nError: Different shape for array assignment at (1) on dimension 1 (9 and 3)\ntemp.f95:24:29:\n\n   24 |         min_num = huge(1_I8P)\n      |                             1\nError: Missing kind-parameter at (1)\ntemp.f95:36:34:\n\n   36 |         if (min_num == huge(1_I8P)) then\n      |                                  1\nError: Missing kind-parameter at (1)\ntemp.f95:38:11:\n\n   38 |         end if\n      |           1\nError: Expecting END FUNCTION statement at (1)\ntemp.f95:9:25:\n\n    9 |     min_num = solve(nums1, nums2)\n      |                         1\nError: Symbol \u2018nums1\u2019 at (1) has no IMPLICIT type\ntemp.f95:9:32:\n\n    9 |     min_num = solve(nums1, nums2)\n      |                                1\nError: Symbol \u2018nums2\u2019 at (1) has no IMPLICIT type\n",
        "exit_code": 1,
        "exec_success": ""
    },
    "2609": {
        "compiled": false,
        "executed": false,
        "stdout": "",
        "stderr": "temp.f95:51:24:\n\n   51 |                 if (any(s(i+1:) /= \"0\")) then\n      |                        1\nError: \u2018mask\u2019 argument of \u2018any\u2019 intrinsic at (1) must be a logical array\ntemp.f95:56:24:\n\n   56 |                 if (any(s(i-1:) /= \"1\")) then\n      |                        1\nError: \u2018mask\u2019 argument of \u2018any\u2019 intrinsic at (1) must be a logical array\n",
        "exit_code": 1,
        "exec_success": ""
    }
}